/home/ml2169/miniforge3/envs/rna/lib/python3.10/site-packages/Bio/Application/__init__.py:39: BiopythonDeprecationWarning: The Bio.Application modules and modules relying on it have been deprecated.

Due to the on going maintenance burden of keeping command line application
wrappers up to date, we have decided to deprecate and eventually remove these
modules.

We instead now recommend building your command line and invoking it directly
with the subprocess module.
  warnings.warn(
/rds/user/ml2169/hpc-work/geometric-rna-design/test/../gRNAde_mod.py:139: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  self.model.load_state_dict(torch.load(self.model_path, map_location=torch.device('cpu')))
Arguments:
  run_type: single
Instantiating gRNAde v0.3
    Using device: cpu
    Creating RNA graph featurizer for max_num_conformers=1
    Initialising GNN encoder-decoder model
    Loading model checkpoint: /rds/user/ml2169/hpc-work/geometric-rna-design/checkpoints/gRNAde_ARv1_1state_das.h5
Finished initialising gRNAde v0.3

Coords: 67
Sequence: GGACAUAUAAUCGCGUGGAUAUGGCACGCAAGUUUCUACCGGGCACCGUAAAUGUCCGACUAUGUCC
Len sequence: 67
Detected base pairs: [[   0 1402]
 [  20 1382]
 [  43 1362]
 [  65 1339]
 [  85 1319]
 [ 107 1297]
 [ 127  687]
 [ 149  787]
 [ 213  642]
 [ 233  620]
 [ 253  600]
 [ 276  577]
 [ 296  557]
 [ 319  535]
 [ 339  515]
 [ 407 1065]
 [ 427 1043]
 [ 469  980]
 [ 492  960]
 [ 664  809]
 [ 829 1212]
 [ 849 1192]
 [ 872 1172]
 [ 895 1152]
 [ 918 1129]
 [ 938 1109]]
Secondary structure: '((((((({..(((((((..[[.[[)))))))[)....}]((((((]]..]].))))))...))))))'
Sequence length: 67
Number of residues: 67
Chain IDs: ['B']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
(((((((...(((((((.......))))))).)......((((((.......))))))...))))))
Batch size:  (66, 66)
Number of nodes:  66
edge_index: tensor([[[ 0,  0,  0,  ..., 65, 65, 65],
         [ 1,  2,  3,  ..., 62, 63, 64]],

        [[ 0,  0,  0,  ..., 65, 65, 65],
         [ 1,  2,  3,  ..., 62, 63, 64]],

        [[ 0,  0,  0,  ..., 65, 65, 65],
         [ 1,  2,  3,  ..., 62, 63, 64]],

        ...,

        [[ 0,  0,  0,  ..., 65, 65, 65],
         [ 1,  2,  3,  ..., 62, 63, 64]],

        [[ 0,  0,  0,  ..., 65, 65, 65],
         [ 1,  2,  3,  ..., 62, 63, 64]],

        [[ 0,  0,  0,  ..., 65, 65, 65],
         [ 1,  2,  3,  ..., 62, 63, 64]]])
offset size: torch.Size([16, 1, 1])
offset: tensor([[[  0]],

        [[ 66]],

        [[132]],

        [[198]],

        [[264]],

        [[330]],

        [[396]],

        [[462]],

        [[528]],

        [[594]],

        [[660]],

        [[726]],

        [[792]],

        [[858]],

        [[924]],

        [[990]]])
Iteration :  0
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [1],
        [1],
        [0],
        [2],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [1],
        [0],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.1338, 0.6536, 0.6536, 0.1697, 0.1338, 0.6536, 0.6536, 0.6536, 0.6536,
         0.6536, 0.6536, 0.6536, 0.1697, 0.6536, 0.1697, 0.6536]])
scores: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
new_beam_scores: tensor([[0.1338, 0.6536, 0.6536, 0.1697, 0.1338, 0.6536, 0.6536, 0.6536, 0.6536,
         0.6536, 0.6536, 0.6536, 0.1697, 0.6536, 0.1697, 0.6536]])
new_beam seq: tensor([[2, 1, 1, 0, 2, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[0.1338, 0.6536, 0.6536, 0.1697, 0.1338, 0.6536, 0.6536, 0.6536, 0.6536,
         0.6536, 0.6536, 0.6536, 0.1697, 0.6536, 0.1697, 0.6536]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 1, 1, 0, 2, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 0,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  1
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [0],
        [1],
        [0],
        [0],
        [2],
        [2],
        [2],
        [1],
        [2],
        [1],
        [1],
        [1],
        [1],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.0615, 0.0464, 0.1556, 0.4661, 0.1792, 0.1556, 0.3296, 0.3296, 0.3296,
         0.4684, 0.3296, 0.4684, 0.4661, 0.4684, 0.4661, 0.0464]])
scores: tensor([0.1338, 0.6536, 0.6536, 0.1697, 0.1338, 0.6536, 0.6536, 0.6536, 0.6536,
        0.6536, 0.6536, 0.6536, 0.1697, 0.6536, 0.1697, 0.6536])
new_beam_scores: tensor([[0.1952, 0.7000, 0.8092, 0.6358, 0.3130, 0.8092, 0.9832, 0.9832, 0.9832,
         1.1220, 0.9832, 1.1220, 0.6358, 1.1220, 0.6358, 0.7000]])
new_beam seq: tensor([[3, 3, 0, 1, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[0.1952, 0.7000, 0.8092, 0.6358, 0.3130, 0.8092, 0.9832, 0.9832, 0.9832,
         1.1220, 0.9832, 1.1220, 0.6358, 1.1220, 0.6358, 0.7000]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 0, 1, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 0,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  2
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [0],
        [1],
        [2],
        [2],
        [1],
        [1],
        [1],
        [1],
        [3],
        [1],
        [2],
        [2],
        [0],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.5547, 0.5558, 0.0894, 0.3197, 0.5154, 0.5453, 0.4356, 0.4356, 0.4356,
         0.3469, 0.0671, 0.3469, 0.4491, 0.4995, 0.1372, 0.0944]])
scores: tensor([0.1952, 0.7000, 0.8092, 0.6358, 0.3130, 0.8092, 0.9832, 0.9832, 0.9832,
        1.1220, 0.9832, 1.1220, 0.6358, 1.1220, 0.6358, 0.7000])
new_beam_scores: tensor([[0.7499, 1.2558, 0.8987, 0.9554, 0.8284, 1.3545, 1.4188, 1.4188, 1.4188,
         1.4689, 1.0504, 1.4689, 1.0849, 1.6215, 0.7730, 0.7944]])
new_beam seq: tensor([[2, 2, 0, 1, 2, 2, 1, 1, 1, 1, 3, 1, 2, 2, 0, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[0.7499, 1.2558, 0.8987, 0.9554, 0.8284, 1.3545, 1.4188, 1.4188, 1.4188,
         1.4689, 1.0504, 1.4689, 1.0849, 1.6215, 0.7730, 0.7944]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 0, 1, 2, 2, 1, 1, 1, 1, 3, 1, 2, 2, 0, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  3
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [0],
        [3],
        [2],
        [2],
        [0],
        [3],
        [0],
        [0],
        [3],
        [0],
        [1],
        [0],
        [2],
        [0],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.3804, 0.4539, 0.3246, 0.1283, 0.1110, 0.4872, 0.3524, 0.3709, 0.3709,
         0.4194, 0.3126, 0.0605, 0.5411, 0.1412, 0.4323, 0.3114]])
scores: tensor([0.7499, 1.2558, 0.8987, 0.9554, 0.8284, 1.3545, 1.4188, 1.4188, 1.4188,
        1.4689, 1.0504, 1.4689, 1.0849, 1.6215, 0.7730, 0.7944])
new_beam_scores: tensor([[1.1303, 1.7097, 1.2233, 1.0837, 0.9394, 1.8417, 1.7712, 1.7897, 1.7897,
         1.8883, 1.3630, 1.5295, 1.6260, 1.7627, 1.2052, 1.1057]])
new_beam seq: tensor([[3, 0, 3, 2, 2, 0, 3, 0, 0, 3, 0, 1, 0, 2, 0, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[1.1303, 1.7097, 1.2233, 1.0837, 0.9394, 1.8417, 1.7712, 1.7897, 1.7897,
         1.8883, 1.3630, 1.5295, 1.6260, 1.7627, 1.2052, 1.1057]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 0, 3, 2, 2, 0, 3, 0, 0, 3, 0, 1, 0, 2, 0, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  4
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [3],
        [0],
        [0],
        [2],
        [3],
        [1],
        [1],
        [3],
        [2],
        [3],
        [3],
        [3],
        [0],
        [1],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.1378, 0.2512, 0.5423, 0.8347, 0.0436, 0.2747, 0.2568, 0.1923, 0.2876,
         0.0835, 0.2426, 0.3594, 0.2715, 0.7429, 0.1762, 0.6833]])
scores: tensor([1.1303, 1.7097, 1.2233, 1.0837, 0.9394, 1.8417, 1.7712, 1.7897, 1.7897,
        1.8883, 1.3630, 1.5295, 1.6260, 1.7627, 1.2052, 1.1057])
new_beam_scores: tensor([[1.2681, 1.9609, 1.7656, 1.9184, 0.9830, 2.1163, 2.0281, 1.9820, 2.0773,
         1.9719, 1.6056, 1.8888, 1.8975, 2.5057, 1.3814, 1.7890]])
new_beam seq: tensor([[1, 3, 0, 0, 2, 3, 1, 1, 3, 2, 3, 3, 3, 0, 1, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[1.2681, 1.9609, 1.7656, 1.9184, 0.9830, 2.1163, 2.0281, 1.9820, 2.0773,
         1.9719, 1.6056, 1.8888, 1.8975, 2.5057, 1.3814, 1.7890]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 3, 0, 0, 2, 3, 1, 1, 3, 2, 3, 3, 3, 0, 1, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  5
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9376, 0.9376, 0.9406, 0.9318, 0.9340, 0.9368, 0.9322, 0.9259, 0.9339,
         0.9367, 0.9372, 0.9333, 0.9364, 0.9299, 0.9314, 0.9427]])
scores: tensor([1.2681, 1.9609, 1.7656, 1.9184, 0.9830, 2.1163, 2.0281, 1.9820, 2.0773,
        1.9719, 1.6056, 1.8888, 1.8975, 2.5057, 1.3814, 1.7890])
new_beam_scores: tensor([[2.2057, 2.8985, 2.7062, 2.8502, 1.9170, 3.0531, 2.9602, 2.9080, 3.0111,
         2.9085, 2.5428, 2.8222, 2.8339, 3.4356, 2.3128, 2.7317]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[2.2057, 2.8985, 2.7062, 2.8502, 1.9170, 3.0531, 2.9602, 2.9080, 3.0111,
         2.9085, 2.5428, 2.8222, 2.8339, 3.4356, 2.3128, 2.7317]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  6
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9416, 0.9396, 0.9342, 0.9338, 0.9296, 0.9392, 0.9424, 0.9413, 0.9379,
         0.9393, 0.9317, 0.9387, 0.9398, 0.9275, 0.9399, 0.9340]])
scores: tensor([2.2057, 2.8985, 2.7062, 2.8502, 1.9170, 3.0531, 2.9602, 2.9080, 3.0111,
        2.9085, 2.5428, 2.8222, 2.8339, 3.4356, 2.3128, 2.7317])
new_beam_scores: tensor([[3.1473, 3.8381, 3.6404, 3.7840, 2.8466, 3.9923, 3.9026, 3.8493, 3.9490,
         3.8479, 3.4745, 3.7609, 3.7737, 4.3631, 3.2526, 3.6658]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[3.1473, 3.8381, 3.6404, 3.7840, 2.8466, 3.9923, 3.9026, 3.8493, 3.9490,
         3.8479, 3.4745, 3.7609, 3.7737, 4.3631, 3.2526, 3.6658]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  7
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9528, 0.9525, 0.9519, 0.9557, 0.9422, 0.9507, 0.9617, 0.9614, 0.9597,
         0.9590, 0.9568, 0.9594, 0.9525, 0.9515, 0.9570, 0.0160]])
scores: tensor([3.1473, 3.8381, 3.6404, 3.7840, 2.8466, 3.9923, 3.9026, 3.8493, 3.9490,
        3.8479, 3.4745, 3.7609, 3.7737, 4.3631, 3.2526, 3.6658])
new_beam_scores: tensor([[4.1001, 4.7906, 4.5923, 4.7397, 3.7888, 4.9430, 4.8643, 4.8107, 4.9087,
         4.8069, 4.4313, 4.7203, 4.7262, 5.3146, 4.2096, 3.6817]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[4.1001, 4.7906, 4.5923, 4.7397, 3.7888, 4.9430, 4.8643, 4.8107, 4.9087,
         4.8069, 4.4313, 4.7203, 4.7262, 5.3146, 4.2096, 3.6817]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  8
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9466, 0.9446, 0.9426, 0.9458, 0.9460, 0.9443, 0.9478, 0.9476, 0.9456,
         0.9468, 0.9433, 0.9467, 0.9437, 0.9472, 0.9439, 0.9468]])
scores: tensor([4.1001, 4.7906, 4.5923, 4.7397, 3.7888, 4.9430, 4.8643, 4.8107, 4.9087,
        4.8069, 4.4313, 4.7203, 4.7262, 5.3146, 4.2096, 3.6817])
new_beam_scores: tensor([[5.0467, 5.7352, 5.5350, 5.6855, 4.7348, 5.8873, 5.8121, 5.7583, 5.8543,
         5.7537, 5.3746, 5.6670, 5.6699, 6.2618, 5.1535, 4.6285]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[5.0467, 5.7352, 5.5350, 5.6855, 4.7348, 5.8873, 5.8121, 5.7583, 5.8543,
         5.7537, 5.3746, 5.6670, 5.6699, 6.2618, 5.1535, 4.6285]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  9
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [2],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.7903, 0.7847, 0.0599, 0.7980, 0.8182, 0.7840, 0.7831, 0.7821, 0.7792,
         0.8052, 0.7696, 0.7887, 0.7877, 0.7965, 0.7882, 0.1204]])
scores: tensor([5.0467, 5.7352, 5.5350, 5.6855, 4.7348, 5.8873, 5.8121, 5.7583, 5.8543,
        5.7537, 5.3746, 5.6670, 5.6699, 6.2618, 5.1535, 4.6285])
new_beam_scores: tensor([[5.8370, 6.5198, 5.5949, 6.4835, 5.5530, 6.6712, 6.5952, 6.5404, 6.6335,
         6.5589, 6.1441, 6.4558, 6.4576, 7.0582, 5.9417, 4.7490]])
new_beam seq: tensor([[3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[5.8370, 6.5198, 5.5949, 6.4835, 5.5530, 6.6712, 6.5952, 6.5404, 6.6335,
         6.5589, 6.1441, 6.4558, 6.4576, 7.0582, 5.9417, 4.7490]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  10
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [3],
        [2],
        [2],
        [1],
        [1],
        [2],
        [3],
        [2],
        [2],
        [3],
        [0],
        [2],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.5494, 0.3865, 0.3477, 0.4864, 0.6533, 0.4086, 0.3196, 0.5021, 0.1455,
         0.5148, 0.3562, 0.1120, 0.0480, 0.5255, 0.3810, 0.4892]])
scores: tensor([5.8370, 6.5198, 5.5949, 6.4835, 5.5530, 6.6712, 6.5952, 6.5404, 6.6335,
        6.5589, 6.1441, 6.4558, 6.4576, 7.0582, 5.9417, 4.7490])
new_beam_scores: tensor([[6.3864, 6.9064, 5.9426, 6.9699, 6.2063, 7.0799, 6.9147, 7.0424, 6.7790,
         7.0737, 6.5004, 6.5678, 6.5056, 7.5838, 6.3228, 5.2381]])
new_beam seq: tensor([[2, 2, 3, 2, 2, 1, 1, 2, 3, 2, 2, 3, 0, 2, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[6.3864, 6.9064, 5.9426, 6.9699, 6.2063, 7.0799, 6.9147, 7.0424, 6.7790,
         7.0737, 6.5004, 6.5678, 6.5056, 7.5838, 6.3228, 5.2381]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 3, 2, 2, 1, 1, 2, 3, 2, 2, 3, 0, 2, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  11
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [3],
        [2],
        [2],
        [3],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9062, 0.8904, 0.8556, 0.8910, 0.9158, 0.8597, 0.8879, 0.9100, 0.8281,
         0.0501, 0.8915, 0.8276, 0.1096, 0.9057, 0.8549, 0.9412]])
scores: tensor([6.3864, 6.9064, 5.9426, 6.9699, 6.2063, 7.0799, 6.9147, 7.0424, 6.7790,
        7.0737, 6.5004, 6.5678, 6.5056, 7.5838, 6.3228, 5.2381])
new_beam_scores: tensor([[7.2926, 7.7968, 6.7982, 7.8610, 7.1221, 7.9395, 7.8026, 7.9524, 7.6071,
         7.1238, 7.3918, 7.3954, 6.6152, 8.4895, 7.1777, 6.1793]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[7.2926, 7.7968, 6.7982, 7.8610, 7.1221, 7.9395, 7.8026, 7.9524, 7.6071,
         7.1238, 7.3918, 7.3954, 6.6152, 8.4895, 7.1777, 6.1793]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  12
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [1],
        [2],
        [2],
        [3],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.8806, 0.8716, 0.9065, 0.8753, 0.8887, 0.8785, 0.8910, 0.8856, 0.8946,
         0.8955, 0.0331, 0.8963, 0.8669, 0.0401, 0.8757, 0.8900]])
scores: tensor([7.2926, 7.7968, 6.7982, 7.8610, 7.1221, 7.9395, 7.8026, 7.9524, 7.6071,
        7.1238, 7.3918, 7.3954, 6.6152, 8.4895, 7.1777, 6.1793])
new_beam_scores: tensor([[8.1732, 8.6684, 7.7047, 8.7363, 8.0108, 8.8180, 8.6936, 8.8380, 8.5017,
         8.0193, 7.4249, 8.2916, 7.4821, 8.5295, 8.0533, 7.0693]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 3, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[8.1732, 8.6684, 7.7047, 8.7363, 8.0108, 8.8180, 8.6936, 8.8380, 8.5017,
         8.0193, 7.4249, 8.2916, 7.4821, 8.5295, 8.0533, 7.0693]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 3, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  13
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [2],
        [3],
        [0],
        [2],
        [0],
        [2],
        [0],
        [2],
        [0],
        [0],
        [0],
        [0],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.3859, 0.3774, 0.2675, 0.2831, 0.3741, 0.1833, 0.5093, 0.2816, 0.4395,
         0.2446, 0.7768, 0.4485, 0.4239, 0.2771, 0.2612, 0.2293]])
scores: tensor([8.1732, 8.6684, 7.7047, 8.7363, 8.0108, 8.8180, 8.6936, 8.8380, 8.5017,
        8.0193, 7.4249, 8.2916, 7.4821, 8.5295, 8.0533, 7.0693])
new_beam_scores: tensor([[8.5592, 9.0457, 7.9722, 9.0194, 8.3849, 9.0013, 9.2029, 9.1197, 8.9412,
         8.2639, 8.2016, 8.7402, 7.9060, 8.8067, 8.3146, 7.2985]])
new_beam seq: tensor([[0, 0, 2, 3, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[8.5592, 9.0457, 7.9722, 9.0194, 8.3849, 9.0013, 9.2029, 9.1197, 8.9412,
         8.2639, 8.2016, 8.7402, 7.9060, 8.8067, 8.3146, 7.2985]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 2, 3, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  14
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [2],
        [0],
        [0],
        [2],
        [3],
        [3],
        [3],
        [0],
        [3],
        [0],
        [3],
        [0],
        [0],
        [3],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.6334, 0.0593, 0.7112, 0.4684, 0.0641, 0.2042, 0.2855, 0.1870, 0.6147,
         0.1920, 0.5621, 0.2914, 0.5997, 0.6421, 0.3498, 0.0933]])
scores: tensor([8.5592, 9.0457, 7.9722, 9.0194, 8.3849, 9.0013, 9.2029, 9.1197, 8.9412,
        8.2639, 8.2016, 8.7402, 7.9060, 8.8067, 8.3146, 7.2985])
new_beam_scores: tensor([[9.1926, 9.1050, 8.6833, 9.4878, 8.4491, 9.2055, 9.4884, 9.3066, 9.5559,
         8.4560, 8.7637, 9.0316, 8.5058, 9.4488, 8.6644, 7.3918]])
new_beam seq: tensor([[0, 2, 0, 0, 2, 3, 3, 3, 0, 3, 0, 3, 0, 0, 3, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[9.1926, 9.1050, 8.6833, 9.4878, 8.4491, 9.2055, 9.4884, 9.3066, 9.5559,
         8.4560, 8.7637, 9.0316, 8.5058, 9.4488, 8.6644, 7.3918]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 2, 0, 0, 2, 3, 3, 3, 0, 3, 0, 3, 0, 0, 3, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  15
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [1],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [1],
        [2],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.7250, 0.0404, 0.8188, 0.8608, 0.7928, 0.9462, 0.9272, 0.9505, 0.7510,
         0.9422, 0.6197, 0.9335, 0.6716, 0.1196, 0.9494, 0.0851]])
scores: tensor([9.1926, 9.1050, 8.6833, 9.4878, 8.4491, 9.2055, 9.4884, 9.3066, 9.5559,
        8.4560, 8.7637, 9.0316, 8.5058, 9.4488, 8.6644, 7.3918])
new_beam_scores: tensor([[ 9.9176,  9.1454,  9.5021, 10.3486,  9.2419, 10.1517, 10.4156, 10.2572,
         10.3069,  9.3982,  9.3834,  9.9651,  9.1774,  9.5684,  9.6138,  7.4769]])
new_beam seq: tensor([[2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[ 9.9176,  9.1454,  9.5021, 10.3486,  9.2419, 10.1517, 10.4156, 10.2572,
         10.3069,  9.3982,  9.3834,  9.9651,  9.1774,  9.5684,  9.6138,  7.4769]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  16
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.7945, 0.8113, 0.8327, 0.7588, 0.8406, 0.8014, 0.7804, 0.8375, 0.2088,
         0.7762, 0.7682, 0.7322, 0.6405, 0.7329, 0.2444, 0.1428]])
scores: tensor([ 9.9176,  9.1454,  9.5021, 10.3486,  9.2419, 10.1517, 10.4156, 10.2572,
        10.3069,  9.3982,  9.3834,  9.9651,  9.1774,  9.5684,  9.6138,  7.4769])
new_beam_scores: tensor([[10.7122,  9.9567, 10.3348, 11.1074, 10.0825, 10.9530, 11.1960, 11.0947,
         10.5158, 10.1744, 10.1516, 10.6973,  9.8179, 10.3013,  9.8582,  7.6197]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[10.7122,  9.9567, 10.3348, 11.1074, 10.0825, 10.9530, 11.1960, 11.0947,
         10.5158, 10.1744, 10.1516, 10.6973,  9.8179, 10.3013,  9.8582,  7.6197]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  17
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [3],
        [0],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [1],
        [2],
        [3],
        [2],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.6637, 0.6141, 0.1536, 0.0848, 0.7411, 0.7349, 0.6641, 0.7390, 0.5646,
         0.7407, 0.6676, 0.0425, 0.6583, 0.4198, 0.5186, 0.1488]])
scores: tensor([10.7122,  9.9567, 10.3348, 11.1074, 10.0825, 10.9530, 11.1960, 11.0947,
        10.5158, 10.1744, 10.1516, 10.6973,  9.8179, 10.3013,  9.8582,  7.6197])
new_beam_scores: tensor([[11.3759, 10.5709, 10.4885, 11.1922, 10.8236, 11.6879, 11.8601, 11.8337,
         11.0803, 10.9150, 10.8193, 10.7398, 10.4762, 10.7211, 10.3768,  7.7685]])
new_beam seq: tensor([[2, 2, 3, 0, 2, 2, 2, 2, 2, 2, 2, 1, 2, 3, 2, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[11.3759, 10.5709, 10.4885, 11.1922, 10.8236, 11.6879, 11.8601, 11.8337,
         11.0803, 10.9150, 10.8193, 10.7398, 10.4762, 10.7211, 10.3768,  7.7685]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 3, 0, 2, 2, 2, 2, 2, 2, 2, 1, 2, 3, 2, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  18
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9745, 0.9753, 0.9645, 0.9741, 0.9741, 0.9755, 0.9754, 0.9756, 0.9717,
         0.9756, 0.9757, 0.9789, 0.9749, 0.9613, 0.9731, 0.9774]])
scores: tensor([11.3759, 10.5709, 10.4885, 11.1922, 10.8236, 11.6879, 11.8601, 11.8337,
        11.0803, 10.9150, 10.8193, 10.7398, 10.4762, 10.7211, 10.3768,  7.7685])
new_beam_scores: tensor([[12.3504, 11.5461, 11.4529, 12.1663, 11.7977, 12.6634, 12.8355, 12.8093,
         12.0521, 11.8907, 11.7950, 11.7186, 11.4511, 11.6824, 11.3499,  8.7458]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[12.3504, 11.5461, 11.4529, 12.1663, 11.7977, 12.6634, 12.8355, 12.8093,
         12.0521, 11.8907, 11.7950, 11.7186, 11.4511, 11.6824, 11.3499,  8.7458]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  19
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9489, 0.9546, 0.9531, 0.9416, 0.9556, 0.9595, 0.9516, 0.9601, 0.9399,
         0.9595, 0.9460, 0.9530, 0.9466, 0.9238, 0.9471, 0.9524]])
scores: tensor([12.3504, 11.5461, 11.4529, 12.1663, 11.7977, 12.6634, 12.8355, 12.8093,
        12.0521, 11.8907, 11.7950, 11.7186, 11.4511, 11.6824, 11.3499,  8.7458])
new_beam_scores: tensor([[13.2993, 12.5007, 12.4060, 13.1079, 12.7533, 13.6229, 13.7871, 13.7694,
         12.9920, 12.8502, 12.7410, 12.6717, 12.3977, 12.6061, 12.2970,  9.6983]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[13.2993, 12.5007, 12.4060, 13.1079, 12.7533, 13.6229, 13.7871, 13.7694,
         12.9920, 12.8502, 12.7410, 12.6717, 12.3977, 12.6061, 12.2970,  9.6983]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  20
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [0],
        [0],
        [3],
        [3],
        [3],
        [3],
        [1],
        [3],
        [3],
        [1],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.5154, 0.4811, 0.5749, 0.1948, 0.1916, 0.4534, 0.4703, 0.4418, 0.5934,
         0.1938, 0.5105, 0.5637, 0.1313, 0.6797, 0.5492, 0.6671]])
scores: tensor([13.2993, 12.5007, 12.4060, 13.1079, 12.7533, 13.6229, 13.7871, 13.7694,
        12.9920, 12.8502, 12.7410, 12.6717, 12.3977, 12.6061, 12.2970,  9.6983])
new_beam_scores: tensor([[13.8147, 12.9818, 12.9809, 13.3028, 12.9449, 14.0764, 14.2574, 14.2112,
         13.5854, 13.0439, 13.2515, 13.2353, 12.5290, 13.2859, 12.8461, 10.3653]])
new_beam seq: tensor([[3, 3, 3, 0, 0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[13.8147, 12.9818, 12.9809, 13.3028, 12.9449, 14.0764, 14.2574, 14.2112,
         13.5854, 13.0439, 13.2515, 13.2353, 12.5290, 13.2859, 12.8461, 10.3653]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 0, 0, 3, 3, 3, 3, 1, 3, 3, 1, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  21
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9604, 0.9603, 0.9615, 0.9617, 0.9609, 0.9604, 0.9608, 0.9611, 0.9598,
         0.9620, 0.9607, 0.9634, 0.9584, 0.9621, 0.9610, 0.9614]])
scores: tensor([13.8147, 12.9818, 12.9809, 13.3028, 12.9449, 14.0764, 14.2574, 14.2112,
        13.5854, 13.0439, 13.2515, 13.2353, 12.5290, 13.2859, 12.8461, 10.3653])
new_beam_scores: tensor([[14.7752, 13.9421, 13.9424, 14.2645, 13.9058, 15.0368, 15.2183, 15.1723,
         14.5453, 14.0059, 14.2122, 14.1987, 13.4874, 14.2480, 13.8071, 11.3268]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[14.7752, 13.9421, 13.9424, 14.2645, 13.9058, 15.0368, 15.2183, 15.1723,
         14.5453, 14.0059, 14.2122, 14.1987, 13.4874, 14.2480, 13.8071, 11.3268]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  22
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [2],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9563, 0.9604, 0.9581, 0.9516, 0.9586, 0.9587, 0.0177, 0.9597, 0.9465,
         0.9580, 0.9538, 0.9523, 0.9458, 0.9547, 0.9465, 0.9606]])
scores: tensor([14.7752, 13.9421, 13.9424, 14.2645, 13.9058, 15.0368, 15.2183, 15.1723,
        14.5453, 14.0059, 14.2122, 14.1987, 13.4874, 14.2480, 13.8071, 11.3268])
new_beam_scores: tensor([[15.7315, 14.9025, 14.9005, 15.2161, 14.8644, 15.9955, 15.2360, 16.1321,
         15.4917, 14.9639, 15.1660, 15.1510, 14.4332, 15.2027, 14.7536, 12.2874]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[15.7315, 14.9025, 14.9005, 15.2161, 14.8644, 15.9955, 15.2360, 16.1321,
         15.4917, 14.9639, 15.1660, 15.1510, 14.4332, 15.2027, 14.7536, 12.2874]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  23
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [2],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [1],
        [1],
        [1],
        [1],
        [3],
        [1],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9494, 0.9451, 0.9494, 0.9512, 0.9427, 0.9445, 0.9456, 0.9453, 0.0186,
         0.9467, 0.9511, 0.9506, 0.9501, 0.0226, 0.9439, 0.9463]])
scores: tensor([15.7315, 14.9025, 14.9005, 15.2161, 14.8644, 15.9955, 15.2360, 16.1321,
        15.4917, 14.9639, 15.1660, 15.1510, 14.4332, 15.2027, 14.7536, 12.2874])
new_beam_scores: tensor([[16.6809, 15.8476, 15.8499, 16.1673, 15.8071, 16.9400, 16.1816, 17.0773,
         15.5103, 15.9106, 16.1170, 16.1016, 15.3833, 15.2253, 15.6975, 13.2336]])
new_beam seq: tensor([[1, 2, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 3, 1, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[16.6809, 15.8476, 15.8499, 16.1673, 15.8071, 16.9400, 16.1816, 17.0773,
         15.5103, 15.9106, 16.1170, 16.1016, 15.3833, 15.2253, 15.6975, 13.2336]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 2, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 3, 1, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  24
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [1],
        [3],
        [3],
        [1],
        [0],
        [0],
        [3],
        [3],
        [0],
        [3],
        [0],
        [3],
        [3],
        [3],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9575, 0.9411, 0.9603, 0.9601, 0.9393, 0.9537, 0.9450, 0.0122, 0.9569,
         0.9554, 0.9549, 0.9451, 0.9574, 0.9487, 0.0140, 0.9468]])
scores: tensor([16.6809, 15.8476, 15.8499, 16.1673, 15.8071, 16.9400, 16.1816, 17.0773,
        15.5103, 15.9106, 16.1170, 16.1016, 15.3833, 15.2253, 15.6975, 13.2336])
new_beam_scores: tensor([[17.6384, 16.7887, 16.8102, 17.1274, 16.7464, 17.8937, 17.1265, 17.0895,
         16.4672, 16.8660, 17.0720, 17.0467, 16.3408, 16.1740, 15.7115, 14.1804]])
new_beam seq: tensor([[3, 1, 3, 3, 1, 0, 0, 3, 3, 0, 3, 0, 3, 3, 3, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[17.6384, 16.7887, 16.8102, 17.1274, 16.7464, 17.8937, 17.1265, 17.0895,
         16.4672, 16.8660, 17.0720, 17.0467, 16.3408, 16.1740, 15.7115, 14.1804]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 1, 3, 3, 1, 0, 0, 3, 3, 0, 3, 0, 3, 3, 3, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  25
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [1],
        [3],
        [3],
        [1],
        [3],
        [1],
        [3],
        [1],
        [3],
        [3],
        [3],
        [3],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9522, 0.9467, 0.9398, 0.0152, 0.9473, 0.9412, 0.9498, 0.9428, 0.9501,
         0.9446, 0.9507, 0.9528, 0.9538, 0.9490, 0.9476, 0.9499]])
scores: tensor([17.6384, 16.7887, 16.8102, 17.1274, 16.7464, 17.8937, 17.1265, 17.0895,
        16.4672, 16.8660, 17.0720, 17.0467, 16.3408, 16.1740, 15.7115, 14.1804])
new_beam_scores: tensor([[18.5906, 17.7354, 17.7500, 17.1426, 17.6938, 18.8349, 18.0763, 18.0323,
         17.4174, 17.8106, 18.0227, 17.9995, 17.2946, 17.1229, 16.6591, 15.1302]])
new_beam seq: tensor([[3, 3, 1, 3, 3, 1, 3, 1, 3, 1, 3, 3, 3, 3, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[18.5906, 17.7354, 17.7500, 17.1426, 17.6938, 18.8349, 18.0763, 18.0323,
         17.4174, 17.8106, 18.0227, 17.9995, 17.2946, 17.1229, 16.6591, 15.1302]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 1, 3, 3, 1, 3, 1, 3, 1, 3, 3, 3, 3, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  26
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [2],
        [1],
        [1],
        [1],
        [1],
        [2],
        [1],
        [1],
        [0],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9646, 0.9648, 0.9649, 0.9641, 0.9641, 0.0143, 0.9640, 0.9638, 0.9668,
         0.9660, 0.9555, 0.9660, 0.9682, 0.9023, 0.9646, 0.9652]])
scores: tensor([18.5906, 17.7354, 17.7500, 17.1426, 17.6938, 18.8349, 18.0763, 18.0323,
        17.4174, 17.8106, 18.0227, 17.9995, 17.2946, 17.1229, 16.6591, 15.1302])
new_beam_scores: tensor([[19.5552, 18.7002, 18.7150, 18.1068, 18.6579, 18.8492, 19.0404, 18.9961,
         18.3841, 18.7766, 18.9782, 18.9654, 18.2628, 18.0252, 17.6237, 16.0955]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 0, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[19.5552, 18.7002, 18.7150, 18.1068, 18.6579, 18.8492, 19.0404, 18.9961,
         18.3841, 18.7766, 18.9782, 18.9654, 18.2628, 18.0252, 17.6237, 16.0955]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 0, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  27
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [1],
        [1],
        [0],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9614, 0.9601, 0.9612, 0.9613, 0.9598, 0.9595, 0.9617, 0.9606, 0.9659,
         0.9652, 0.9615, 0.9632, 0.9662, 0.9677, 0.9634, 0.9618]])
scores: tensor([19.5552, 18.7002, 18.7150, 18.1068, 18.6579, 18.8492, 19.0404, 18.9961,
        18.3841, 18.7766, 18.9782, 18.9654, 18.2628, 18.0252, 17.6237, 16.0955])
new_beam_scores: tensor([[20.5166, 19.6603, 19.6762, 19.0681, 19.6176, 19.8087, 20.0021, 19.9567,
         19.3501, 19.7417, 19.9397, 19.9286, 19.2290, 18.9929, 18.5871, 17.0573]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[20.5166, 19.6603, 19.6762, 19.0681, 19.6176, 19.8087, 20.0021, 19.9567,
         19.3501, 19.7417, 19.9397, 19.9286, 19.2290, 18.9929, 18.5871, 17.0573]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  28
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [0],
        [1],
        [1],
        [3],
        [3],
        [1],
        [0],
        [1],
        [1],
        [2],
        [2],
        [1],
        [3],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9497, 0.9476, 0.8981, 0.9454, 0.9480, 0.5887, 0.6500, 0.9359, 0.9105,
         0.9519, 0.9471, 0.0220, 0.8726, 0.9470, 0.6653, 0.2569]])
scores: tensor([20.5166, 19.6603, 19.6762, 19.0681, 19.6176, 19.8087, 20.0021, 19.9567,
        19.3501, 19.7417, 19.9397, 19.9286, 19.2290, 18.9929, 18.5871, 17.0573])
new_beam_scores: tensor([[21.4663, 20.6079, 20.5743, 20.0135, 20.5657, 20.3974, 20.6521, 20.8926,
         20.2606, 20.6936, 20.8869, 19.9507, 20.1016, 19.9399, 19.2524, 17.3141]])
new_beam seq: tensor([[1, 1, 0, 1, 1, 3, 3, 1, 0, 1, 1, 2, 2, 1, 3, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[21.4663, 20.6079, 20.5743, 20.0135, 20.5657, 20.3974, 20.6521, 20.8926,
         20.2606, 20.6936, 20.8869, 19.9507, 20.1016, 19.9399, 19.2524, 17.3141]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 0, 1, 1, 3, 3, 1, 0, 1, 1, 2, 2, 1, 3, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  29
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9674, 0.9647, 0.9596, 0.9653, 0.9651, 0.9571, 0.9563, 0.9640, 0.9670,
         0.9677, 0.9672, 0.9645, 0.9657, 0.9677, 0.9590, 0.9570]])
scores: tensor([21.4663, 20.6079, 20.5743, 20.0135, 20.5657, 20.3974, 20.6521, 20.8926,
        20.2606, 20.6936, 20.8869, 19.9507, 20.1016, 19.9399, 19.2524, 17.3141])
new_beam_scores: tensor([[22.4336, 21.5726, 21.5339, 20.9788, 21.5308, 21.3545, 21.6084, 21.8566,
         21.2276, 21.6613, 21.8541, 20.9151, 21.0673, 20.9076, 20.2113, 18.2711]])
new_beam seq: tensor([[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[22.4336, 21.5726, 21.5339, 20.9788, 21.5308, 21.3545, 21.6084, 21.8566,
         21.2276, 21.6613, 21.8541, 20.9151, 21.0673, 20.9076, 20.2113, 18.2711]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  30
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [2],
        [1],
        [1],
        [3],
        [1],
        [1],
        [3],
        [3],
        [1],
        [2],
        [1],
        [3],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.5699, 0.6131, 0.3004, 0.4701, 0.6243, 0.1362, 0.5582, 0.5010, 0.2512,
         0.2089, 0.6322, 0.2777, 0.4686, 0.3081, 0.5347, 0.3182]])
scores: tensor([22.4336, 21.5726, 21.5339, 20.9788, 21.5308, 21.3545, 21.6084, 21.8566,
        21.2276, 21.6613, 21.8541, 20.9151, 21.0673, 20.9076, 20.2113, 18.2711])
new_beam_scores: tensor([[23.0035, 22.1857, 21.8343, 21.4489, 22.1550, 21.4906, 22.1666, 22.3576,
         21.4788, 21.8702, 22.4863, 21.1928, 21.5360, 21.2156, 20.7460, 18.5893]])
new_beam seq: tensor([[1, 1, 2, 1, 1, 3, 1, 1, 3, 3, 1, 2, 1, 3, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[23.0035, 22.1857, 21.8343, 21.4489, 22.1550, 21.4906, 22.1666, 22.3576,
         21.4788, 21.8702, 22.4863, 21.1928, 21.5360, 21.2156, 20.7460, 18.5893]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 2, 1, 1, 3, 1, 1, 3, 3, 1, 2, 1, 3, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  31
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [2],
        [3],
        [3],
        [3],
        [3],
        [2],
        [2],
        [2],
        [3],
        [2],
        [3],
        [2],
        [2],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.6293, 0.5964, 0.4068, 0.5631, 0.5711, 0.6728, 0.7404, 0.3235, 0.3077,
         0.2249, 0.6753, 0.4624, 0.7572, 0.3107, 0.2296, 0.7061]])
scores: tensor([23.0035, 22.1857, 21.8343, 21.4489, 22.1550, 21.4906, 22.1666, 22.3576,
        21.4788, 21.8702, 22.4863, 21.1928, 21.5360, 21.2156, 20.7460, 18.5893])
new_beam_scores: tensor([[23.6328, 22.7821, 22.2411, 22.0120, 22.7261, 22.1634, 22.9070, 22.6811,
         21.7865, 22.0951, 23.1616, 21.6551, 22.2931, 21.5263, 20.9756, 19.2954]])
new_beam seq: tensor([[3, 3, 2, 3, 3, 3, 3, 2, 2, 2, 3, 2, 3, 2, 2, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[23.6328, 22.7821, 22.2411, 22.0120, 22.7261, 22.1634, 22.9070, 22.6811,
         21.7865, 22.0951, 23.1616, 21.6551, 22.2931, 21.5263, 20.9756, 19.2954]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 2, 3, 3, 3, 3, 2, 2, 2, 3, 2, 3, 2, 2, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  32
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [2],
        [0],
        [3],
        [2],
        [0],
        [2],
        [2],
        [2],
        [2],
        [1],
        [1],
        [3],
        [2],
        [1],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.1376, 0.6000, 0.1529, 0.1998, 0.7133, 0.0605, 0.5386, 0.5331, 0.5482,
         0.6351, 0.1202, 0.1274, 0.3900, 0.6931, 0.1054, 0.2608]])
scores: tensor([23.6328, 22.7821, 22.2411, 22.0120, 22.7261, 22.1634, 22.9070, 22.6811,
        21.7865, 22.0951, 23.1616, 21.6551, 22.2931, 21.5263, 20.9756, 19.2954])
new_beam_scores: tensor([[23.7703, 23.3821, 22.3940, 22.2118, 23.4394, 22.2239, 23.4457, 23.2142,
         22.3347, 22.7302, 23.2818, 21.7826, 22.6831, 22.2194, 21.0810, 19.5562]])
new_beam seq: tensor([[1, 2, 0, 3, 2, 0, 2, 2, 2, 2, 1, 1, 3, 2, 1, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[23.7703, 23.3821, 22.3940, 22.2118, 23.4394, 22.2239, 23.4457, 23.2142,
         22.3347, 22.7302, 23.2818, 21.7826, 22.6831, 22.2194, 21.0810, 19.5562]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 2, 0, 3, 2, 0, 2, 2, 2, 2, 1, 1, 3, 2, 1, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  33
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [2],
        [2],
        [2],
        [3],
        [2],
        [3],
        [3],
        [2],
        [3],
        [3],
        [2],
        [3],
        [2],
        [2],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.2163, 0.2375, 0.4427, 0.2263, 0.4571, 0.1868, 0.6013, 0.3478, 0.3669,
         0.5767, 0.4373, 0.5062, 0.6507, 0.5067, 0.3760, 0.6932]])
scores: tensor([23.7703, 23.3821, 22.3940, 22.2118, 23.4394, 22.2239, 23.4457, 23.2142,
        22.3347, 22.7302, 23.2818, 21.7826, 22.6831, 22.2194, 21.0810, 19.5562])
new_beam_scores: tensor([[23.9866, 23.6196, 22.8366, 22.4380, 23.8965, 22.4107, 24.0469, 23.5620,
         22.7016, 23.3070, 23.7191, 22.2887, 23.3338, 22.7261, 21.4570, 20.2494]])
new_beam seq: tensor([[0, 2, 2, 2, 3, 2, 3, 3, 2, 3, 3, 2, 3, 2, 2, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[23.9866, 23.6196, 22.8366, 22.4380, 23.8965, 22.4107, 24.0469, 23.5620,
         22.7016, 23.3070, 23.7191, 22.2887, 23.3338, 22.7261, 21.4570, 20.2494]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 2, 2, 2, 3, 2, 3, 3, 2, 3, 3, 2, 3, 2, 2, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  34
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [0],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [3],
        [2],
        [2],
        [3],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9404, 0.8637, 0.0254, 0.8016, 0.9493, 0.8864, 0.9579, 0.9101, 0.8459,
         0.9433, 0.9444, 0.5590, 0.9378, 0.7806, 0.5142, 0.9313]])
scores: tensor([23.9866, 23.6196, 22.8366, 22.4380, 23.8965, 22.4107, 24.0469, 23.5620,
        22.7016, 23.3070, 23.7191, 22.2887, 23.3338, 22.7261, 21.4570, 20.2494])
new_beam_scores: tensor([[24.9270, 24.4834, 22.8621, 23.2396, 24.8458, 23.2971, 25.0049, 24.4721,
         23.5475, 24.2503, 24.6636, 22.8477, 24.2716, 23.5067, 21.9712, 21.1807]])
new_beam seq: tensor([[2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[24.9270, 24.4834, 22.8621, 23.2396, 24.8458, 23.2971, 25.0049, 24.4721,
         23.5475, 24.2503, 24.6636, 22.8477, 24.2716, 23.5067, 21.9712, 21.1807]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  35
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9628, 0.9570, 0.9498, 0.9571, 0.9589, 0.9525, 0.9596, 0.9523, 0.9548,
         0.9573, 0.9617, 0.9142, 0.9607, 0.9508, 0.9294, 0.9526]])
scores: tensor([24.9270, 24.4834, 22.8621, 23.2396, 24.8458, 23.2971, 25.0049, 24.4721,
        23.5475, 24.2503, 24.6636, 22.8477, 24.2716, 23.5067, 21.9712, 21.1807])
new_beam_scores: tensor([[25.8898, 25.4404, 23.8119, 24.1968, 25.8047, 24.2496, 25.9645, 25.4244,
         24.5023, 25.2076, 25.6252, 23.7619, 25.2323, 24.4575, 22.9006, 22.1333]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[25.8898, 25.4404, 23.8119, 24.1968, 25.8047, 24.2496, 25.9645, 25.4244,
         24.5023, 25.2076, 25.6252, 23.7619, 25.2323, 24.4575, 22.9006, 22.1333]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  36
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [1],
        [0],
        [0],
        [3],
        [1],
        [0],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.6405, 0.7016, 0.7912, 0.6190, 0.7368, 0.6266, 0.2575, 0.9149, 0.4248,
         0.1699, 0.0489, 0.6807, 0.7482, 0.6161, 0.7186, 0.9404]])
scores: tensor([25.8898, 25.4404, 23.8119, 24.1968, 25.8047, 24.2496, 25.9645, 25.4244,
        24.5023, 25.2076, 25.6252, 23.7619, 25.2323, 24.4575, 22.9006, 22.1333])
new_beam_scores: tensor([[26.5302, 26.1420, 24.6030, 24.8158, 26.5415, 24.8762, 26.2220, 26.3392,
         24.9271, 25.3775, 25.6741, 24.4426, 25.9805, 25.0736, 23.6192, 23.0737]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 3, 1, 0, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[26.5302, 26.1420, 24.6030, 24.8158, 26.5415, 24.8762, 26.2220, 26.3392,
         24.9271, 25.3775, 25.6741, 24.4426, 25.9805, 25.0736, 23.6192, 23.0737]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 3, 1, 0, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  37
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [1],
        [2],
        [2],
        [1],
        [2],
        [3],
        [3],
        [0],
        [2],
        [1],
        [2],
        [0],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.8802, 0.8818, 0.9679, 0.8667, 0.8770, 0.3746, 0.8758, 0.0586, 0.0930,
         0.4610, 0.8923, 0.9685, 0.8780, 0.7562, 0.8849, 0.8251]])
scores: tensor([26.5302, 26.1420, 24.6030, 24.8158, 26.5415, 24.8762, 26.2220, 26.3392,
        24.9271, 25.3775, 25.6741, 24.4426, 25.9805, 25.0736, 23.6192, 23.0737])
new_beam_scores: tensor([[27.4104, 27.0238, 25.5710, 25.6825, 27.4185, 25.2508, 27.0978, 26.3979,
         25.0201, 25.8385, 26.5664, 25.4112, 26.8585, 25.8298, 24.5040, 23.8988]])
new_beam seq: tensor([[2, 2, 1, 2, 2, 1, 2, 3, 3, 0, 2, 1, 2, 0, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[27.4104, 27.0238, 25.5710, 25.6825, 27.4185, 25.2508, 27.0978, 26.3979,
         25.0201, 25.8385, 26.5664, 25.4112, 26.8585, 25.8298, 24.5040, 23.8988]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 1, 2, 2, 1, 2, 3, 3, 0, 2, 1, 2, 0, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  38
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [3],
        [0],
        [0],
        [1],
        [1],
        [0],
        [2],
        [3],
        [0],
        [0],
        [3],
        [1],
        [1],
        [3],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.6731, 0.2299, 0.3704, 0.4859, 0.0954, 0.1674, 0.5867, 0.0653, 0.4702,
         0.4694, 0.6158, 0.5708, 0.1410, 0.2272, 0.1889, 0.6176]])
scores: tensor([27.4104, 27.0238, 25.5710, 25.6825, 27.4185, 25.2508, 27.0978, 26.3979,
        25.0201, 25.8385, 26.5664, 25.4112, 26.8585, 25.8298, 24.5040, 23.8988])
new_beam_scores: tensor([[28.0834, 27.2537, 25.9413, 26.1684, 27.5139, 25.4182, 27.6845, 26.4631,
         25.4903, 26.3079, 27.1822, 25.9820, 26.9995, 26.0570, 24.6929, 24.5164]])
new_beam seq: tensor([[0, 3, 0, 0, 1, 1, 0, 2, 3, 0, 0, 3, 1, 1, 3, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[28.0834, 27.2537, 25.9413, 26.1684, 27.5139, 25.4182, 27.6845, 26.4631,
         25.4903, 26.3079, 27.1822, 25.9820, 26.9995, 26.0570, 24.6929, 24.5164]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 3, 0, 0, 1, 1, 0, 2, 3, 0, 0, 3, 1, 1, 3, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  39
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [1],
        [1],
        [0],
        [2],
        [2],
        [1],
        [3],
        [1],
        [1],
        [0],
        [1],
        [3],
        [3],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.1909, 0.3231, 0.5238, 0.1314, 0.5988, 0.4365, 0.4595, 0.2177, 0.3893,
         0.4761, 0.1905, 0.4841, 0.4399, 0.4431, 0.3412, 0.5358]])
scores: tensor([28.0834, 27.2537, 25.9413, 26.1684, 27.5139, 25.4182, 27.6845, 26.4631,
        25.4903, 26.3079, 27.1822, 25.9820, 26.9995, 26.0570, 24.6929, 24.5164])
new_beam_scores: tensor([[28.2743, 27.5768, 26.4651, 26.2998, 28.1127, 25.8547, 28.1440, 26.6808,
         25.8796, 26.7841, 27.3727, 26.4661, 27.4393, 26.5001, 25.0341, 25.0523]])
new_beam seq: tensor([[2, 1, 1, 0, 2, 2, 1, 3, 1, 1, 0, 1, 3, 3, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[28.2743, 27.5768, 26.4651, 26.2998, 28.1127, 25.8547, 28.1440, 26.6808,
         25.8796, 26.7841, 27.3727, 26.4661, 27.4393, 26.5001, 25.0341, 25.0523]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 1, 1, 0, 2, 2, 1, 3, 1, 1, 0, 1, 3, 3, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  40
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [1],
        [3],
        [3],
        [3],
        [3],
        [3],
        [0],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.6495, 0.9296, 0.9471, 0.9287, 0.2953, 0.3735, 0.9352, 0.0520, 0.9257,
         0.9399, 0.9153, 0.9403, 0.5205, 0.2724, 0.9362, 0.9420]])
scores: tensor([28.2743, 27.5768, 26.4651, 26.2998, 28.1127, 25.8547, 28.1440, 26.6808,
        25.8796, 26.7841, 27.3727, 26.4661, 27.4393, 26.5001, 25.0341, 25.0523])
new_beam_scores: tensor([[28.9239, 28.5064, 27.4122, 27.2285, 28.4080, 26.2283, 29.0792, 26.7328,
         26.8053, 27.7239, 28.2880, 27.4064, 27.9598, 26.7726, 25.9703, 25.9943]])
new_beam seq: tensor([[0, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[28.9239, 28.5064, 27.4122, 27.2285, 28.4080, 26.2283, 29.0792, 26.7328,
         26.8053, 27.7239, 28.2880, 27.4064, 27.9598, 26.7726, 25.9703, 25.9943]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 0, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  41
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9306, 0.9608, 0.9591, 0.9500, 0.9642, 0.9622, 0.9582, 0.9269, 0.9197,
         0.0177, 0.9484, 0.9595, 0.9449, 0.9202, 0.9506, 0.9647]])
scores: tensor([28.9239, 28.5064, 27.4122, 27.2285, 28.4080, 26.2283, 29.0792, 26.7328,
        26.8053, 27.7239, 28.2880, 27.4064, 27.9598, 26.7726, 25.9703, 25.9943])
new_beam_scores: tensor([[29.8545, 29.4672, 28.3714, 28.1785, 29.3722, 27.1904, 30.0374, 27.6597,
         27.7251, 27.7416, 29.2365, 28.3659, 28.9047, 27.6928, 26.9209, 26.9590]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[29.8545, 29.4672, 28.3714, 28.1785, 29.3722, 27.1904, 30.0374, 27.6597,
         27.7251, 27.7416, 29.2365, 28.3659, 28.9047, 27.6928, 26.9209, 26.9590]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  42
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [0],
        [3],
        [3],
        [2],
        [2],
        [3],
        [2],
        [3],
        [0],
        [3],
        [3],
        [3],
        [0],
        [3],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.6714, 0.4277, 0.6136, 0.6125, 0.2107, 0.1885, 0.7080, 0.1511, 0.6888,
         0.3499, 0.6102, 0.6880, 0.6609, 0.1746, 0.7189, 0.2691]])
scores: tensor([29.8545, 29.4672, 28.3714, 28.1785, 29.3722, 27.1904, 30.0374, 27.6597,
        27.7251, 27.7416, 29.2365, 28.3659, 28.9047, 27.6928, 26.9209, 26.9590])
new_beam_scores: tensor([[30.5259, 29.8950, 28.9849, 28.7910, 29.5829, 27.3789, 30.7454, 27.8108,
         28.4138, 28.0915, 29.8466, 29.0538, 29.5656, 27.8674, 27.6398, 27.2281]])
new_beam seq: tensor([[3, 0, 3, 3, 2, 2, 3, 2, 3, 0, 3, 3, 3, 0, 3, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[30.5259, 29.8950, 28.9849, 28.7910, 29.5829, 27.3789, 30.7454, 27.8108,
         28.4138, 28.0915, 29.8466, 29.0538, 29.5656, 27.8674, 27.6398, 27.2281]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 0, 3, 3, 2, 2, 3, 2, 3, 0, 3, 3, 3, 0, 3, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  43
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9467, 0.9168, 0.9524, 0.9106, 0.9235, 0.9043, 0.9273, 0.8939, 0.9034,
         0.9205, 0.9272, 0.9353, 0.9276, 0.7805, 0.9268, 0.8987]])
scores: tensor([30.5259, 29.8950, 28.9849, 28.7910, 29.5829, 27.3789, 30.7454, 27.8108,
        28.4138, 28.0915, 29.8466, 29.0538, 29.5656, 27.8674, 27.6398, 27.2281])
new_beam_scores: tensor([[31.4725, 30.8117, 29.9373, 29.7016, 30.5064, 28.2833, 31.6726, 28.7046,
         29.3172, 29.0120, 30.7739, 29.9891, 30.4932, 28.6478, 28.5666, 28.1268]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[31.4725, 30.8117, 29.9373, 29.7016, 30.5064, 28.2833, 31.6726, 28.7046,
         29.3172, 29.0120, 30.7739, 29.9891, 30.4932, 28.6478, 28.5666, 28.1268]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  44
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [1],
        [2],
        [2],
        [2],
        [1],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9626, 0.9637, 0.9650, 0.9641, 0.9614, 0.9607, 0.8979, 0.9594, 0.9639,
         0.9636, 0.0126, 0.9657, 0.9646, 0.9587, 0.9646, 0.9620]])
scores: tensor([31.4725, 30.8117, 29.9373, 29.7016, 30.5064, 28.2833, 31.6726, 28.7046,
        29.3172, 29.0120, 30.7739, 29.9891, 30.4932, 28.6478, 28.5666, 28.1268])
new_beam_scores: tensor([[32.4352, 31.7754, 30.9023, 30.6657, 31.4678, 29.2440, 32.5706, 29.6640,
         30.2812, 29.9757, 30.7865, 30.9549, 31.4578, 29.6065, 29.5312, 29.0888]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[32.4352, 31.7754, 30.9023, 30.6657, 31.4678, 29.2440, 32.5706, 29.6640,
         30.2812, 29.9757, 30.7865, 30.9549, 31.4578, 29.6065, 29.5312, 29.0888]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  45
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [0],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9541, 0.9527, 0.9602, 0.9596, 0.9520, 0.0106, 0.9546, 0.9527, 0.9592,
         0.9554, 0.9559, 0.9593, 0.9588, 0.9506, 0.0174, 0.0200]])
scores: tensor([32.4352, 31.7754, 30.9023, 30.6657, 31.4678, 29.2440, 32.5706, 29.6640,
        30.2812, 29.9757, 30.7865, 30.9549, 31.4578, 29.6065, 29.5312, 29.0888])
new_beam_scores: tensor([[33.3893, 32.7282, 31.8624, 31.6253, 32.4198, 29.2546, 33.5251, 30.6167,
         31.2404, 30.9310, 31.7424, 31.9142, 32.4166, 30.5572, 29.5486, 29.1087]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[33.3893, 32.7282, 31.8624, 31.6253, 32.4198, 29.2546, 33.5251, 30.6167,
         31.2404, 30.9310, 31.7424, 31.9142, 32.4166, 30.5572, 29.5486, 29.1087]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  46
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [0],
        [0],
        [2],
        [3],
        [1],
        [1],
        [0],
        [0],
        [3],
        [1],
        [1],
        [1],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.5536, 0.3424, 0.1598, 0.2721, 0.0244, 0.6128, 0.2442, 0.5738, 0.2917,
         0.1727, 0.5371, 0.2891, 0.1871, 0.1455, 0.7151, 0.7158]])
scores: tensor([33.3893, 32.7282, 31.8624, 31.6253, 32.4198, 29.2546, 33.5251, 30.6167,
        31.2404, 30.9310, 31.7424, 31.9142, 32.4166, 30.5572, 29.5486, 29.1087])
new_beam_scores: tensor([[33.9429, 33.0706, 32.0223, 31.8973, 32.4442, 29.8674, 33.7693, 31.1904,
         31.5320, 31.1037, 32.2795, 32.2033, 32.6037, 30.7027, 30.2637, 29.8245]])
new_beam seq: tensor([[3, 3, 0, 0, 2, 3, 1, 1, 0, 0, 3, 1, 1, 1, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[33.9429, 33.0706, 32.0223, 31.8973, 32.4442, 29.8674, 33.7693, 31.1904,
         31.5320, 31.1037, 32.2795, 32.2033, 32.6037, 30.7027, 30.2637, 29.8245]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 0, 0, 2, 3, 1, 1, 0, 0, 3, 1, 1, 1, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  47
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [0],
        [2],
        [3],
        [3],
        [3],
        [0],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.7658, 0.6839, 0.7825, 0.7882, 0.7346, 0.7913, 0.8978, 0.7491, 0.7816,
         0.1265, 0.0567, 0.8526, 0.8855, 0.8556, 0.1286, 0.0466]])
scores: tensor([33.9429, 33.0706, 32.0223, 31.8973, 32.4442, 29.8674, 33.7693, 31.1904,
        31.5320, 31.1037, 32.2795, 32.2033, 32.6037, 30.7027, 30.2637, 29.8245])
new_beam_scores: tensor([[34.7087, 33.7545, 32.8048, 32.6855, 33.1789, 30.6587, 34.6671, 31.9396,
         32.3137, 31.2302, 32.3362, 33.0559, 33.4892, 31.5582, 30.3923, 29.8711]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 3, 3, 3, 0, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[34.7087, 33.7545, 32.8048, 32.6855, 33.1789, 30.6587, 34.6671, 31.9396,
         32.3137, 31.2302, 32.3362, 33.0559, 33.4892, 31.5582, 30.3923, 29.8711]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 3, 3, 3, 0, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  48
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [0],
        [0],
        [0],
        [0],
        [0],
        [3],
        [0],
        [3],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.1754, 0.7864, 0.7270, 0.5743, 0.8534, 0.7123, 0.3938, 0.8493, 0.3706,
         0.6568, 0.4139, 0.6999, 0.6324, 0.3462, 0.5859, 0.0712]])
scores: tensor([34.7087, 33.7545, 32.8048, 32.6855, 33.1789, 30.6587, 34.6671, 31.9396,
        32.3137, 31.2302, 32.3362, 33.0559, 33.4892, 31.5582, 30.3923, 29.8711])
new_beam_scores: tensor([[34.8842, 34.5409, 33.5318, 33.2598, 34.0323, 31.3709, 35.0608, 32.7889,
         32.6842, 31.8869, 32.7501, 33.7558, 34.1217, 31.9044, 30.9782, 29.9423]])
new_beam seq: tensor([[3, 0, 0, 0, 0, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[34.8842, 34.5409, 33.5318, 33.2598, 34.0323, 31.3709, 35.0608, 32.7889,
         32.6842, 31.8869, 32.7501, 33.7558, 34.1217, 31.9044, 30.9782, 29.9423]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 0, 0, 0, 0, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  49
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9704, 0.9701, 0.9690, 0.9681, 0.9719, 0.9679, 0.9698, 0.9707, 0.9672,
         0.9696, 0.9689, 0.9687, 0.9711, 0.9646, 0.9661, 0.9680]])
scores: tensor([34.8842, 34.5409, 33.5318, 33.2598, 34.0323, 31.3709, 35.0608, 32.7889,
        32.6842, 31.8869, 32.7501, 33.7558, 34.1217, 31.9044, 30.9782, 29.9423])
new_beam_scores: tensor([[35.8546, 35.5110, 34.5007, 34.2279, 35.0041, 32.3388, 36.0306, 33.7597,
         33.6515, 32.8565, 33.7190, 34.7246, 35.0928, 32.8691, 31.9444, 30.9103]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[35.8546, 35.5110, 34.5007, 34.2279, 35.0041, 32.3388, 36.0306, 33.7597,
         33.6515, 32.8565, 33.7190, 34.7246, 35.0928, 32.8691, 31.9444, 30.9103]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  50
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [2],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9582, 0.9593, 0.9595, 0.9596, 0.9606, 0.9405, 0.9616, 0.9594, 0.0205,
         0.9557, 0.9564, 0.9607, 0.9550, 0.9494, 0.9540, 0.9670]])
scores: tensor([35.8546, 35.5110, 34.5007, 34.2279, 35.0041, 32.3388, 36.0306, 33.7597,
        33.6515, 32.8565, 33.7190, 34.7246, 35.0928, 32.8691, 31.9444, 30.9103])
new_beam_scores: tensor([[36.8128, 36.4703, 35.4603, 35.1875, 35.9647, 33.2794, 36.9922, 34.7191,
         33.6720, 33.8123, 34.6754, 35.6853, 36.0477, 33.8184, 32.8984, 31.8773]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[36.8128, 36.4703, 35.4603, 35.1875, 35.9647, 33.2794, 36.9922, 34.7191,
         33.6720, 33.8123, 34.6754, 35.6853, 36.0477, 33.8184, 32.8984, 31.8773]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  51
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [3],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9715, 0.9726, 0.9734, 0.9730, 0.9728, 0.9710, 0.9727, 0.9723, 0.9708,
         0.0088, 0.9740, 0.9738, 0.9723, 0.9732, 0.9743, 0.9732]])
scores: tensor([36.8128, 36.4703, 35.4603, 35.1875, 35.9647, 33.2794, 36.9922, 34.7191,
        33.6720, 33.8123, 34.6754, 35.6853, 36.0477, 33.8184, 32.8984, 31.8773])
new_beam_scores: tensor([[37.7843, 37.4429, 36.4336, 36.1604, 36.9376, 34.2503, 37.9649, 35.6914,
         34.6427, 33.8211, 35.6494, 36.6591, 37.0200, 34.7916, 33.8727, 32.8505]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[37.7843, 37.4429, 36.4336, 36.1604, 36.9376, 34.2503, 37.9649, 35.6914,
         34.6427, 33.8211, 35.6494, 36.6591, 37.0200, 34.7916, 33.8727, 32.8505]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  52
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [3],
        [0],
        [0],
        [1],
        [1],
        [0],
        [1],
        [0],
        [3],
        [0],
        [0],
        [0],
        [3],
        [0],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9614, 0.9600, 0.9625, 0.9610, 0.9676, 0.9652, 0.9635, 0.9674, 0.9568,
         0.9573, 0.9615, 0.9607, 0.9607, 0.9621, 0.9610, 0.9588]])
scores: tensor([37.7843, 37.4429, 36.4336, 36.1604, 36.9376, 34.2503, 37.9649, 35.6914,
        34.6427, 33.8211, 35.6494, 36.6591, 37.0200, 34.7916, 33.8727, 32.8505])
new_beam_scores: tensor([[38.7457, 38.4030, 37.3962, 37.1214, 37.9052, 35.2155, 38.9284, 36.6588,
         35.5995, 34.7784, 36.6109, 37.6199, 37.9807, 35.7537, 34.8337, 33.8093]])
new_beam seq: tensor([[0, 3, 0, 0, 1, 1, 0, 1, 0, 3, 0, 0, 0, 3, 0, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[38.7457, 38.4030, 37.3962, 37.1214, 37.9052, 35.2155, 38.9284, 36.6588,
         35.5995, 34.7784, 36.6109, 37.6199, 37.9807, 35.7537, 34.8337, 33.8093]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 3, 0, 0, 1, 1, 0, 1, 0, 3, 0, 0, 0, 3, 0, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  53
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [2],
        [2],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9585, 0.9568, 0.9624, 0.9629, 0.9542, 0.9616, 0.9637, 0.9584, 0.0142,
         0.8819, 0.9648, 0.9640, 0.9623, 0.9586, 0.9652, 0.9587]])
scores: tensor([38.7457, 38.4030, 37.3962, 37.1214, 37.9052, 35.2155, 38.9284, 36.6588,
        35.5995, 34.7784, 36.6109, 37.6199, 37.9807, 35.7537, 34.8337, 33.8093])
new_beam_scores: tensor([[39.7043, 39.3597, 38.3586, 38.0843, 38.8593, 36.1771, 39.8920, 37.6172,
         35.6137, 35.6603, 37.5757, 38.5839, 38.9430, 36.7123, 35.7989, 34.7680]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[39.7043, 39.3597, 38.3586, 38.0843, 38.8593, 36.1771, 39.8920, 37.6172,
         35.6137, 35.6603, 37.5757, 38.5839, 38.9430, 36.7123, 35.7989, 34.7680]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  54
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [2],
        [0],
        [0],
        [0],
        [0],
        [0],
        [3],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9594, 0.9600, 0.9560, 0.9521, 0.9592, 0.9492, 0.9588, 0.9457, 0.9540,
         0.9535, 0.9491, 0.9560, 0.9539, 0.9604, 0.9538, 0.9537]])
scores: tensor([39.7043, 39.3597, 38.3586, 38.0843, 38.8593, 36.1771, 39.8920, 37.6172,
        35.6137, 35.6603, 37.5757, 38.5839, 38.9430, 36.7123, 35.7989, 34.7680])
new_beam_scores: tensor([[40.6636, 40.3198, 39.3146, 39.0364, 39.8186, 37.1263, 40.8508, 38.5629,
         36.5677, 36.6138, 38.5248, 39.5399, 39.8970, 37.6727, 36.7527, 35.7217]])
new_beam seq: tensor([[3, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 3, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[40.6636, 40.3198, 39.3146, 39.0364, 39.8186, 37.1263, 40.8508, 38.5629,
         36.5677, 36.6138, 38.5248, 39.5399, 39.8970, 37.6727, 36.7527, 35.7217]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 3, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  55
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [2],
        [2],
        [3],
        [1],
        [1],
        [2],
        [0],
        [0],
        [2],
        [3],
        [2],
        [0],
        [0],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9485, 0.9504, 0.9555, 0.9559, 0.9473, 0.9495, 0.9536, 0.9525, 0.0179,
         0.9526, 0.9574, 0.9555, 0.9533, 0.9498, 0.9535, 0.9499]])
scores: tensor([40.6636, 40.3198, 39.3146, 39.0364, 39.8186, 37.1263, 40.8508, 38.5629,
        36.5677, 36.6138, 38.5248, 39.5399, 39.8970, 37.6727, 36.7527, 35.7217])
new_beam_scores: tensor([[41.6122, 41.2702, 40.2701, 39.9924, 40.7659, 38.0758, 41.8044, 39.5154,
         36.5856, 37.5664, 39.4822, 40.4954, 40.8503, 38.6226, 37.7062, 36.6715]])
new_beam seq: tensor([[1, 2, 2, 3, 1, 1, 2, 0, 0, 2, 3, 2, 0, 0, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[41.6122, 41.2702, 40.2701, 39.9924, 40.7659, 38.0758, 41.8044, 39.5154,
         36.5856, 37.5664, 39.4822, 40.4954, 40.8503, 38.6226, 37.7062, 36.6715]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 2, 2, 3, 1, 1, 2, 0, 0, 2, 3, 2, 0, 0, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  56
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [0],
        [3],
        [3],
        [2],
        [2],
        [3],
        [1],
        [1],
        [3],
        [3],
        [0],
        [2],
        [2],
        [0],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9642, 0.9573, 0.9652, 0.9684, 0.9645, 0.9622, 0.9640, 0.9647, 0.0231,
         0.9605, 0.9674, 0.9552, 0.9670, 0.9622, 0.9522, 0.9630]])
scores: tensor([41.6122, 41.2702, 40.2701, 39.9924, 40.7659, 38.0758, 41.8044, 39.5154,
        36.5856, 37.5664, 39.4822, 40.4954, 40.8503, 38.6226, 37.7062, 36.6715])
new_beam_scores: tensor([[42.5763, 42.2275, 41.2353, 40.9607, 41.7304, 39.0380, 42.7684, 40.4801,
         36.6087, 38.5269, 40.4495, 41.4505, 41.8173, 39.5848, 38.6584, 37.6345]])
new_beam seq: tensor([[3, 0, 3, 3, 2, 2, 3, 1, 1, 3, 3, 0, 2, 2, 0, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[42.5763, 42.2275, 41.2353, 40.9607, 41.7304, 39.0380, 42.7684, 40.4801,
         36.6087, 38.5269, 40.4495, 41.4505, 41.8173, 39.5848, 38.6584, 37.6345]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 0, 3, 3, 2, 2, 3, 1, 1, 3, 3, 0, 2, 2, 0, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  57
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [2],
        [0],
        [0],
        [2],
        [0],
        [0],
        [0],
        [1],
        [2],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.8018, 0.5038, 0.8452, 0.2254, 0.8939, 0.9137, 0.1634, 0.8939, 0.6240,
         0.7547, 0.0791, 0.1535, 0.8535, 0.8723, 0.7396, 0.7295]])
scores: tensor([42.5763, 42.2275, 41.2353, 40.9607, 41.7304, 39.0380, 42.7684, 40.4801,
        36.6087, 38.5269, 40.4495, 41.4505, 41.8173, 39.5848, 38.6584, 37.6345])
new_beam_scores: tensor([[43.3782, 42.7313, 42.0805, 41.1861, 42.6243, 39.9516, 42.9318, 41.3740,
         37.2327, 39.2817, 40.5286, 41.6040, 42.6707, 40.4571, 39.3979, 38.3640]])
new_beam seq: tensor([[0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[43.3782, 42.7313, 42.0805, 41.1861, 42.6243, 39.9516, 42.9318, 41.3740,
         37.2327, 39.2817, 40.5286, 41.6040, 42.6707, 40.4571, 39.3979, 38.3640]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  58
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9086, 0.9336, 0.9261, 0.9284, 0.9158, 0.8903, 0.8223, 0.9194, 0.9147,
         0.9234, 0.7407, 0.9365, 0.7985, 0.9630, 0.9050, 0.8206]])
scores: tensor([43.3782, 42.7313, 42.0805, 41.1861, 42.6243, 39.9516, 42.9318, 41.3740,
        37.2327, 39.2817, 40.5286, 41.6040, 42.6707, 40.4571, 39.3979, 38.3640])
new_beam_scores: tensor([[44.2867, 43.6649, 43.0067, 42.1145, 43.5401, 40.8420, 43.7541, 42.2934,
         38.1474, 40.2051, 41.2693, 42.5405, 43.4692, 41.4201, 40.3030, 39.1846]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[44.2867, 43.6649, 43.0067, 42.1145, 43.5401, 40.8420, 43.7541, 42.2934,
         38.1474, 40.2051, 41.2693, 42.5405, 43.4692, 41.4201, 40.3030, 39.1846]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  59
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9631, 0.9606, 0.9627, 0.9591, 0.9638, 0.9615, 0.9635, 0.9644, 0.9616,
         0.9653, 0.9628, 0.9638, 0.9626, 0.9601, 0.9614, 0.9626]])
scores: tensor([44.2867, 43.6649, 43.0067, 42.1145, 43.5401, 40.8420, 43.7541, 42.2934,
        38.1474, 40.2051, 41.2693, 42.5405, 43.4692, 41.4201, 40.3030, 39.1846])
new_beam_scores: tensor([[45.2498, 44.6255, 43.9694, 43.0735, 44.5040, 41.8035, 44.7175, 43.2578,
         39.1090, 41.1704, 42.2321, 43.5042, 44.4318, 42.3803, 41.2644, 40.1472]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[45.2498, 44.6255, 43.9694, 43.0735, 44.5040, 41.8035, 44.7175, 43.2578,
         39.1090, 41.1704, 42.2321, 43.5042, 44.4318, 42.3803, 41.2644, 40.1472]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  60
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [0],
        [3],
        [3],
        [1],
        [0],
        [2],
        [2],
        [0],
        [1],
        [0],
        [0],
        [0],
        [3],
        [2],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.0206, 0.9454, 0.9569, 0.9513, 0.9469, 0.9418, 0.9512, 0.9472, 0.9439,
         0.9493, 0.9437, 0.9476, 0.9419, 0.9527, 0.9480, 0.9537]])
scores: tensor([45.2498, 44.6255, 43.9694, 43.0735, 44.5040, 41.8035, 44.7175, 43.2578,
        39.1090, 41.1704, 42.2321, 43.5042, 44.4318, 42.3803, 41.2644, 40.1472])
new_beam_scores: tensor([[45.2704, 45.5709, 44.9262, 44.0248, 45.4509, 42.7452, 45.6687, 44.2049,
         40.0529, 42.1197, 43.1758, 44.4518, 45.3737, 43.3330, 42.2124, 41.1008]])
new_beam seq: tensor([[3, 0, 3, 3, 1, 0, 2, 2, 0, 1, 0, 0, 0, 3, 2, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[45.2704, 45.5709, 44.9262, 44.0248, 45.4509, 42.7452, 45.6687, 44.2049,
         40.0529, 42.1197, 43.1758, 44.4518, 45.3737, 43.3330, 42.2124, 41.1008]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 0, 3, 3, 1, 0, 2, 2, 0, 1, 0, 0, 0, 3, 2, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  61
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [3],
        [0],
        [1],
        [1],
        [3],
        [0],
        [3],
        [3],
        [1],
        [3],
        [2],
        [3],
        [1],
        [3],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9356, 0.9545, 0.9380, 0.9455, 0.9490, 0.9562, 0.9409, 0.9488, 0.9595,
         0.0196, 0.9573, 0.9368, 0.9594, 0.9428, 0.9537, 0.9411]])
scores: tensor([45.2704, 45.5709, 44.9262, 44.0248, 45.4509, 42.7452, 45.6687, 44.2049,
        40.0529, 42.1197, 43.1758, 44.4518, 45.3737, 43.3330, 42.2124, 41.1008])
new_beam_scores: tensor([[46.2060, 46.5254, 45.8642, 44.9704, 46.3999, 43.7014, 46.6097, 45.1538,
         41.0124, 42.1394, 44.1331, 45.3886, 46.3331, 44.2757, 43.1660, 42.0419]])
new_beam seq: tensor([[0, 3, 0, 1, 1, 3, 0, 3, 3, 1, 3, 2, 3, 1, 3, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[46.2060, 46.5254, 45.8642, 44.9704, 46.3999, 43.7014, 46.6097, 45.1538,
         41.0124, 42.1394, 44.1331, 45.3886, 46.3331, 44.2757, 43.1660, 42.0419]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 3, 0, 1, 1, 3, 0, 3, 3, 1, 3, 2, 3, 1, 3, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  62
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [3],
        [2],
        [1],
        [1],
        [2],
        [2],
        [2],
        [2],
        [0],
        [2],
        [1],
        [1],
        [3],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9645, 0.9589, 0.9580, 0.9193, 0.9612, 0.9607, 0.9330, 0.9445, 0.9397,
         0.9351, 0.9253, 0.9275, 0.9634, 0.9585, 0.9528, 0.9335]])
scores: tensor([46.2060, 46.5254, 45.8642, 44.9704, 46.3999, 43.7014, 46.6097, 45.1538,
        41.0124, 42.1394, 44.1331, 45.3886, 46.3331, 44.2757, 43.1660, 42.0419])
new_beam_scores: tensor([[47.1705, 47.4843, 46.8222, 45.8897, 47.3611, 44.6621, 47.5426, 46.0982,
         41.9521, 43.0744, 45.0584, 46.3162, 47.2966, 45.2342, 44.1189, 42.9754]])
new_beam seq: tensor([[1, 1, 3, 2, 1, 1, 2, 2, 2, 2, 0, 2, 1, 1, 3, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[47.1705, 47.4843, 46.8222, 45.8897, 47.3611, 44.6621, 47.5426, 46.0982,
         41.9521, 43.0744, 45.0584, 46.3162, 47.2966, 45.2342, 44.1189, 42.9754]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 3, 2, 1, 1, 2, 2, 2, 2, 0, 2, 1, 1, 3, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  63
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [3],
        [2],
        [3],
        [3],
        [1],
        [1],
        [1],
        [2],
        [1],
        [2],
        [2],
        [2],
        [2],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9536, 0.9535, 0.9697, 0.9661, 0.9599, 0.9673, 0.9667, 0.9669, 0.9641,
         0.9667, 0.9695, 0.9657, 0.9668, 0.9672, 0.9701, 0.9556]])
scores: tensor([47.1705, 47.4843, 46.8222, 45.8897, 47.3611, 44.6621, 47.5426, 46.0982,
        41.9521, 43.0744, 45.0584, 46.3162, 47.2966, 45.2342, 44.1189, 42.9754])
new_beam_scores: tensor([[48.1242, 48.4378, 47.7920, 46.8558, 48.3210, 45.6294, 48.5093, 47.0651,
         42.9162, 44.0412, 46.0280, 47.2819, 48.2633, 46.2014, 45.0889, 43.9310]])
new_beam seq: tensor([[0, 0, 3, 2, 3, 3, 1, 1, 1, 2, 1, 2, 2, 2, 2, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[48.1242, 48.4378, 47.7920, 46.8558, 48.3210, 45.6294, 48.5093, 47.0651,
         42.9162, 44.0412, 46.0280, 47.2819, 48.2633, 46.2014, 45.0889, 43.9310]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 3, 2, 3, 3, 1, 1, 1, 2, 1, 2, 2, 2, 2, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 2.8191, -1.2145, -1.3780, -1.4707],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  64
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [2],
        [2],
        [3],
        [1],
        [2],
        [2],
        [2],
        [2],
        [3],
        [0],
        [2],
        [3],
        [2],
        [3],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9678, 0.9646, 0.9655, 0.9582, 0.9603, 0.9636, 0.9601, 0.9620, 0.9608,
         0.0176, 0.0101, 0.9579, 0.9626, 0.9610, 0.9623, 0.9671]])
scores: tensor([48.1242, 48.4378, 47.7920, 46.8558, 48.3210, 45.6294, 48.5093, 47.0651,
        42.9162, 44.0412, 46.0280, 47.2819, 48.2633, 46.2014, 45.0889, 43.9310])
new_beam_scores: tensor([[49.0919, 49.4024, 48.7575, 47.8140, 49.2813, 46.5930, 49.4695, 48.0271,
         43.8770, 44.0588, 46.0381, 48.2398, 49.2259, 47.1625, 46.0513, 44.8981]])
new_beam seq: tensor([[1, 2, 2, 3, 1, 2, 2, 2, 2, 3, 0, 2, 3, 2, 3, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[49.0919, 49.4024, 48.7575, 47.8140, 49.2813, 46.5930, 49.4695, 48.0271,
         43.8770, 44.0588, 46.0381, 48.2398, 49.2259, 47.1625, 46.0513, 44.8981]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 2, 2, 3, 1, 2, 2, 2, 2, 3, 0, 2, 3, 2, 3, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 2, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 2.8191, -1.2145, -1.3780, -1.4707],
        [-0.9813, -1.1699,  3.5833, -0.6209],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  65
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [2],
        [2],
        [3],
        [2],
        [2],
        [1],
        [1],
        [2],
        [3],
        [2],
        [3],
        [2],
        [2],
        [3],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.6099, 0.8575, 0.8300, 0.6334, 0.3855, 0.8256, 0.1272, 0.1044, 0.6703,
         0.1188, 0.8549, 0.2408, 0.1387, 0.6521, 0.7035, 0.8545]])
scores: tensor([49.0919, 49.4024, 48.7575, 47.8140, 49.2813, 46.5930, 49.4695, 48.0271,
        43.8770, 44.0588, 46.0381, 48.2398, 49.2259, 47.1625, 46.0513, 44.8981])
new_beam_scores: tensor([[49.7018, 50.2599, 49.5875, 48.4474, 49.6669, 47.4185, 49.5967, 48.1315,
         44.5473, 44.1776, 46.8930, 48.4806, 49.3646, 47.8146, 46.7548, 45.7526]])
new_beam seq: tensor([[1, 2, 2, 3, 2, 2, 1, 1, 2, 3, 2, 3, 2, 2, 3, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[49.7018, 50.2599, 49.5875, 48.4474, 49.6669, 47.4185, 49.5967, 48.1315,
         44.5473, 44.1776, 46.8930, 48.4806, 49.3646, 47.8146, 46.7548, 45.7526]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 2, 2, 3, 2, 2, 1, 1, 2, 3, 2, 3, 2, 2, 3, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 3, 2,  ..., 0, 2, 2], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1920,  1.0421,  0.8319, -0.8784],
        [-0.6026,  0.8191,  1.5171, -0.1690],
        ...,
        [ 2.8191, -1.2145, -1.3780, -1.4707],
        [-0.9813, -1.1699,  3.5833, -0.6209],
        [-1.3223, -0.7849,  2.1439, -0.3148]])
h_S size: torch.Size([1056, 4])
tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size expanded indices: torch.Size([1, 16, 66])
tensor([[[2, 3, 2,  ..., 0, 1, 1],
         [1, 3, 2,  ..., 0, 2, 2],
         [1, 0, 0,  ..., 3, 2, 2],
         ...,
         [1, 1, 2,  ..., 2, 2, 2],
         [0, 1, 0,  ..., 2, 3, 3],
         [1, 3, 3,  ..., 0, 2, 2]]], dtype=torch.int32)
final_scores: tensor([49.7018, 50.2599, 49.5875, 48.4474, 49.6669, 47.4185, 49.5967, 48.1315,
        44.5473, 44.1776, 46.8930, 48.4806, 49.3646, 47.8146, 46.7548, 45.7526])
final_seq: tensor([[2, 3, 2,  ..., 0, 1, 1],
        [1, 3, 2,  ..., 0, 2, 2],
        [1, 0, 0,  ..., 3, 2, 2],
        ...,
        [1, 1, 2,  ..., 2, 2, 2],
        [0, 1, 0,  ..., 2, 3, 3],
        [1, 3, 3,  ..., 0, 2, 2]], dtype=torch.int32)
final_logits: tensor([[[ 0.2248,  1.5734, -0.0130, -1.1496],
         [ 0.1920,  1.0421,  0.8319, -0.8784],
         [-0.6026,  0.8191,  1.5171, -0.1690],
         ...,
         [ 2.7417, -1.3079, -1.3691, -1.4708],
         [-0.6353,  3.7470, -0.8198, -0.8171],
         [-0.6030,  1.3737,  0.4614, -0.9332]],

        [[ 0.2248,  1.5734, -0.0130, -1.1496],
         [ 0.1636,  1.2655,  0.9141, -1.0465],
         [-0.4449,  0.7597,  1.4847, -0.2886],
         ...,
         [ 2.7205, -1.2683, -1.4693, -1.4744],
         [-1.0500, -1.2302,  3.4513, -0.6597],
         [-1.2878, -0.8881,  2.1126, -0.3755]],

        [[ 0.2248,  1.5734, -0.0130, -1.1496],
         [ 0.1636,  1.2655,  0.9141, -1.0465],
         [-0.4095,  0.6897,  1.3982, -0.3305],
         ...,
         [-1.8582, -1.7959, -1.8208,  2.7415],
         [-0.9559, -1.1415,  3.5516, -0.6146],
         [-1.3812, -0.8241,  2.0277, -0.1432]],

        ...,

        [[ 0.2248,  1.5734, -0.0130, -1.1496],
         [ 0.1636,  1.2655,  0.9141, -1.0465],
         [-0.4031,  0.9812,  1.3457, -0.6685],
         ...,
         [-1.2903, -1.1009,  3.3395, -1.0557],
         [-1.1435, -1.2232,  3.2768, -0.7745],
         [-1.1017, -0.6088,  1.1455, -0.2215]],

        [[ 0.2248,  1.5734, -0.0130, -1.1496],
         [ 0.3462,  1.2350,  0.7381, -0.8372],
         [-0.0758,  0.7701,  1.1101, -0.4541],
         ...,
         [-1.2220, -1.1748,  3.5013, -0.8681],
         [-1.8521, -1.6578, -1.7700,  2.5825],
         [-1.4144, -0.5579, -0.2220,  1.3442]],

        [[ 0.2248,  1.5734, -0.0130, -1.1496],
         [ 0.1636,  1.2655,  0.9141, -1.0465],
         [-0.4449,  0.7597,  1.4847, -0.2886],
         ...,
         [ 2.8191, -1.2145, -1.3780, -1.4707],
         [-0.9813, -1.1699,  3.5833, -0.6209],
         [-1.3223, -0.7849,  2.1439, -0.3148]]])
>input_sequence, gRNAde_version=0.3, model=AutoregressiveMultiGNNv1, max_num_conformers=1, checkpoint=/rds/user/ml2169/hpc-work/geometric-rna-design/checkpoints/gRNAde_ARv1_1state_das.h5, seed=0
GGACAUAUAAUCGCGUGGAUAUGGCACGCAAGUUUCUACCGGGCACCGUAAAUGUCCGAC
UAUGUCC

>sample=0, seed=0, temperature=1.0, perplexity=1.5579, recovery=0.4394, edit_dist=35, sc_score=0.8192
CUCUGGUAAUCCCAACGCUAUGGGUUGGGAGUGACAGCACAGUCCCUUUAAGAUUGUACC
UAGAGG

>sample=1, seed=0, temperature=1.0, perplexity=1.5148, recovery=0.6212, edit_dist=26, sc_score=0.9227
GUCAUGUAAUCCCACGGCUAUGGCGUGGGAGUCCCAGCUGUGACCCUUAAAGUUACAACC
AUGACC

>sample=2, seed=0, temperature=1.0, perplexity=1.5835, recovery=0.4394, edit_dist=31, sc_score=0.8793
GAAUAGUAACUCCCACGUUAUGGGUGGGAGCCACAAGGAGUGUCCCAUAAAGAUACUACC
UAUUCC

>sample=3, seed=0, temperature=1.0, perplexity=1.6262, recovery=0.4242, edit_dist=34, sc_score=0.4160
AGGCAGUAAUCCCUACGAUAAGGGUUGGGAGUUCCAGCAAUGUCCCAUAAAGAUAUUCCC
UGCCUU

>sample=4, seed=0, temperature=1.0, perplexity=1.6197, recovery=0.5303, edit_dist=31, sc_score=0.9227
CACCCGUAAUCCCACCGCUAAGGGGUGGGAGUCUCAGCGCUGCCCCCUAAAGGUAGCACC
GGGUGC

>sample=5, seed=0, temperature=1.0, perplexity=1.7501, recovery=0.5909, edit_dist=25, sc_score=0.8497
GACAUGUAAUGCCCUCGCUAUGGGAGCGUAUUACCAAGGCUGCCCAUUAAAGGUAGCACC
AUGUCC

>sample=6, seed=0, temperature=1.0, perplexity=1.5187, recovery=0.4848, edit_dist=32, sc_score=0.9002
GCGUGGUAAUGCCAUCGCUAUGCGAUGGUAGUCUCAACAGUGUCGCGUUAAGAUACUCCC
CACGCG

>sample=7, seed=0, temperature=1.0, perplexity=1.7131, recovery=0.5909, edit_dist=28, sc_score=0.9002
GCGAGGUAAUCCCCUCGCUAUGGGUGGGGAGCCUCAGUCUGGCCCCGUAAAGGUCAGACC
CUCGCG

>sample=8, seed=0, temperature=1.0, perplexity=2.0030, recovery=0.4697, edit_dist=34, sc_score=0.8333
GCGAUGUAAUUCCAACACUAUGGAUUGGAAUCCCCAAUUGUGUCCCAUUACGACAAGACC
AUCGCC

>sample=9, seed=0, temperature=1.0, perplexity=2.1042, recovery=0.4394, edit_dist=33, sc_score=0.5049
GGGUCGUAAUCUCCUCGCUAGGGGAGGAGAUCCUCAAAAGUAACCCAAAAAUUCACUACC
GGCCUU

>sample=10, seed=0, temperature=1.0, perplexity=1.8843, recovery=0.4545, edit_dist=34, sc_score=0.7876
GCUAUGUAAUCCGAACGCUAUGGGUUCGGAGUGUCAUCAAUGUCGCUCAAAGAUAUUGCC
AUAGAC

>sample=11, seed=0, temperature=1.0, perplexity=1.6471, recovery=0.4697, edit_dist=33, sc_score=0.2318
GGGGUGUAAUUCCAUCGGUAUGGGAUGGCACCGCUAGGUGUGUCCCGUAAAGAUACACCC
ACCCCU

>sample=12, seed=0, temperature=1.0, perplexity=1.5401, recovery=0.5606, edit_dist=29, sc_score=0.2374
AGCAUGUAAUAUCAACGCUAGGGGUUGACAGUUUCAACGUUGUCCCGUAAAGAUAACACC
AUGCUC

>sample=13, seed=0, temperature=1.0, perplexity=1.6453, recovery=0.4545, edit_dist=32, sc_score=0.9002
GGCCAGUAAUCCUAAGGUUAUGGUUUAGGAUCCCCAGAGUAGACCCGUAAAGUUUACACC
UGGCCC

>sample=14, seed=0, temperature=1.0, perplexity=1.7555, recovery=0.4091, edit_dist=31, sc_score=0.0443
AGAAGGUAAUGCCUUCACUAUGGGUAGGUAGCGCUAGCUGUGUCCGUAAAAGAUACAACC
CUUCUU

>sample=15, seed=0, temperature=1.0, perplexity=1.9643, recovery=0.4394, edit_dist=29, sc_score=0.9227
GUUUAGUGAGGCCUGGAGUAUGGCCAGGCCGUUUCAGCAGUGACCGUGGAAGUUACUACC
UAAACC

