/home/ml2169/miniforge3/envs/rna/lib/python3.10/site-packages/Bio/Application/__init__.py:39: BiopythonDeprecationWarning: The Bio.Application modules and modules relying on it have been deprecated.

Due to the on going maintenance burden of keeping command line application
wrappers up to date, we have decided to deprecate and eventually remove these
modules.

We instead now recommend building your command line and invoking it directly
with the subprocess module.
  warnings.warn(
/rds/user/ml2169/hpc-work/geometric-rna-design/test/../gRNAde.py:133: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  self.model.load_state_dict(torch.load(self.model_path, map_location=torch.device('cpu')))
/rds/user/ml2169/hpc-work/geometric-rna-design/test/../gRNAde_mod.py:139: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  self.model.load_state_dict(torch.load(self.model_path, map_location=torch.device('cpu')))
Instantiating gRNAde v0.3
    Using device: cpu
    Creating RNA graph featurizer for max_num_conformers=1
    Initialising GNN encoder-decoder model
    Loading model checkpoint: /rds/user/ml2169/hpc-work/geometric-rna-design/checkpoints/gRNAde_ARv1_1state_das.h5
Finished initialising gRNAde v0.3

Instantiating gRNAde v0.3
    Using device: cpu
    Creating RNA graph featurizer for max_num_conformers=1
    Initialising GNN encoder-decoder model
    Loading model checkpoint: /rds/user/ml2169/hpc-work/geometric-rna-design/checkpoints/gRNAde_ARv1_1state_das.h5
Finished initialising gRNAde v0.3

Coords: 78
Sequence: GACUCGGGGUGCCCUUCUGCGUGAAGGCUGAGAAAUACCCGUAUCACCUGAUCUGGAUAAUGCCAGCGUAGGGAAGUU
Len sequence: 78
Detected base pairs: [[   0 1648]
 [  23 1628]
 [  45 1605]
 [  65 1583]
 [  85  855]
 [ 105  835]
 [ 128  815]
 [ 151  795]
 [ 174  773]
 [ 197  731]
 [ 217  579]
 [ 240  556]
 [ 260  533]
 [ 300  511]
 [ 320  489]
 [ 340  466]
 [ 599  687]
 [ 960 1538]
 [ 982 1515]
 [1002 1492]
 [1022 1470]
 [1107 1384]
 [1127 1362]
 [1147 1342]
 [1170 1322]]
Secondary structure: '(((((((((((((.(((.....))))))(...).).)))))....((((...((((......))))...)))).))))'
Sequence length: 78
Number of residues: 78
Chain IDs: ['X']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
(((((((((((((.(((.....))))))(...).).)))))....((((...((((......))))...)))).))))
Coords: 23
Sequence: CCGAUGGUAGUGGCGAGAGUA_C
Len sequence: 23
Detected base pairs: [[ 17 451]
 [ 37 429]
 [ 60 409]
 [ 82 386]
 [102 364]
 [125 341]
 [148 319]
 [168 296]
 [190 276]
 [213 256]]
Secondary structure: '.((((((((((.)))))))))).'
Sequence length: 23
Number of residues: 23
Chain IDs: ['A' 'B']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
.((((((((((.)))))))))).
Coords: 27
Sequence: UGCUCCUAGUACGAGAGGACCGGAGUG
Len sequence: 27
Detected base pairs: [[ 17 536]
 [ 40 513]
 [ 60 491]
 [ 80 468]
 [100 445]
 [120 425]
 [185 383]
 [205 360]
 [227 337]
 [247 315]]
Secondary structure: '.((((((..((((..)))).)))))).'
Sequence length: 27
Number of residues: 27
Chain IDs: ['A']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
.((((((..((((..)))).)))))).
Coords: 46
Sequence: CUUGCUGAAGCGCGCACGGCAAGCUUGCUGAAGCGCGCACGGCAAG
Len sequence: 46
Detected base pairs: [[  0 468]
 [ 17 446]
 [ 37 424]
 [ 57 404]
 [ 80 381]
 [100 358]
 [120 338]
 [187 787]
 [210 764]
 [230 744]
 [253 721]
 [273 701]
 [296 678]
 [491 959]
 [508 937]
 [528 915]
 [548 895]
 [571 872]
 [591 849]
 [611 829]]
Secondary structure: '(((((((..[[[[[[.)))))))(((((((..]]]]]].)))))))'
Sequence length: 46
Number of residues: 46
Chain IDs: ['A' 'B']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
(((((((.........)))))))(((((((.........)))))))
Coords: 19
Sequence: ACCGUCAGAGGACACGGUU
Len sequence: 19
Detected base pairs: [[  0 364]
 [ 18 341]
 [ 38 318]
 [ 58 298]
 [ 81 276]
 [121 143]]
Secondary structure: '(((((.().....))))).'
Sequence length: 19
Number of residues: 19
Chain IDs: ['A']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
(((((.().....))))).
Coords: 35
Sequence: GGAACCGGUGCGCAUAACCACCUCAGUGCGAGCAA
Len sequence: 35
Detected base pairs: [[131 451]
 [154 431]
 [177 409]
 [220 619]
 [240 687]
 [263 664]
 [305 556]
 [369 576]
 [389 533]]
Secondary structure: '......[[[.{((.{..((]]]...)}).}.))..'
Sequence length: 35
Number of residues: 35
Chain IDs: ['A']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'OP3' 'P']
...........((....((......).)...))..
Coords: 28
Sequence: AACGGGCGCAGAAUCUGACGGUACGUUU
Len sequence: 28
Detected base pairs: [[  0 555]
 [ 19 535]
 [ 41 512]
 [ 61 492]
 [ 84 470]
 [130 404]
 [150 384]
 [173 339]
 [193 319]
 [215 299]
 [238 282]]
Secondary structure: '(((((.((((((.)))).))..))))).'
Sequence length: 28
Number of residues: 28
Chain IDs: ['A' 'B']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
(((((.((((((.)))).))..))))).
Coords: 67
Sequence: GGACAUAUAAUCGCGUGGAUAUGGCACGCAAGUUUCUACCGGGCACCGUAAAUGUCCGACUAUGUCC
Len sequence: 67
Detected base pairs: [[   0 1402]
 [  20 1382]
 [  43 1362]
 [  65 1339]
 [  85 1319]
 [ 107 1297]
 [ 127  687]
 [ 149  787]
 [ 213  642]
 [ 233  620]
 [ 253  600]
 [ 276  577]
 [ 296  557]
 [ 319  535]
 [ 339  515]
 [ 407 1065]
 [ 427 1043]
 [ 469  980]
 [ 492  960]
 [ 664  809]
 [ 829 1212]
 [ 849 1192]
 [ 872 1172]
 [ 895 1152]
 [ 918 1129]
 [ 938 1109]]
Secondary structure: '(((((({<..(((((((..[[.[[)))))))(}....>)((((((]]..]].))))))...))))))'
Sequence length: 67
Number of residues: 67
Chain IDs: ['B']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
((((((....(((((((.......)))))))(......)((((((.......))))))...))))))
Coords: 60
Sequence: UCCCGUCCACCGCGGUGAGAAGGGGGCAGAGAAACACACGAUCGUGGUACAUUACCUGCC
Len sequence: 60
Detected base pairs: [[  17  486]
 [  37  463]
 [  57  440]
 [  77  728]
 [ 100  373]
 [ 120  351]
 [ 140  328]
 [ 160  308]
 [ 182  285]
 [ 202  262]
 [ 222  245]
 [ 509 1252]
 [ 529 1232]
 [ 552 1209]
 [ 572 1189]
 [ 594 1169]
 [ 617 1149]
 [ 639 1127]
 [ 662 1087]
 [ 684 1065]
 [ 748  980]
 [ 770  957]
 [ 790  937]
 [ 812  914]
 [ 832  894]
 [ 855  877]]
Secondary structure: '.((([((((((()))))))..)))(((((((((.](((((())))))...)).)))))))'
Sequence length: 60
Number of residues: 60
Chain IDs: ['A' 'B' 'C' 'D']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
.(((.((((((()))))))..)))(((((((((..(((((())))))...)).)))))))
Coords: 60
Sequence: UCCCGUCCACCGCGGUGAGAAGGGGGCAGAGAAACACACGAUCGUGGUACAUUACCUGCC
Len sequence: 60
Detected base pairs: [[  17  486]
 [  37  463]
 [  57  440]
 [  77  728]
 [ 100  373]
 [ 120  351]
 [ 140  328]
 [ 160  308]
 [ 182  285]
 [ 202  262]
 [ 222  245]
 [ 509 1252]
 [ 529 1232]
 [ 552 1209]
 [ 572 1189]
 [ 594 1169]
 [ 617 1149]
 [ 639 1127]
 [ 662 1087]
 [ 684 1065]
 [ 748  980]
 [ 770  957]
 [ 790  937]
 [ 812  914]
 [ 832  894]
 [ 855  877]]
Secondary structure: '.((([((((((()))))))..)))(((((((((.](((((())))))...)).)))))))'
Sequence length: 60
Number of residues: 60
Chain IDs: ['A' 'B' 'C' 'D']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
.(((.((((((()))))))..)))(((((((((..(((((())))))...)).)))))))
Coords: 159
Sequence: GGAAUUGCGGGAAAGGGGUCAACAGCCGUUCAGUACCAAGUCUCAGGGGAAACUUUGAGAUGGCCUUGCAAAGGGUAUGGUAAUAAGCUGACGGACAUGGUCCUAACACGCAGCCAAGUCCUAAGUCAACAGAUCUUCUGUUGAUAUGGAUGCAGUUCA
Len sequence: 159
Detected base pairs: [[ 107 2386]
 [ 127 2366]
 [ 150 2343]
 [ 170 2323]
 [ 193 2301]
 [ 216 2281]
 [ 239 2259]
 [ 261 2237]
 [ 305 2217]
 [ 328 2197]
 [ 351 2177]
 [ 374 2157]
 [ 397 2134]
 [ 417 2111]
 [ 459 2069]
 [ 523 2027]
 [ 546 2004]
 [ 566 1981]
 [ 586 1961]
 [ 629 1939]
 [ 649 1916]
 [ 669 1896]
 [ 691 1876]
 [ 734 1725]
 [ 756 1702]
 [ 776 1679]
 [ 796 1336]
 [ 818 1313]
 [ 840 1293]
 [ 863 1271]
 [ 883 1248]
 [ 903 1226]
 [ 923 1203]
 [ 943 1183]
 [ 965 1163]
 [ 988 1143]
 [1011 1123]
 [1079 2598]
 [1359 1571]
 [1379 1548]
 [1419 1853]
 [2408 3322]
 [2431 3299]
 [2451 3277]
 [2493 3234]
 [2515 3214]
 [2538 3192]
 [2558 3169]
 [2578 3146]
 [2662 3084]
 [2685 3062]
 [2705 3039]
 [2725 3019]
 [2747 2999]
 [2769 2976]
 [2789 2956]
 [2811 2936]]
Secondary structure: '.....((((((((.((((((.(..((((.((((.((((((((((((((..[.)))))))))))((.[.....))....))).....])))))))).).))))))))))))))(((.(((((]..((((((((.....))))))))..))))).)))...'
Sequence length: 159
Number of residues: 159
Chain IDs: ['R']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
.....((((((((.((((((.(..((((.((((.((((((((((((((....)))))))))))((.......))....)))......)))))))).).))))))))))))))(((.(((((...((((((((.....))))))))..))))).)))...
Coords: 22
Sequence: GCGUCAGGUCGCGGAAGCAGGC
Len sequence: 22
Detected base pairs: [[  0 452]
 [ 20 429]
 [ 63 406]
 [ 83 384]
 [103 364]
 [125 341]
 [148 319]
 [171 297]
 [191 274]
 [211 234]]
Secondary structure: '((.(((((((().)))))))))'
Sequence length: 22
Number of residues: 22
Chain IDs: ['A' 'B']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
((.(((((((().)))))))))
Coords: 27
Sequence: GCGCGGCACCGUCCGCGGAACAAACGG
Len sequence: 27
Detected base pairs: [[ 23 340]
 [ 43 320]
 [ 66 297]
 [ 86 277]
 [109 257]
 [174 559]
 [194 536]
 [214 516]]
Secondary structure: '.(((((..[[[.))))).......]]]'
Sequence length: 27
Number of residues: 27
Chain IDs: ['A']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
.(((((......)))))..........
Coords: 122
Sequence: GGCUUUAAGUUGACGAGGGCAGGGUUUAUCGAGACAUCGGCGGGUGCCCUGCGGUCUUCCUGCGACCGUUAGAGGACUGGUAAAACCACAGGCGACUGUGGCAUAGAGCAGUCCGGGCAGGA
Len sequence: 122
Detected base pairs: [[ 278  645]
 [ 298  625]
 [ 321  605]
 [ 412 1075]
 [ 432 1055]
 [ 454 1035]
 [ 477 1015]
 [ 500  995]
 [ 523  972]
 [1098 1432]
 [1118 1412]
 [1141 1392]
 [1164 1370]
 [1184 1347]
 [1224 2594]
 [1244 2571]
 [1264 2548]
 [1284 2526]
 [1304 2506]
 [1327 2483]
 [1540 2437]
 [1562 2417]
 [1585 2397]
 [1608 2377]
 [1630 2354]
 [1650 2332]
 [1670 2312]
 [1772 2180]
 [1794 2160]
 [1816 2137]
 [1836 2114]
 [1856 2094]
 [1878 2071]
 [1898 2051]
 [1920 2031]
 [1943 2009]]
Secondary structure: '.............[[[...((((((...]]]..............))))))[[[[[.((((((]]]]]....(((((((....(((((((((..))))))))).....))))))).))))))'
Sequence length: 122
Number of residues: 122
Chain IDs: ['B']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
...................((((((....................))))))......((((((.........(((((((....(((((((((..))))))))).....))))))).))))))
Coords: 78
Sequence: GACUCGGGGUGCCCUUCUGCGUGAAGGCUGAGAAAUACCCGUAUCACCUGAUCUGGAUAAUGCCAGCGUAGGGAAGUU
Len sequence: 78
Detected base pairs: [[   0 1648]
 [  23 1628]
 [  45 1605]
 [  65 1583]
 [  85  855]
 [ 105  835]
 [ 128  815]
 [ 151  795]
 [ 174  773]
 [ 197  731]
 [ 217  579]
 [ 240  556]
 [ 260  533]
 [ 300  511]
 [ 320  489]
 [ 340  466]
 [ 599  687]
 [ 960 1538]
 [ 982 1515]
 [1002 1492]
 [1022 1470]
 [1107 1384]
 [1127 1362]
 [1147 1342]
 [1170 1322]]
Secondary structure: '(((((((((((((.(((.....))))))(...).).)))))....((((...((((......))))...)))).))))'
Sequence length: 78
Number of residues: 78
Chain IDs: ['X']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
(((((((((((((.(((.....))))))(...).).)))))....((((...((((......))))...)))).))))
Batch size:  (78, 78)
Number of nodes:  78
edge_index: tensor([[[ 0,  0,  0,  ..., 77, 77, 77],
         [ 1,  2,  3,  ..., 74, 75, 76]],

        [[ 0,  0,  0,  ..., 77, 77, 77],
         [ 1,  2,  3,  ..., 74, 75, 76]],

        [[ 0,  0,  0,  ..., 77, 77, 77],
         [ 1,  2,  3,  ..., 74, 75, 76]],

        ...,

        [[ 0,  0,  0,  ..., 77, 77, 77],
         [ 1,  2,  3,  ..., 74, 75, 76]],

        [[ 0,  0,  0,  ..., 77, 77, 77],
         [ 1,  2,  3,  ..., 74, 75, 76]],

        [[ 0,  0,  0,  ..., 77, 77, 77],
         [ 1,  2,  3,  ..., 74, 75, 76]]])
offset size: torch.Size([16, 1, 1])
offset: tensor([[[   0]],

        [[  78]],

        [[ 156]],

        [[ 234]],

        [[ 312]],

        [[ 390]],

        [[ 468]],

        [[ 546]],

        [[ 624]],

        [[ 702]],

        [[ 780]],

        [[ 858]],

        [[ 936]],

        [[1014]],

        [[1092]],

        [[1170]]])
Iteration :  0
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
new_beam_scores: tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 0, 0,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  1
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
new_beam_scores: tensor([[2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 0,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  2
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9992, 0.9992, 0.9992, 0.9992, 0.9992, 0.9992, 0.9992, 0.9992, 0.9992,
         0.9992, 0.9992, 0.9992, 0.9992, 0.9992, 0.9992, 0.9992]])
scores: tensor([2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.])
new_beam_scores: tensor([[2.9992, 2.9992, 2.9992, 2.9992, 2.9992, 2.9992, 2.9992, 2.9992, 2.9992,
         2.9992, 2.9992, 2.9992, 2.9992, 2.9992, 2.9992, 2.9992]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[2.9992, 2.9992, 2.9992, 2.9992, 2.9992, 2.9992, 2.9992, 2.9992, 2.9992,
         2.9992, 2.9992, 2.9992, 2.9992, 2.9992, 2.9992, 2.9992]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  3
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9986, 0.9986, 0.9986, 0.9986, 0.9986, 0.9986, 0.9986, 0.9986, 0.9986,
         0.9986, 0.9986, 0.9986, 0.9986, 0.9986, 0.9986, 0.9986]])
scores: tensor([2.9992, 2.9992, 2.9992, 2.9992, 2.9992, 2.9992, 2.9992, 2.9992, 2.9992,
        2.9992, 2.9992, 2.9992, 2.9992, 2.9992, 2.9992, 2.9992])
new_beam_scores: tensor([[3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978,
         3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978,
         3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  4
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978,
        3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978])
new_beam_scores: tensor([[4.9978, 4.9978, 4.9978, 4.9978, 4.9978, 4.9978, 4.9978, 4.9978, 4.9978,
         4.9978, 4.9978, 4.9978, 4.9978, 4.9978, 4.9978, 4.9978]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[4.9978, 4.9978, 4.9978, 4.9978, 4.9978, 4.9978, 4.9978, 4.9978, 4.9978,
         4.9978, 4.9978, 4.9978, 4.9978, 4.9978, 4.9978, 4.9978]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  5
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([4.9978, 4.9978, 4.9978, 4.9978, 4.9978, 4.9978, 4.9978, 4.9978, 4.9978,
        4.9978, 4.9978, 4.9978, 4.9978, 4.9978, 4.9978, 4.9978])
new_beam_scores: tensor([[5.9978, 5.9978, 5.9978, 5.9978, 5.9978, 5.9978, 5.9978, 5.9978, 5.9978,
         5.9978, 5.9978, 5.9978, 5.9978, 5.9978, 5.9978, 5.9978]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[5.9978, 5.9978, 5.9978, 5.9978, 5.9978, 5.9978, 5.9978, 5.9978, 5.9978,
         5.9978, 5.9978, 5.9978, 5.9978, 5.9978, 5.9978, 5.9978]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  6
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([5.9978, 5.9978, 5.9978, 5.9978, 5.9978, 5.9978, 5.9978, 5.9978, 5.9978,
        5.9978, 5.9978, 5.9978, 5.9978, 5.9978, 5.9978, 5.9978])
new_beam_scores: tensor([[6.9978, 6.9978, 6.9978, 6.9978, 6.9978, 6.9978, 6.9978, 6.9978, 6.9978,
         6.9978, 6.9978, 6.9978, 6.9978, 6.9978, 6.9978, 6.9978]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[6.9978, 6.9978, 6.9978, 6.9978, 6.9978, 6.9978, 6.9978, 6.9978, 6.9978,
         6.9978, 6.9978, 6.9978, 6.9978, 6.9978, 6.9978, 6.9978]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  7
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([6.9978, 6.9978, 6.9978, 6.9978, 6.9978, 6.9978, 6.9978, 6.9978, 6.9978,
        6.9978, 6.9978, 6.9978, 6.9978, 6.9978, 6.9978, 6.9978])
new_beam_scores: tensor([[7.9978, 7.9978, 7.9978, 7.9978, 7.9978, 7.9978, 7.9978, 7.9978, 7.9978,
         7.9978, 7.9978, 7.9978, 7.9978, 7.9978, 7.9978, 7.9978]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[7.9978, 7.9978, 7.9978, 7.9978, 7.9978, 7.9978, 7.9978, 7.9978, 7.9978,
         7.9978, 7.9978, 7.9978, 7.9978, 7.9978, 7.9978, 7.9978]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  8
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([7.9978, 7.9978, 7.9978, 7.9978, 7.9978, 7.9978, 7.9978, 7.9978, 7.9978,
        7.9978, 7.9978, 7.9978, 7.9978, 7.9978, 7.9978, 7.9978])
new_beam_scores: tensor([[8.9978, 8.9978, 8.9978, 8.9978, 8.9978, 8.9978, 8.9978, 8.9978, 8.9978,
         8.9978, 8.9978, 8.9978, 8.9978, 8.9978, 8.9978, 8.9978]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[8.9978, 8.9978, 8.9978, 8.9978, 8.9978, 8.9978, 8.9978, 8.9978, 8.9978,
         8.9978, 8.9978, 8.9978, 8.9978, 8.9978, 8.9978, 8.9978]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  9
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([8.9978, 8.9978, 8.9978, 8.9978, 8.9978, 8.9978, 8.9978, 8.9978, 8.9978,
        8.9978, 8.9978, 8.9978, 8.9978, 8.9978, 8.9978, 8.9978])
new_beam_scores: tensor([[9.9978, 9.9978, 9.9978, 9.9978, 9.9978, 9.9978, 9.9978, 9.9978, 9.9978,
         9.9978, 9.9978, 9.9978, 9.9978, 9.9978, 9.9978, 9.9978]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[9.9978, 9.9978, 9.9978, 9.9978, 9.9978, 9.9978, 9.9978, 9.9978, 9.9978,
         9.9978, 9.9978, 9.9978, 9.9978, 9.9978, 9.9978, 9.9978]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  10
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([9.9978, 9.9978, 9.9978, 9.9978, 9.9978, 9.9978, 9.9978, 9.9978, 9.9978,
        9.9978, 9.9978, 9.9978, 9.9978, 9.9978, 9.9978, 9.9978])
new_beam_scores: tensor([[10.9978, 10.9978, 10.9978, 10.9978, 10.9978, 10.9978, 10.9978, 10.9978,
         10.9978, 10.9978, 10.9978, 10.9978, 10.9978, 10.9978, 10.9978, 10.9978]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[10.9978, 10.9978, 10.9978, 10.9978, 10.9978, 10.9978, 10.9978, 10.9978,
         10.9978, 10.9978, 10.9978, 10.9978, 10.9978, 10.9978, 10.9978, 10.9978]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  11
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([10.9978, 10.9978, 10.9978, 10.9978, 10.9978, 10.9978, 10.9978, 10.9978,
        10.9978, 10.9978, 10.9978, 10.9978, 10.9978, 10.9978, 10.9978, 10.9978])
new_beam_scores: tensor([[11.9978, 11.9978, 11.9978, 11.9978, 11.9978, 11.9978, 11.9978, 11.9978,
         11.9978, 11.9978, 11.9978, 11.9978, 11.9978, 11.9978, 11.9978, 11.9978]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[11.9978, 11.9978, 11.9978, 11.9978, 11.9978, 11.9978, 11.9978, 11.9978,
         11.9978, 11.9978, 11.9978, 11.9978, 11.9978, 11.9978, 11.9978, 11.9978]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  12
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([11.9978, 11.9978, 11.9978, 11.9978, 11.9978, 11.9978, 11.9978, 11.9978,
        11.9978, 11.9978, 11.9978, 11.9978, 11.9978, 11.9978, 11.9978, 11.9978])
new_beam_scores: tensor([[12.9978, 12.9978, 12.9978, 12.9978, 12.9978, 12.9978, 12.9978, 12.9978,
         12.9978, 12.9978, 12.9978, 12.9978, 12.9978, 12.9978, 12.9978, 12.9978]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[12.9978, 12.9978, 12.9978, 12.9978, 12.9978, 12.9978, 12.9978, 12.9978,
         12.9978, 12.9978, 12.9978, 12.9978, 12.9978, 12.9978, 12.9978, 12.9978]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  13
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([12.9978, 12.9978, 12.9978, 12.9978, 12.9978, 12.9978, 12.9978, 12.9978,
        12.9978, 12.9978, 12.9978, 12.9978, 12.9978, 12.9978, 12.9978, 12.9978])
new_beam_scores: tensor([[13.9978, 13.9978, 13.9978, 13.9978, 13.9978, 13.9978, 13.9978, 13.9978,
         13.9978, 13.9978, 13.9978, 13.9978, 13.9978, 13.9978, 13.9978, 13.9978]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[13.9978, 13.9978, 13.9978, 13.9978, 13.9978, 13.9978, 13.9978, 13.9978,
         13.9978, 13.9978, 13.9978, 13.9978, 13.9978, 13.9978, 13.9978, 13.9978]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  14
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([13.9978, 13.9978, 13.9978, 13.9978, 13.9978, 13.9978, 13.9978, 13.9978,
        13.9978, 13.9978, 13.9978, 13.9978, 13.9978, 13.9978, 13.9978, 13.9978])
new_beam_scores: tensor([[14.9978, 14.9978, 14.9978, 14.9978, 14.9978, 14.9978, 14.9978, 14.9978,
         14.9978, 14.9978, 14.9978, 14.9978, 14.9978, 14.9978, 14.9978, 14.9978]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[14.9978, 14.9978, 14.9978, 14.9978, 14.9978, 14.9978, 14.9978, 14.9978,
         14.9978, 14.9978, 14.9978, 14.9978, 14.9978, 14.9978, 14.9978, 14.9978]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  15
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([14.9978, 14.9978, 14.9978, 14.9978, 14.9978, 14.9978, 14.9978, 14.9978,
        14.9978, 14.9978, 14.9978, 14.9978, 14.9978, 14.9978, 14.9978, 14.9978])
new_beam_scores: tensor([[15.9978, 15.9978, 15.9978, 15.9978, 15.9978, 15.9978, 15.9978, 15.9978,
         15.9978, 15.9978, 15.9978, 15.9978, 15.9978, 15.9978, 15.9978, 15.9978]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[15.9978, 15.9978, 15.9978, 15.9978, 15.9978, 15.9978, 15.9978, 15.9978,
         15.9978, 15.9978, 15.9978, 15.9978, 15.9978, 15.9978, 15.9978, 15.9978]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  16
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9988, 0.9988, 0.9988, 0.9988, 0.9988, 0.9988, 0.9988, 0.9988, 0.9988,
         0.9988, 0.9988, 0.9988, 0.9988, 0.9988, 0.9988, 0.9988]])
scores: tensor([15.9978, 15.9978, 15.9978, 15.9978, 15.9978, 15.9978, 15.9978, 15.9978,
        15.9978, 15.9978, 15.9978, 15.9978, 15.9978, 15.9978, 15.9978, 15.9978])
new_beam_scores: tensor([[16.9965, 16.9965, 16.9965, 16.9965, 16.9965, 16.9965, 16.9965, 16.9965,
         16.9965, 16.9965, 16.9965, 16.9965, 16.9965, 16.9965, 16.9965, 16.9965]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[16.9965, 16.9965, 16.9965, 16.9965, 16.9965, 16.9965, 16.9965, 16.9965,
         16.9965, 16.9965, 16.9965, 16.9965, 16.9965, 16.9965, 16.9965, 16.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  17
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([16.9965, 16.9965, 16.9965, 16.9965, 16.9965, 16.9965, 16.9965, 16.9965,
        16.9965, 16.9965, 16.9965, 16.9965, 16.9965, 16.9965, 16.9965, 16.9965])
new_beam_scores: tensor([[17.9965, 17.9965, 17.9965, 17.9965, 17.9965, 17.9965, 17.9965, 17.9965,
         17.9965, 17.9965, 17.9965, 17.9965, 17.9965, 17.9965, 17.9965, 17.9965]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[17.9965, 17.9965, 17.9965, 17.9965, 17.9965, 17.9965, 17.9965, 17.9965,
         17.9965, 17.9965, 17.9965, 17.9965, 17.9965, 17.9965, 17.9965, 17.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  18
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([17.9965, 17.9965, 17.9965, 17.9965, 17.9965, 17.9965, 17.9965, 17.9965,
        17.9965, 17.9965, 17.9965, 17.9965, 17.9965, 17.9965, 17.9965, 17.9965])
new_beam_scores: tensor([[18.9965, 18.9965, 18.9965, 18.9965, 18.9965, 18.9965, 18.9965, 18.9965,
         18.9965, 18.9965, 18.9965, 18.9965, 18.9965, 18.9965, 18.9965, 18.9965]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[18.9965, 18.9965, 18.9965, 18.9965, 18.9965, 18.9965, 18.9965, 18.9965,
         18.9965, 18.9965, 18.9965, 18.9965, 18.9965, 18.9965, 18.9965, 18.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  19
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([18.9965, 18.9965, 18.9965, 18.9965, 18.9965, 18.9965, 18.9965, 18.9965,
        18.9965, 18.9965, 18.9965, 18.9965, 18.9965, 18.9965, 18.9965, 18.9965])
new_beam_scores: tensor([[19.9965, 19.9965, 19.9965, 19.9965, 19.9965, 19.9965, 19.9965, 19.9965,
         19.9965, 19.9965, 19.9965, 19.9965, 19.9965, 19.9965, 19.9965, 19.9965]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[19.9965, 19.9965, 19.9965, 19.9965, 19.9965, 19.9965, 19.9965, 19.9965,
         19.9965, 19.9965, 19.9965, 19.9965, 19.9965, 19.9965, 19.9965, 19.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  20
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([19.9965, 19.9965, 19.9965, 19.9965, 19.9965, 19.9965, 19.9965, 19.9965,
        19.9965, 19.9965, 19.9965, 19.9965, 19.9965, 19.9965, 19.9965, 19.9965])
new_beam_scores: tensor([[20.9965, 20.9965, 20.9965, 20.9965, 20.9965, 20.9965, 20.9965, 20.9965,
         20.9965, 20.9965, 20.9965, 20.9965, 20.9965, 20.9965, 20.9965, 20.9965]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[20.9965, 20.9965, 20.9965, 20.9965, 20.9965, 20.9965, 20.9965, 20.9965,
         20.9965, 20.9965, 20.9965, 20.9965, 20.9965, 20.9965, 20.9965, 20.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  21
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [0],
        [2],
        [0],
        [0],
        [0],
        [2],
        [0],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.8785, 0.8785, 0.8785, 0.8785, 0.8785, 0.8785, 0.8785, 0.1215, 0.8785,
         0.1215, 0.1215, 0.1215, 0.8785, 0.1215, 0.8785, 0.8785]])
scores: tensor([20.9965, 20.9965, 20.9965, 20.9965, 20.9965, 20.9965, 20.9965, 20.9965,
        20.9965, 20.9965, 20.9965, 20.9965, 20.9965, 20.9965, 20.9965, 20.9965])
new_beam_scores: tensor([[21.8750, 21.8750, 21.8750, 21.8750, 21.8750, 21.8750, 21.8750, 21.1181,
         21.8750, 21.1181, 21.1181, 21.1181, 21.8750, 21.1181, 21.8750, 21.8750]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 0, 0, 2, 0, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[21.8750, 21.8750, 21.8750, 21.8750, 21.8750, 21.8750, 21.8750, 21.1181,
         21.8750, 21.1181, 21.1181, 21.1181, 21.8750, 21.1181, 21.8750, 21.8750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 0, 0, 2, 0, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  22
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([21.8750, 21.8750, 21.8750, 21.8750, 21.8750, 21.8750, 21.8750, 21.1181,
        21.8750, 21.1181, 21.1181, 21.1181, 21.8750, 21.1181, 21.8750, 21.8750])
new_beam_scores: tensor([[22.8750, 22.8750, 22.8750, 22.8750, 22.8750, 22.8750, 22.8750, 22.1181,
         22.8750, 22.1181, 22.1181, 22.1181, 22.8750, 22.1181, 22.8750, 22.8750]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[22.8750, 22.8750, 22.8750, 22.8750, 22.8750, 22.8750, 22.8750, 22.1181,
         22.8750, 22.1181, 22.1181, 22.1181, 22.8750, 22.1181, 22.8750, 22.8750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  23
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([22.8750, 22.8750, 22.8750, 22.8750, 22.8750, 22.8750, 22.8750, 22.1181,
        22.8750, 22.1181, 22.1181, 22.1181, 22.8750, 22.1181, 22.8750, 22.8750])
new_beam_scores: tensor([[23.8750, 23.8750, 23.8750, 23.8750, 23.8750, 23.8750, 23.8750, 23.1181,
         23.8750, 23.1181, 23.1181, 23.1181, 23.8750, 23.1181, 23.8750, 23.8750]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[23.8750, 23.8750, 23.8750, 23.8750, 23.8750, 23.8750, 23.8750, 23.1181,
         23.8750, 23.1181, 23.1181, 23.1181, 23.8750, 23.1181, 23.8750, 23.8750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  24
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([23.8750, 23.8750, 23.8750, 23.8750, 23.8750, 23.8750, 23.8750, 23.1181,
        23.8750, 23.1181, 23.1181, 23.1181, 23.8750, 23.1181, 23.8750, 23.8750])
new_beam_scores: tensor([[24.8750, 24.8750, 24.8750, 24.8750, 24.8750, 24.8750, 24.8750, 24.1181,
         24.8750, 24.1181, 24.1181, 24.1181, 24.8750, 24.1181, 24.8750, 24.8750]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[24.8750, 24.8750, 24.8750, 24.8750, 24.8750, 24.8750, 24.8750, 24.1181,
         24.8750, 24.1181, 24.1181, 24.1181, 24.8750, 24.1181, 24.8750, 24.8750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  25
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([24.8750, 24.8750, 24.8750, 24.8750, 24.8750, 24.8750, 24.8750, 24.1181,
        24.8750, 24.1181, 24.1181, 24.1181, 24.8750, 24.1181, 24.8750, 24.8750])
new_beam_scores: tensor([[25.8750, 25.8750, 25.8750, 25.8750, 25.8750, 25.8750, 25.8750, 25.1181,
         25.8750, 25.1181, 25.1181, 25.1181, 25.8750, 25.1181, 25.8750, 25.8750]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[25.8750, 25.8750, 25.8750, 25.8750, 25.8750, 25.8750, 25.8750, 25.1181,
         25.8750, 25.1181, 25.1181, 25.1181, 25.8750, 25.1181, 25.8750, 25.8750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  26
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([25.8750, 25.8750, 25.8750, 25.8750, 25.8750, 25.8750, 25.8750, 25.1181,
        25.8750, 25.1181, 25.1181, 25.1181, 25.8750, 25.1181, 25.8750, 25.8750])
new_beam_scores: tensor([[26.8750, 26.8750, 26.8750, 26.8750, 26.8750, 26.8750, 26.8750, 26.1181,
         26.8750, 26.1181, 26.1181, 26.1181, 26.8750, 26.1181, 26.8750, 26.8750]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[26.8750, 26.8750, 26.8750, 26.8750, 26.8750, 26.8750, 26.8750, 26.1181,
         26.8750, 26.1181, 26.1181, 26.1181, 26.8750, 26.1181, 26.8750, 26.8750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  27
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([26.8750, 26.8750, 26.8750, 26.8750, 26.8750, 26.8750, 26.8750, 26.1181,
        26.8750, 26.1181, 26.1181, 26.1181, 26.8750, 26.1181, 26.8750, 26.8750])
new_beam_scores: tensor([[27.8750, 27.8750, 27.8750, 27.8750, 27.8750, 27.8750, 27.8750, 27.1181,
         27.8750, 27.1181, 27.1181, 27.1181, 27.8750, 27.1181, 27.8750, 27.8750]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[27.8750, 27.8750, 27.8750, 27.8750, 27.8750, 27.8750, 27.8750, 27.1181,
         27.8750, 27.1181, 27.1181, 27.1181, 27.8750, 27.1181, 27.8750, 27.8750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  28
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([27.8750, 27.8750, 27.8750, 27.8750, 27.8750, 27.8750, 27.8750, 27.1181,
        27.8750, 27.1181, 27.1181, 27.1181, 27.8750, 27.1181, 27.8750, 27.8750])
new_beam_scores: tensor([[28.8750, 28.8750, 28.8750, 28.8750, 28.8750, 28.8750, 28.8750, 28.1181,
         28.8750, 28.1181, 28.1181, 28.1181, 28.8750, 28.1181, 28.8750, 28.8750]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[28.8750, 28.8750, 28.8750, 28.8750, 28.8750, 28.8750, 28.8750, 28.1181,
         28.8750, 28.1181, 28.1181, 28.1181, 28.8750, 28.1181, 28.8750, 28.8750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  29
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([28.8750, 28.8750, 28.8750, 28.8750, 28.8750, 28.8750, 28.8750, 28.1181,
        28.8750, 28.1181, 28.1181, 28.1181, 28.8750, 28.1181, 28.8750, 28.8750])
new_beam_scores: tensor([[29.8750, 29.8750, 29.8750, 29.8750, 29.8750, 29.8750, 29.8750, 29.1181,
         29.8750, 29.1181, 29.1181, 29.1181, 29.8750, 29.1181, 29.8750, 29.8750]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[29.8750, 29.8750, 29.8750, 29.8750, 29.8750, 29.8750, 29.8750, 29.1181,
         29.8750, 29.1181, 29.1181, 29.1181, 29.8750, 29.1181, 29.8750, 29.8750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  30
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([29.8750, 29.8750, 29.8750, 29.8750, 29.8750, 29.8750, 29.8750, 29.1181,
        29.8750, 29.1181, 29.1181, 29.1181, 29.8750, 29.1181, 29.8750, 29.8750])
new_beam_scores: tensor([[30.8750, 30.8750, 30.8750, 30.8750, 30.8750, 30.8750, 30.8750, 30.1181,
         30.8750, 30.1181, 30.1181, 30.1181, 30.8750, 30.1181, 30.8750, 30.8750]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[30.8750, 30.8750, 30.8750, 30.8750, 30.8750, 30.8750, 30.8750, 30.1181,
         30.8750, 30.1181, 30.1181, 30.1181, 30.8750, 30.1181, 30.8750, 30.8750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  31
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9989, 0.9989, 0.9989, 0.9989, 0.9989, 0.9989, 0.9989, 0.9997, 0.9989,
         0.9997, 0.9997, 0.9997, 0.9989, 0.9997, 0.9989, 0.9989]])
scores: tensor([30.8750, 30.8750, 30.8750, 30.8750, 30.8750, 30.8750, 30.8750, 30.1181,
        30.8750, 30.1181, 30.1181, 30.1181, 30.8750, 30.1181, 30.8750, 30.8750])
new_beam_scores: tensor([[31.8740, 31.8740, 31.8740, 31.8740, 31.8740, 31.8740, 31.8740, 31.1178,
         31.8740, 31.1178, 31.1178, 31.1178, 31.8740, 31.1178, 31.8740, 31.8740]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[31.8740, 31.8740, 31.8740, 31.8740, 31.8740, 31.8740, 31.8740, 31.1178,
         31.8740, 31.1178, 31.1178, 31.1178, 31.8740, 31.1178, 31.8740, 31.8740]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  32
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([31.8740, 31.8740, 31.8740, 31.8740, 31.8740, 31.8740, 31.8740, 31.1178,
        31.8740, 31.1178, 31.1178, 31.1178, 31.8740, 31.1178, 31.8740, 31.8740])
new_beam_scores: tensor([[32.8740, 32.8740, 32.8740, 32.8740, 32.8740, 32.8740, 32.8740, 32.1178,
         32.8740, 32.1178, 32.1178, 32.1178, 32.8740, 32.1178, 32.8740, 32.8740]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[32.8740, 32.8740, 32.8740, 32.8740, 32.8740, 32.8740, 32.8740, 32.1178,
         32.8740, 32.1178, 32.1178, 32.1178, 32.8740, 32.1178, 32.8740, 32.8740]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  33
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([32.8740, 32.8740, 32.8740, 32.8740, 32.8740, 32.8740, 32.8740, 32.1178,
        32.8740, 32.1178, 32.1178, 32.1178, 32.8740, 32.1178, 32.8740, 32.8740])
new_beam_scores: tensor([[33.8740, 33.8740, 33.8740, 33.8740, 33.8740, 33.8740, 33.8740, 33.1178,
         33.8740, 33.1178, 33.1178, 33.1178, 33.8740, 33.1178, 33.8740, 33.8740]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[33.8740, 33.8740, 33.8740, 33.8740, 33.8740, 33.8740, 33.8740, 33.1178,
         33.8740, 33.1178, 33.1178, 33.1178, 33.8740, 33.1178, 33.8740, 33.8740]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  34
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([33.8740, 33.8740, 33.8740, 33.8740, 33.8740, 33.8740, 33.8740, 33.1178,
        33.8740, 33.1178, 33.1178, 33.1178, 33.8740, 33.1178, 33.8740, 33.8740])
new_beam_scores: tensor([[34.8740, 34.8740, 34.8740, 34.8740, 34.8740, 34.8740, 34.8740, 34.1178,
         34.8740, 34.1178, 34.1178, 34.1178, 34.8740, 34.1178, 34.8740, 34.8740]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[34.8740, 34.8740, 34.8740, 34.8740, 34.8740, 34.8740, 34.8740, 34.1178,
         34.8740, 34.1178, 34.1178, 34.1178, 34.8740, 34.1178, 34.8740, 34.8740]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  35
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([34.8740, 34.8740, 34.8740, 34.8740, 34.8740, 34.8740, 34.8740, 34.1178,
        34.8740, 34.1178, 34.1178, 34.1178, 34.8740, 34.1178, 34.8740, 34.8740])
new_beam_scores: tensor([[35.8739, 35.8739, 35.8739, 35.8739, 35.8739, 35.8739, 35.8739, 35.1178,
         35.8739, 35.1178, 35.1178, 35.1178, 35.8739, 35.1178, 35.8739, 35.8739]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[35.8739, 35.8739, 35.8739, 35.8739, 35.8739, 35.8739, 35.8739, 35.1178,
         35.8739, 35.1178, 35.1178, 35.1178, 35.8739, 35.1178, 35.8739, 35.8739]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  36
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([35.8739, 35.8739, 35.8739, 35.8739, 35.8739, 35.8739, 35.8739, 35.1178,
        35.8739, 35.1178, 35.1178, 35.1178, 35.8739, 35.1178, 35.8739, 35.8739])
new_beam_scores: tensor([[36.8739, 36.8739, 36.8739, 36.8739, 36.8739, 36.8739, 36.8739, 36.1178,
         36.8739, 36.1178, 36.1178, 36.1178, 36.8739, 36.1178, 36.8739, 36.8739]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[36.8739, 36.8739, 36.8739, 36.8739, 36.8739, 36.8739, 36.8739, 36.1178,
         36.8739, 36.1178, 36.1178, 36.1178, 36.8739, 36.1178, 36.8739, 36.8739]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  37
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([36.8739, 36.8739, 36.8739, 36.8739, 36.8739, 36.8739, 36.8739, 36.1178,
        36.8739, 36.1178, 36.1178, 36.1178, 36.8739, 36.1178, 36.8739, 36.8739])
new_beam_scores: tensor([[37.8739, 37.8739, 37.8739, 37.8739, 37.8739, 37.8739, 37.8739, 37.1178,
         37.8739, 37.1178, 37.1178, 37.1178, 37.8739, 37.1178, 37.8739, 37.8739]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[37.8739, 37.8739, 37.8739, 37.8739, 37.8739, 37.8739, 37.8739, 37.1178,
         37.8739, 37.1178, 37.1178, 37.1178, 37.8739, 37.1178, 37.8739, 37.8739]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  38
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([37.8739, 37.8739, 37.8739, 37.8739, 37.8739, 37.8739, 37.8739, 37.1178,
        37.8739, 37.1178, 37.1178, 37.1178, 37.8739, 37.1178, 37.8739, 37.8739])
new_beam_scores: tensor([[38.8739, 38.8739, 38.8739, 38.8739, 38.8739, 38.8739, 38.8739, 38.1178,
         38.8739, 38.1178, 38.1178, 38.1178, 38.8739, 38.1178, 38.8739, 38.8739]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[38.8739, 38.8739, 38.8739, 38.8739, 38.8739, 38.8739, 38.8739, 38.1178,
         38.8739, 38.1178, 38.1178, 38.1178, 38.8739, 38.1178, 38.8739, 38.8739]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  39
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([38.8739, 38.8739, 38.8739, 38.8739, 38.8739, 38.8739, 38.8739, 38.1178,
        38.8739, 38.1178, 38.1178, 38.1178, 38.8739, 38.1178, 38.8739, 38.8739])
new_beam_scores: tensor([[39.8739, 39.8739, 39.8739, 39.8739, 39.8739, 39.8739, 39.8739, 39.1178,
         39.8739, 39.1178, 39.1178, 39.1178, 39.8739, 39.1178, 39.8739, 39.8739]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[39.8739, 39.8739, 39.8739, 39.8739, 39.8739, 39.8739, 39.8739, 39.1178,
         39.8739, 39.1178, 39.1178, 39.1178, 39.8739, 39.1178, 39.8739, 39.8739]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  40
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([39.8739, 39.8739, 39.8739, 39.8739, 39.8739, 39.8739, 39.8739, 39.1178,
        39.8739, 39.1178, 39.1178, 39.1178, 39.8739, 39.1178, 39.8739, 39.8739])
new_beam_scores: tensor([[40.8739, 40.8739, 40.8739, 40.8739, 40.8739, 40.8739, 40.8739, 40.1178,
         40.8739, 40.1178, 40.1178, 40.1178, 40.8739, 40.1178, 40.8739, 40.8739]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[40.8739, 40.8739, 40.8739, 40.8739, 40.8739, 40.8739, 40.8739, 40.1178,
         40.8739, 40.1178, 40.1178, 40.1178, 40.8739, 40.1178, 40.8739, 40.8739]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  41
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([40.8739, 40.8739, 40.8739, 40.8739, 40.8739, 40.8739, 40.8739, 40.1178,
        40.8739, 40.1178, 40.1178, 40.1178, 40.8739, 40.1178, 40.8739, 40.8739])
new_beam_scores: tensor([[41.8739, 41.8739, 41.8739, 41.8739, 41.8739, 41.8739, 41.8739, 41.1178,
         41.8739, 41.1178, 41.1178, 41.1178, 41.8739, 41.1178, 41.8739, 41.8739]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[41.8739, 41.8739, 41.8739, 41.8739, 41.8739, 41.8739, 41.8739, 41.1178,
         41.8739, 41.1178, 41.1178, 41.1178, 41.8739, 41.1178, 41.8739, 41.8739]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  42
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([41.8739, 41.8739, 41.8739, 41.8739, 41.8739, 41.8739, 41.8739, 41.1178,
        41.8739, 41.1178, 41.1178, 41.1178, 41.8739, 41.1178, 41.8739, 41.8739])
new_beam_scores: tensor([[42.8739, 42.8739, 42.8739, 42.8739, 42.8739, 42.8739, 42.8739, 42.1178,
         42.8739, 42.1178, 42.1178, 42.1178, 42.8739, 42.1178, 42.8739, 42.8739]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[42.8739, 42.8739, 42.8739, 42.8739, 42.8739, 42.8739, 42.8739, 42.1178,
         42.8739, 42.1178, 42.1178, 42.1178, 42.8739, 42.1178, 42.8739, 42.8739]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  43
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([42.8739, 42.8739, 42.8739, 42.8739, 42.8739, 42.8739, 42.8739, 42.1178,
        42.8739, 42.1178, 42.1178, 42.1178, 42.8739, 42.1178, 42.8739, 42.8739])
new_beam_scores: tensor([[43.8739, 43.8739, 43.8739, 43.8739, 43.8739, 43.8739, 43.8739, 43.1178,
         43.8739, 43.1178, 43.1178, 43.1178, 43.8739, 43.1178, 43.8739, 43.8739]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[43.8739, 43.8739, 43.8739, 43.8739, 43.8739, 43.8739, 43.8739, 43.1178,
         43.8739, 43.1178, 43.1178, 43.1178, 43.8739, 43.1178, 43.8739, 43.8739]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  44
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [3],
        [3],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9209, 0.9209, 0.9209, 0.9209, 0.0783, 0.0783, 0.9209, 0.9034, 0.9209,
         0.9034, 0.9034, 0.9034, 0.9209, 0.9034, 0.9209, 0.9209]])
scores: tensor([43.8739, 43.8739, 43.8739, 43.8739, 43.8739, 43.8739, 43.8739, 43.1178,
        43.8739, 43.1178, 43.1178, 43.1178, 43.8739, 43.1178, 43.8739, 43.8739])
new_beam_scores: tensor([[44.7948, 44.7948, 44.7948, 44.7948, 43.9522, 43.9522, 44.7948, 44.0211,
         44.7948, 44.0211, 44.0211, 44.0211, 44.7948, 44.0211, 44.7948, 44.7948]])
new_beam seq: tensor([[0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[44.7948, 44.7948, 44.7948, 44.7948, 43.9522, 43.9522, 44.7948, 44.0211,
         44.7948, 44.0211, 44.0211, 44.0211, 44.7948, 44.0211, 44.7948, 44.7948]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  45
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([44.7948, 44.7948, 44.7948, 44.7948, 43.9522, 43.9522, 44.7948, 44.0211,
        44.7948, 44.0211, 44.0211, 44.0211, 44.7948, 44.0211, 44.7948, 44.7948])
new_beam_scores: tensor([[45.7948, 45.7948, 45.7948, 45.7948, 44.9522, 44.9522, 45.7948, 45.0211,
         45.7948, 45.0211, 45.0211, 45.0211, 45.7948, 45.0211, 45.7948, 45.7948]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[45.7948, 45.7948, 45.7948, 45.7948, 44.9522, 44.9522, 45.7948, 45.0211,
         45.7948, 45.0211, 45.0211, 45.0211, 45.7948, 45.0211, 45.7948, 45.7948]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  46
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [1],
        [1],
        [1],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.7731, 0.7731, 0.7731, 0.7731, 0.4989, 0.4989, 0.7731, 0.8367, 0.7731,
         0.8367, 0.8367, 0.1633, 0.2269, 0.1633, 0.7731, 0.7731]])
scores: tensor([45.7948, 45.7948, 45.7948, 45.7948, 44.9522, 44.9522, 45.7948, 45.0211,
        45.7948, 45.0211, 45.0211, 45.0211, 45.7948, 45.0211, 45.7948, 45.7948])
new_beam_scores: tensor([[46.5679, 46.5679, 46.5679, 46.5679, 45.4511, 45.4511, 46.5679, 45.8578,
         46.5679, 45.8578, 45.8578, 45.1844, 46.0218, 45.1844, 46.5679, 46.5679]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[46.5679, 46.5679, 46.5679, 46.5679, 45.4511, 45.4511, 46.5679, 45.8578,
         46.5679, 45.8578, 45.8578, 45.1844, 46.0218, 45.1844, 46.5679, 46.5679]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  47
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([46.5679, 46.5679, 46.5679, 46.5679, 45.4511, 45.4511, 46.5679, 45.8578,
        46.5679, 45.8578, 45.8578, 45.1844, 46.0218, 45.1844, 46.5679, 46.5679])
new_beam_scores: tensor([[47.5679, 47.5679, 47.5679, 47.5679, 46.4511, 46.4511, 47.5679, 46.8578,
         47.5679, 46.8578, 46.8578, 46.1844, 47.0218, 46.1844, 47.5679, 47.5679]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[47.5679, 47.5679, 47.5679, 47.5679, 46.4511, 46.4511, 47.5679, 46.8578,
         47.5679, 46.8578, 46.8578, 46.1844, 47.0218, 46.1844, 47.5679, 47.5679]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  48
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([47.5679, 47.5679, 47.5679, 47.5679, 46.4511, 46.4511, 47.5679, 46.8578,
        47.5679, 46.8578, 46.8578, 46.1844, 47.0218, 46.1844, 47.5679, 47.5679])
new_beam_scores: tensor([[48.5679, 48.5679, 48.5679, 48.5679, 47.4511, 47.4511, 48.5679, 47.8578,
         48.5679, 47.8578, 47.8578, 47.1844, 48.0218, 47.1844, 48.5679, 48.5679]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[48.5679, 48.5679, 48.5679, 48.5679, 47.4511, 47.4511, 48.5679, 47.8578,
         48.5679, 47.8578, 47.8578, 47.1844, 48.0218, 47.1844, 48.5679, 48.5679]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  49
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9997, 0.9997, 0.9997, 0.9997, 0.9976, 0.9976, 0.9997, 0.9997, 0.9997,
         0.9997, 0.9997, 0.9920, 0.9934, 0.9920, 0.9997, 0.9997]])
scores: tensor([48.5679, 48.5679, 48.5679, 48.5679, 47.4511, 47.4511, 48.5679, 47.8578,
        48.5679, 47.8578, 47.8578, 47.1844, 48.0218, 47.1844, 48.5679, 48.5679])
new_beam_scores: tensor([[49.5676, 49.5676, 49.5676, 49.5676, 48.4487, 48.4487, 49.5676, 48.8575,
         49.5676, 48.8575, 48.8575, 48.1764, 49.0152, 48.1764, 49.5676, 49.5676]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[49.5676, 49.5676, 49.5676, 49.5676, 48.4487, 48.4487, 49.5676, 48.8575,
         49.5676, 48.8575, 48.8575, 48.1764, 49.0152, 48.1764, 49.5676, 49.5676]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  50
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([49.5676, 49.5676, 49.5676, 49.5676, 48.4487, 48.4487, 49.5676, 48.8575,
        49.5676, 48.8575, 48.8575, 48.1764, 49.0152, 48.1764, 49.5676, 49.5676])
new_beam_scores: tensor([[50.5676, 50.5676, 50.5676, 50.5676, 49.4487, 49.4487, 50.5676, 49.8575,
         50.5676, 49.8575, 49.8575, 49.1764, 50.0152, 49.1764, 50.5676, 50.5676]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[50.5676, 50.5676, 50.5676, 50.5676, 49.4487, 49.4487, 50.5676, 49.8575,
         50.5676, 49.8575, 49.8575, 49.1764, 50.0152, 49.1764, 50.5676, 50.5676]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  51
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([50.5676, 50.5676, 50.5676, 50.5676, 49.4487, 49.4487, 50.5676, 49.8575,
        50.5676, 49.8575, 49.8575, 49.1764, 50.0152, 49.1764, 50.5676, 50.5676])
new_beam_scores: tensor([[51.5676, 51.5676, 51.5676, 51.5676, 50.4487, 50.4487, 51.5676, 50.8575,
         51.5676, 50.8575, 50.8575, 50.1764, 51.0152, 50.1764, 51.5676, 51.5676]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[51.5676, 51.5676, 51.5676, 51.5676, 50.4487, 50.4487, 51.5676, 50.8575,
         51.5676, 50.8575, 50.8575, 50.1764, 51.0152, 50.1764, 51.5676, 51.5676]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  52
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([51.5676, 51.5676, 51.5676, 51.5676, 50.4487, 50.4487, 51.5676, 50.8575,
        51.5676, 50.8575, 50.8575, 50.1764, 51.0152, 50.1764, 51.5676, 51.5676])
new_beam_scores: tensor([[52.5676, 52.5676, 52.5676, 52.5676, 51.4487, 51.4487, 52.5676, 51.8575,
         52.5676, 51.8575, 51.8575, 51.1764, 52.0152, 51.1764, 52.5676, 52.5676]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[52.5676, 52.5676, 52.5676, 52.5676, 51.4487, 51.4487, 52.5676, 51.8575,
         52.5676, 51.8575, 51.8575, 51.1764, 52.0152, 51.1764, 52.5676, 52.5676]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  53
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([52.5676, 52.5676, 52.5676, 52.5676, 51.4487, 51.4487, 52.5676, 51.8575,
        52.5676, 51.8575, 51.8575, 51.1764, 52.0152, 51.1764, 52.5676, 52.5676])
new_beam_scores: tensor([[53.5676, 53.5676, 53.5676, 53.5676, 52.4487, 52.4487, 53.5676, 52.8575,
         53.5676, 52.8575, 52.8575, 52.1764, 53.0152, 52.1764, 53.5676, 53.5676]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[53.5676, 53.5676, 53.5676, 53.5676, 52.4487, 52.4487, 53.5676, 52.8575,
         53.5676, 52.8575, 52.8575, 52.1764, 53.0152, 52.1764, 53.5676, 53.5676]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  54
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([53.5676, 53.5676, 53.5676, 53.5676, 52.4487, 52.4487, 53.5676, 52.8575,
        53.5676, 52.8575, 52.8575, 52.1764, 53.0152, 52.1764, 53.5676, 53.5676])
new_beam_scores: tensor([[54.5676, 54.5676, 54.5676, 54.5676, 53.4487, 53.4487, 54.5676, 53.8575,
         54.5676, 53.8575, 53.8575, 53.1764, 54.0152, 53.1764, 54.5676, 54.5676]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[54.5676, 54.5676, 54.5676, 54.5676, 53.4487, 53.4487, 54.5676, 53.8575,
         54.5676, 53.8575, 53.8575, 53.1764, 54.0152, 53.1764, 54.5676, 54.5676]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  55
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([54.5676, 54.5676, 54.5676, 54.5676, 53.4487, 53.4487, 54.5676, 53.8575,
        54.5676, 53.8575, 53.8575, 53.1764, 54.0152, 53.1764, 54.5676, 54.5676])
new_beam_scores: tensor([[55.5676, 55.5676, 55.5676, 55.5676, 54.4487, 54.4487, 55.5676, 54.8575,
         55.5676, 54.8575, 54.8575, 54.1764, 55.0152, 54.1764, 55.5676, 55.5676]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[55.5676, 55.5676, 55.5676, 55.5676, 54.4487, 54.4487, 55.5676, 54.8575,
         55.5676, 54.8575, 54.8575, 54.1764, 55.0152, 54.1764, 55.5676, 55.5676]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  56
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([55.5676, 55.5676, 55.5676, 55.5676, 54.4487, 54.4487, 55.5676, 54.8575,
        55.5676, 54.8575, 54.8575, 54.1764, 55.0152, 54.1764, 55.5676, 55.5676])
new_beam_scores: tensor([[56.5676, 56.5676, 56.5676, 56.5676, 55.4487, 55.4487, 56.5676, 55.8575,
         56.5676, 55.8575, 55.8575, 55.1764, 56.0152, 55.1764, 56.5676, 56.5676]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[56.5676, 56.5676, 56.5676, 56.5676, 55.4487, 55.4487, 56.5676, 55.8575,
         56.5676, 55.8575, 55.8575, 55.1764, 56.0152, 55.1764, 56.5676, 56.5676]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  57
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([56.5676, 56.5676, 56.5676, 56.5676, 55.4487, 55.4487, 56.5676, 55.8575,
        56.5676, 55.8575, 55.8575, 55.1764, 56.0152, 55.1764, 56.5676, 56.5676])
new_beam_scores: tensor([[57.5676, 57.5676, 57.5676, 57.5676, 56.4487, 56.4487, 57.5676, 56.8575,
         57.5676, 56.8575, 56.8575, 56.1764, 57.0152, 56.1764, 57.5676, 57.5676]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[57.5676, 57.5676, 57.5676, 57.5676, 56.4487, 56.4487, 57.5676, 56.8575,
         57.5676, 56.8575, 56.8575, 56.1764, 57.0152, 56.1764, 57.5676, 57.5676]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  58
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([57.5676, 57.5676, 57.5676, 57.5676, 56.4487, 56.4487, 57.5676, 56.8575,
        57.5676, 56.8575, 56.8575, 56.1764, 57.0152, 56.1764, 57.5676, 57.5676])
new_beam_scores: tensor([[58.5676, 58.5676, 58.5676, 58.5676, 57.4487, 57.4487, 58.5676, 57.8575,
         58.5676, 57.8575, 57.8575, 57.1764, 58.0152, 57.1764, 58.5676, 58.5676]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[58.5676, 58.5676, 58.5676, 58.5676, 57.4487, 57.4487, 58.5676, 57.8575,
         58.5676, 57.8575, 57.8575, 57.1764, 58.0152, 57.1764, 58.5676, 58.5676]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  59
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([58.5676, 58.5676, 58.5676, 58.5676, 57.4487, 57.4487, 58.5676, 57.8575,
        58.5676, 57.8575, 57.8575, 57.1764, 58.0152, 57.1764, 58.5676, 58.5676])
new_beam_scores: tensor([[59.5676, 59.5676, 59.5676, 59.5676, 58.4487, 58.4487, 59.5676, 58.8575,
         59.5676, 58.8575, 58.8575, 58.1764, 59.0152, 58.1764, 59.5676, 59.5676]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[59.5676, 59.5676, 59.5676, 59.5676, 58.4487, 58.4487, 59.5676, 58.8575,
         59.5676, 58.8575, 58.8575, 58.1764, 59.0152, 58.1764, 59.5676, 59.5676]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  60
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [1],
        [0],
        [0],
        [2],
        [2],
        [2],
        [2],
        [2],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.4150, 0.1560, 0.4150, 0.4150, 0.4331, 0.4331, 0.4290, 0.0857, 0.4290,
         0.8920, 0.8920, 0.9591, 0.6557, 0.9591, 0.1560, 0.4290]])
scores: tensor([59.5676, 59.5676, 59.5676, 59.5676, 58.4487, 58.4487, 59.5676, 58.8575,
        59.5676, 58.8575, 58.8575, 58.1764, 59.0152, 58.1764, 59.5676, 59.5676])
new_beam_scores: tensor([[59.9826, 59.7236, 59.9826, 59.9826, 58.8819, 58.8819, 59.9965, 58.9432,
         59.9965, 59.7495, 59.7495, 59.1355, 59.6708, 59.1355, 59.7236, 59.9965]])
new_beam seq: tensor([[0, 1, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 1, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[59.9826, 59.7236, 59.9826, 59.9826, 58.8819, 58.8819, 59.9965, 58.9432,
         59.9965, 59.7495, 59.7495, 59.1355, 59.6708, 59.1355, 59.7236, 59.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([0, 1, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 1, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  61
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 0.9994, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9998, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9994, 1.0000]])
scores: tensor([59.9826, 59.7236, 59.9826, 59.9826, 58.8819, 58.8819, 59.9965, 58.9432,
        59.9965, 59.7495, 59.7495, 59.1355, 59.6708, 59.1355, 59.7236, 59.9965])
new_beam_scores: tensor([[60.9826, 60.7230, 60.9826, 60.9826, 59.8819, 59.8819, 60.9965, 59.9431,
         60.9965, 60.7495, 60.7495, 60.1355, 60.6708, 60.1355, 60.7230, 60.9965]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[60.9826, 60.7230, 60.9826, 60.9826, 59.8819, 59.8819, 60.9965, 59.9431,
         60.9965, 60.7495, 60.7495, 60.1355, 60.6708, 60.1355, 60.7230, 60.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  62
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([60.9826, 60.7230, 60.9826, 60.9826, 59.8819, 59.8819, 60.9965, 59.9431,
        60.9965, 60.7495, 60.7495, 60.1355, 60.6708, 60.1355, 60.7230, 60.9965])
new_beam_scores: tensor([[61.9826, 61.7230, 61.9826, 61.9826, 60.8819, 60.8819, 61.9965, 60.9431,
         61.9965, 61.7495, 61.7495, 61.1355, 61.6708, 61.1355, 61.7230, 61.9965]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[61.9826, 61.7230, 61.9826, 61.9826, 60.8819, 60.8819, 61.9965, 60.9431,
         61.9965, 61.7495, 61.7495, 61.1355, 61.6708, 61.1355, 61.7230, 61.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  63
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([61.9826, 61.7230, 61.9826, 61.9826, 60.8819, 60.8819, 61.9965, 60.9431,
        61.9965, 61.7495, 61.7495, 61.1355, 61.6708, 61.1355, 61.7230, 61.9965])
new_beam_scores: tensor([[62.9826, 62.7230, 62.9826, 62.9826, 61.8819, 61.8819, 62.9965, 61.9431,
         62.9965, 62.7495, 62.7495, 62.1355, 62.6708, 62.1355, 62.7230, 62.9965]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[62.9826, 62.7230, 62.9826, 62.9826, 61.8819, 61.8819, 62.9965, 61.9431,
         62.9965, 62.7495, 62.7495, 62.1355, 62.6708, 62.1355, 62.7230, 62.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  64
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([62.9826, 62.7230, 62.9826, 62.9826, 61.8819, 61.8819, 62.9965, 61.9431,
        62.9965, 62.7495, 62.7495, 62.1355, 62.6708, 62.1355, 62.7230, 62.9965])
new_beam_scores: tensor([[63.9826, 63.7230, 63.9826, 63.9826, 62.8819, 62.8819, 63.9965, 62.9431,
         63.9965, 63.7495, 63.7495, 63.1355, 63.6708, 63.1355, 63.7230, 63.9965]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[63.9826, 63.7230, 63.9826, 63.9826, 62.8819, 62.8819, 63.9965, 62.9431,
         63.9965, 63.7495, 63.7495, 63.1355, 63.6708, 63.1355, 63.7230, 63.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  65
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([63.9826, 63.7230, 63.9826, 63.9826, 62.8819, 62.8819, 63.9965, 62.9431,
        63.9965, 63.7495, 63.7495, 63.1355, 63.6708, 63.1355, 63.7230, 63.9965])
new_beam_scores: tensor([[64.9826, 64.7231, 64.9826, 64.9826, 63.8819, 63.8819, 64.9965, 63.9431,
         64.9965, 64.7495, 64.7495, 64.1355, 64.6708, 64.1355, 64.7231, 64.9965]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[64.9826, 64.7231, 64.9826, 64.9826, 63.8819, 63.8819, 64.9965, 63.9431,
         64.9965, 64.7495, 64.7495, 64.1355, 64.6708, 64.1355, 64.7231, 64.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  66
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([64.9826, 64.7231, 64.9826, 64.9826, 63.8819, 63.8819, 64.9965, 63.9431,
        64.9965, 64.7495, 64.7495, 64.1355, 64.6708, 64.1355, 64.7231, 64.9965])
new_beam_scores: tensor([[65.9826, 65.7231, 65.9826, 65.9826, 64.8819, 64.8819, 65.9965, 64.9431,
         65.9965, 65.7495, 65.7495, 65.1355, 65.6708, 65.1355, 65.7231, 65.9965]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[65.9826, 65.7231, 65.9826, 65.9826, 64.8819, 64.8819, 65.9965, 64.9431,
         65.9965, 65.7495, 65.7495, 65.1355, 65.6708, 65.1355, 65.7231, 65.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  67
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([65.9826, 65.7231, 65.9826, 65.9826, 64.8819, 64.8819, 65.9965, 64.9431,
        65.9965, 65.7495, 65.7495, 65.1355, 65.6708, 65.1355, 65.7231, 65.9965])
new_beam_scores: tensor([[66.9826, 66.7231, 66.9826, 66.9826, 65.8819, 65.8819, 66.9965, 65.9431,
         66.9965, 66.7495, 66.7495, 66.1355, 66.6708, 66.1355, 66.7231, 66.9965]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[66.9826, 66.7231, 66.9826, 66.9826, 65.8819, 65.8819, 66.9965, 65.9431,
         66.9965, 66.7495, 66.7495, 66.1355, 66.6708, 66.1355, 66.7231, 66.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  68
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([66.9826, 66.7231, 66.9826, 66.9826, 65.8819, 65.8819, 66.9965, 65.9431,
        66.9965, 66.7495, 66.7495, 66.1355, 66.6708, 66.1355, 66.7231, 66.9965])
new_beam_scores: tensor([[67.9826, 67.7231, 67.9826, 67.9826, 66.8819, 66.8819, 67.9965, 66.9431,
         67.9965, 67.7495, 67.7495, 67.1355, 67.6708, 67.1355, 67.7231, 67.9965]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[67.9826, 67.7231, 67.9826, 67.9826, 66.8819, 66.8819, 67.9965, 66.9431,
         67.9965, 67.7495, 67.7495, 67.1355, 67.6708, 67.1355, 67.7231, 67.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  69
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([67.9826, 67.7231, 67.9826, 67.9826, 66.8819, 66.8819, 67.9965, 66.9431,
        67.9965, 67.7495, 67.7495, 67.1355, 67.6708, 67.1355, 67.7231, 67.9965])
new_beam_scores: tensor([[68.9826, 68.7231, 68.9826, 68.9826, 67.8819, 67.8819, 68.9965, 67.9431,
         68.9965, 68.7495, 68.7495, 68.1355, 68.6708, 68.1355, 68.7231, 68.9965]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[68.9826, 68.7231, 68.9826, 68.9826, 67.8819, 67.8819, 68.9965, 67.9431,
         68.9965, 68.7495, 68.7495, 68.1355, 68.6708, 68.1355, 68.7231, 68.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  70
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([68.9826, 68.7231, 68.9826, 68.9826, 67.8819, 67.8819, 68.9965, 67.9431,
        68.9965, 68.7495, 68.7495, 68.1355, 68.6708, 68.1355, 68.7231, 68.9965])
new_beam_scores: tensor([[69.9826, 69.7231, 69.9826, 69.9826, 68.8819, 68.8819, 69.9965, 68.9431,
         69.9965, 69.7495, 69.7495, 69.1355, 69.6708, 69.1355, 69.7231, 69.9965]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[69.9826, 69.7231, 69.9826, 69.9826, 68.8819, 68.8819, 69.9965, 68.9431,
         69.9965, 69.7495, 69.7495, 69.1355, 69.6708, 69.1355, 69.7231, 69.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  71
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [2],
        [2],
        [2],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([69.9826, 69.7231, 69.9826, 69.9826, 68.8819, 68.8819, 69.9965, 68.9431,
        69.9965, 69.7495, 69.7495, 69.1355, 69.6708, 69.1355, 69.7231, 69.9965])
new_beam_scores: tensor([[70.9826, 70.7231, 70.9826, 70.9826, 69.8819, 69.8819, 70.9965, 69.9431,
         70.9965, 70.7495, 70.7495, 70.1355, 70.6708, 70.1355, 70.7231, 70.9965]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[70.9826, 70.7231, 70.9826, 70.9826, 69.8819, 69.8819, 70.9965, 69.9431,
         70.9965, 70.7495, 70.7495, 70.1355, 70.6708, 70.1355, 70.7231, 70.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  72
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([70.9826, 70.7231, 70.9826, 70.9826, 69.8819, 69.8819, 70.9965, 69.9431,
        70.9965, 70.7495, 70.7495, 70.1355, 70.6708, 70.1355, 70.7231, 70.9965])
new_beam_scores: tensor([[71.9826, 71.7231, 71.9826, 71.9826, 70.8819, 70.8819, 71.9965, 70.9431,
         71.9965, 71.7495, 71.7495, 71.1355, 71.6708, 71.1355, 71.7231, 71.9965]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[71.9826, 71.7231, 71.9826, 71.9826, 70.8819, 70.8819, 71.9965, 70.9431,
         71.9965, 71.7495, 71.7495, 71.1355, 71.6708, 71.1355, 71.7231, 71.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  73
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([71.9826, 71.7231, 71.9826, 71.9826, 70.8819, 70.8819, 71.9965, 70.9431,
        71.9965, 71.7495, 71.7495, 71.1355, 71.6708, 71.1355, 71.7231, 71.9965])
new_beam_scores: tensor([[72.9826, 72.7231, 72.9826, 72.9826, 71.8819, 71.8819, 72.9965, 71.9431,
         72.9965, 72.7495, 72.7495, 72.1355, 72.6708, 72.1355, 72.7231, 72.9965]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[72.9826, 72.7231, 72.9826, 72.9826, 71.8819, 71.8819, 72.9965, 71.9431,
         72.9965, 72.7495, 72.7495, 72.1355, 72.6708, 72.1355, 72.7231, 72.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  74
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([72.9826, 72.7231, 72.9826, 72.9826, 71.8819, 71.8819, 72.9965, 71.9431,
        72.9965, 72.7495, 72.7495, 72.1355, 72.6708, 72.1355, 72.7231, 72.9965])
new_beam_scores: tensor([[73.9826, 73.7231, 73.9826, 73.9826, 72.8819, 72.8819, 73.9965, 72.9431,
         73.9965, 73.7495, 73.7495, 73.1355, 73.6708, 73.1355, 73.7231, 73.9965]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[73.9826, 73.7231, 73.9826, 73.9826, 72.8819, 72.8819, 73.9965, 72.9431,
         73.9965, 73.7495, 73.7495, 73.1355, 73.6708, 73.1355, 73.7231, 73.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  75
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([73.9826, 73.7231, 73.9826, 73.9826, 72.8819, 72.8819, 73.9965, 72.9431,
        73.9965, 73.7495, 73.7495, 73.1355, 73.6708, 73.1355, 73.7231, 73.9965])
new_beam_scores: tensor([[74.9826, 74.7231, 74.9826, 74.9826, 73.8819, 73.8819, 74.9965, 73.9431,
         74.9965, 74.7495, 74.7495, 74.1355, 74.6708, 74.1355, 74.7231, 74.9965]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[74.9826, 74.7231, 74.9826, 74.9826, 73.8819, 73.8819, 74.9965, 73.9431,
         74.9965, 74.7495, 74.7495, 74.1355, 74.6708, 74.1355, 74.7231, 74.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 2.8833, -1.6844, -1.3513, -1.6622],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  76
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([74.9826, 74.7231, 74.9826, 74.9826, 73.8819, 73.8819, 74.9965, 73.9431,
        74.9965, 74.7495, 74.7495, 74.1355, 74.6708, 74.1355, 74.7231, 74.9965])
new_beam_scores: tensor([[75.9826, 75.7231, 75.9826, 75.9826, 74.8819, 74.8819, 75.9965, 74.9431,
         75.9965, 75.7495, 75.7495, 75.1355, 75.6708, 75.1355, 75.7231, 75.9965]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[75.9826, 75.7231, 75.9826, 75.9826, 74.8819, 74.8819, 75.9965, 74.9431,
         75.9965, 75.7495, 75.7495, 75.1355, 75.6708, 75.1355, 75.7231, 75.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 1, 0], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 2.8833, -1.6844, -1.3513, -1.6622],
        [-1.1426,  3.3162, -0.8004, -0.7768],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1248, 4])
Iteration :  77
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1248])
size of new_beam_h_S: torch.Size([1, 1248, 4])
size of new_beam_logits: torch.Size([1, 1248, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([75.9826, 75.7231, 75.9826, 75.9826, 74.8819, 74.8819, 75.9965, 74.9431,
        75.9965, 75.7495, 75.7495, 75.1355, 75.6708, 75.1355, 75.7231, 75.9965])
new_beam_scores: tensor([[76.9826, 76.7231, 76.9826, 76.9826, 75.8819, 75.8819, 76.9965, 75.9431,
         76.9965, 76.7495, 76.7495, 76.1355, 76.6708, 76.1355, 76.7231, 76.9965]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1248, 4])
new_beam_h_S size: torch.Size([1, 1248, 4])
sorted_scores: tensor([[76.9826, 76.7231, 76.9826, 76.9826, 75.8819, 75.8819, 76.9965, 75.9431,
         76.9965, 76.7495, 76.7495, 76.1355, 76.6708, 76.1355, 76.7231, 76.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1248])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3,  ..., 0, 1, 2], dtype=torch.int32)
logits: tensor([[-0.2405,  2.7691, -1.2637, -1.3207],
        [-1.1849, -1.6813,  2.2796,  0.5642],
        [ 0.2340, -1.4584, -0.2766,  0.9417],
        ...,
        [ 2.8833, -1.6844, -1.3513, -1.6622],
        [-1.1426,  3.3162, -0.8004, -0.7768],
        [-2.0111, -1.6099,  2.4309, -0.0355]])
h_S size: torch.Size([1248, 4])
tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size expanded indices: torch.Size([1, 16, 78])
tensor([[[1, 2, 3,  ..., 0, 1, 2],
         [1, 2, 3,  ..., 0, 1, 2],
         [1, 2, 3,  ..., 0, 1, 2],
         ...,
         [1, 2, 3,  ..., 0, 1, 2],
         [1, 2, 3,  ..., 0, 1, 2],
         [1, 2, 3,  ..., 0, 1, 2]]], dtype=torch.int32)
final_scores: tensor([76.9826, 76.7231, 76.9826, 76.9826, 75.8819, 75.8819, 76.9965, 75.9431,
        76.9965, 76.7495, 76.7495, 76.1355, 76.6708, 76.1355, 76.7231, 76.9965])
final_seq: tensor([[1, 2, 3,  ..., 0, 1, 2],
        [1, 2, 3,  ..., 0, 1, 2],
        [1, 2, 3,  ..., 0, 1, 2],
        ...,
        [1, 2, 3,  ..., 0, 1, 2],
        [1, 2, 3,  ..., 0, 1, 2],
        [1, 2, 3,  ..., 0, 1, 2]], dtype=torch.int32)
final_logits: tensor([[[-0.2405,  2.7691, -1.2637, -1.3207],
         [-1.1849, -1.6813,  2.2796,  0.5642],
         [ 0.2340, -1.4584, -0.2766,  0.9417],
         ...,
         [ 2.8838, -1.6842, -1.3512, -1.6620],
         [-1.1423,  3.3170, -0.8006, -0.7764],
         [-2.0099, -1.6098,  2.4329, -0.0379]],

        [[-0.2405,  2.7691, -1.2637, -1.3207],
         [-1.1849, -1.6813,  2.2796,  0.5642],
         [ 0.2340, -1.4584, -0.2766,  0.9417],
         ...,
         [ 2.8834, -1.6842, -1.3515, -1.6624],
         [-1.1429,  3.3161, -0.8004, -0.7766],
         [-2.0111, -1.6100,  2.4309, -0.0357]],

        [[-0.2405,  2.7691, -1.2637, -1.3207],
         [-1.1849, -1.6813,  2.2796,  0.5642],
         [ 0.2340, -1.4584, -0.2766,  0.9417],
         ...,
         [ 2.8838, -1.6842, -1.3512, -1.6620],
         [-1.1423,  3.3170, -0.8006, -0.7764],
         [-2.0099, -1.6098,  2.4329, -0.0379]],

        ...,

        [[-0.2405,  2.7691, -1.2637, -1.3207],
         [-1.1849, -1.6813,  2.2796,  0.5642],
         [ 0.2340, -1.4584, -0.2766,  0.9417],
         ...,
         [ 2.8729, -1.6872, -1.3453, -1.6662],
         [-1.1567,  3.2948, -0.7808, -0.7950],
         [-2.0072, -1.6093,  2.4159, -0.0130]],

        [[-0.2405,  2.7691, -1.2637, -1.3207],
         [-1.1849, -1.6813,  2.2796,  0.5642],
         [ 0.2340, -1.4584, -0.2766,  0.9417],
         ...,
         [ 2.8834, -1.6842, -1.3515, -1.6624],
         [-1.1429,  3.3161, -0.8004, -0.7766],
         [-2.0111, -1.6100,  2.4309, -0.0357]],

        [[-0.2405,  2.7691, -1.2637, -1.3207],
         [-1.1849, -1.6813,  2.2796,  0.5642],
         [ 0.2340, -1.4584, -0.2766,  0.9417],
         ...,
         [ 2.8833, -1.6844, -1.3513, -1.6622],
         [-1.1426,  3.3162, -0.8004, -0.7768],
         [-2.0111, -1.6099,  2.4309, -0.0355]]])
Coords: 23
Sequence: CCGAUGGUAGUGGCGAGAGUA_C
Len sequence: 23
Detected base pairs: [[ 17 451]
 [ 37 429]
 [ 60 409]
 [ 82 386]
 [102 364]
 [125 341]
 [148 319]
 [168 296]
 [190 276]
 [213 256]]
Secondary structure: '.((((((((((.)))))))))).'
Sequence length: 23
Number of residues: 23
Chain IDs: ['A' 'B']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
.((((((((((.)))))))))).
Batch size:  (20, 20)
Number of nodes:  20
edge_index: tensor([[[ 0,  0,  0,  ..., 19, 19, 19],
         [ 1,  2,  3,  ..., 16, 17, 18]],

        [[ 0,  0,  0,  ..., 19, 19, 19],
         [ 1,  2,  3,  ..., 16, 17, 18]],

        [[ 0,  0,  0,  ..., 19, 19, 19],
         [ 1,  2,  3,  ..., 16, 17, 18]],

        ...,

        [[ 0,  0,  0,  ..., 19, 19, 19],
         [ 1,  2,  3,  ..., 16, 17, 18]],

        [[ 0,  0,  0,  ..., 19, 19, 19],
         [ 1,  2,  3,  ..., 16, 17, 18]],

        [[ 0,  0,  0,  ..., 19, 19, 19],
         [ 1,  2,  3,  ..., 16, 17, 18]]])
offset size: torch.Size([16, 1, 1])
offset: tensor([[[  0]],

        [[ 20]],

        [[ 40]],

        [[ 60]],

        [[ 80]],

        [[100]],

        [[120]],

        [[140]],

        [[160]],

        [[180]],

        [[200]],

        [[220]],

        [[240]],

        [[260]],

        [[280]],

        [[300]]])
Iteration :  0
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997,
         0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997]])
scores: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
new_beam_scores: tensor([[0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997,
         0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997,
         0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.8094, -0.6987, -0.4912, -0.0138],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  1
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997,
        0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997])
new_beam_scores: tensor([[1.9997, 1.9997, 1.9997, 1.9997, 1.9997, 1.9997, 1.9997, 1.9997, 1.9997,
         1.9997, 1.9997, 1.9997, 1.9997, 1.9997, 1.9997, 1.9997]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[1.9997, 1.9997, 1.9997, 1.9997, 1.9997, 1.9997, 1.9997, 1.9997, 1.9997,
         1.9997, 1.9997, 1.9997, 1.9997, 1.9997, 1.9997, 1.9997]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.8094, -0.6987, -0.4912, -0.0138],
        [-0.5437,  3.9055, -0.7346, -0.7907],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  2
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([1.9997, 1.9997, 1.9997, 1.9997, 1.9997, 1.9997, 1.9997, 1.9997, 1.9997,
        1.9997, 1.9997, 1.9997, 1.9997, 1.9997, 1.9997, 1.9997])
new_beam_scores: tensor([[2.9997, 2.9997, 2.9997, 2.9997, 2.9997, 2.9997, 2.9997, 2.9997, 2.9997,
         2.9997, 2.9997, 2.9997, 2.9997, 2.9997, 2.9997, 2.9997]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[2.9997, 2.9997, 2.9997, 2.9997, 2.9997, 2.9997, 2.9997, 2.9997, 2.9997,
         2.9997, 2.9997, 2.9997, 2.9997, 2.9997, 2.9997, 2.9997]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.8094, -0.6987, -0.4912, -0.0138],
        [-0.5437,  3.9055, -0.7346, -0.7907],
        [ 3.2463, -1.3788, -1.5623, -1.2703],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  3
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [2],
        [2],
        [1],
        [2],
        [1],
        [1],
        [2],
        [0],
        [1],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.3577, 0.3577, 0.3577, 0.5423, 0.5423, 0.3577, 0.5423, 0.3577, 0.3577,
         0.5423, 0.1000, 0.3577, 0.5423, 0.5423, 0.5423, 0.5423]])
scores: tensor([2.9997, 2.9997, 2.9997, 2.9997, 2.9997, 2.9997, 2.9997, 2.9997, 2.9997,
        2.9997, 2.9997, 2.9997, 2.9997, 2.9997, 2.9997, 2.9997])
new_beam_scores: tensor([[3.3574, 3.3574, 3.3574, 3.5420, 3.5420, 3.3574, 3.5420, 3.3574, 3.3574,
         3.5420, 3.0997, 3.3574, 3.5420, 3.5420, 3.5420, 3.5420]])
new_beam seq: tensor([[1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 0, 1, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[3.3574, 3.3574, 3.3574, 3.5420, 3.5420, 3.3574, 3.5420, 3.3574, 3.3574,
         3.5420, 3.0997, 3.3574, 3.5420, 3.5420, 3.5420, 3.5420]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 0, 1, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.8094, -0.6987, -0.4912, -0.0138],
        [-0.5437,  3.9055, -0.7346, -0.7907],
        [ 3.2463, -1.3788, -1.5623, -1.2703],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  4
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [0],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9945, 0.9945, 0.9945, 0.8354, 0.8354, 0.9945, 0.8354, 0.9945, 0.9945,
         0.8354, 0.9446, 0.9945, 0.8354, 0.1455, 0.8354, 0.8354]])
scores: tensor([3.3574, 3.3574, 3.3574, 3.5420, 3.5420, 3.3574, 3.5420, 3.3574, 3.3574,
        3.5420, 3.0997, 3.3574, 3.5420, 3.5420, 3.5420, 3.5420])
new_beam_scores: tensor([[4.3520, 4.3520, 4.3520, 4.3774, 4.3774, 4.3520, 4.3774, 4.3520, 4.3520,
         4.3774, 4.0443, 4.3520, 4.3774, 3.6876, 4.3774, 4.3774]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[4.3520, 4.3520, 4.3520, 4.3774, 4.3774, 4.3520, 4.3774, 4.3520, 4.3520,
         4.3774, 4.0443, 4.3520, 4.3774, 3.6876, 4.3774, 4.3774]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.8094, -0.6987, -0.4912, -0.0138],
        [-0.5437,  3.9055, -0.7346, -0.7907],
        [ 3.2463, -1.3788, -1.5623, -1.2703],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  5
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [0],
        [2],
        [1],
        [1],
        [0],
        [1],
        [2],
        [2],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.8625, 0.8625, 0.8625, 0.6885, 0.2296, 0.0528, 0.6885, 0.8625, 0.0847,
         0.6885, 0.9443, 0.0528, 0.6885, 0.9657, 0.6885, 0.6885]])
scores: tensor([4.3520, 4.3520, 4.3520, 4.3774, 4.3774, 4.3520, 4.3774, 4.3520, 4.3520,
        4.3774, 4.0443, 4.3520, 4.3774, 3.6876, 4.3774, 4.3774])
new_beam_scores: tensor([[5.2144, 5.2144, 5.2144, 5.0658, 4.6070, 4.4048, 5.0658, 5.2144, 4.4366,
         5.0658, 4.9887, 4.4048, 5.0658, 4.6533, 5.0658, 5.0658]])
new_beam seq: tensor([[1, 1, 1, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[5.2144, 5.2144, 5.2144, 5.0658, 4.6070, 4.4048, 5.0658, 5.2144, 4.4366,
         5.0658, 4.9887, 4.4048, 5.0658, 4.6533, 5.0658, 5.0658]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 1, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.8094, -0.6987, -0.4912, -0.0138],
        [-0.5437,  3.9055, -0.7346, -0.7907],
        [ 3.2463, -1.3788, -1.5623, -1.2703],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  6
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([5.2144, 5.2144, 5.2144, 5.0658, 4.6070, 4.4048, 5.0658, 5.2144, 4.4366,
        5.0658, 4.9887, 4.4048, 5.0658, 4.6533, 5.0658, 5.0658])
new_beam_scores: tensor([[6.2144, 6.2144, 6.2144, 6.0658, 5.6070, 5.4048, 6.0658, 6.2144, 5.4366,
         6.0658, 5.9887, 5.4048, 6.0658, 5.6533, 6.0658, 6.0658]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[6.2144, 6.2144, 6.2144, 6.0658, 5.6070, 5.4048, 6.0658, 6.2144, 5.4366,
         6.0658, 5.9887, 5.4048, 6.0658, 5.6533, 6.0658, 6.0658]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 1, 0, 1, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 1, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2,
        0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.8094, -0.6987, -0.4912, -0.0138],
        [-0.5437,  3.9055, -0.7346, -0.7907],
        [ 3.2463, -1.3788, -1.5623, -1.2703],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  7
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([6.2144, 6.2144, 6.2144, 6.0658, 5.6070, 5.4048, 6.0658, 6.2144, 5.4366,
        6.0658, 5.9887, 5.4048, 6.0658, 5.6533, 6.0658, 6.0658])
new_beam_scores: tensor([[7.2144, 7.2144, 7.2144, 7.0658, 6.6070, 6.4048, 7.0658, 7.2144, 6.4366,
         7.0658, 6.9887, 6.4048, 7.0658, 6.6533, 7.0658, 7.0658]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[7.2144, 7.2144, 7.2144, 7.0658, 6.6070, 6.4048, 7.0658, 7.2144, 6.4366,
         7.0658, 6.9887, 6.4048, 7.0658, 6.6533, 7.0658, 7.0658]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 1, 0, 1, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 1, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2,
        0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.8094, -0.6987, -0.4912, -0.0138],
        [-0.5437,  3.9055, -0.7346, -0.7907],
        [ 3.2463, -1.3788, -1.5623, -1.2703],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  8
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([7.2144, 7.2144, 7.2144, 7.0658, 6.6070, 6.4048, 7.0658, 7.2144, 6.4366,
        7.0658, 6.9887, 6.4048, 7.0658, 6.6533, 7.0658, 7.0658])
new_beam_scores: tensor([[8.2144, 8.2144, 8.2144, 8.0658, 7.6070, 7.4048, 8.0658, 8.2144, 7.4366,
         8.0658, 7.9887, 7.4048, 8.0658, 7.6533, 8.0658, 8.0658]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[8.2144, 8.2144, 8.2144, 8.0658, 7.6070, 7.4048, 8.0658, 8.2144, 7.4366,
         8.0658, 7.9887, 7.4048, 8.0658, 7.6533, 8.0658, 8.0658]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 1, 0, 1, 2, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 1, 3, 0,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 3, 0,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2,
        0, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.8094, -0.6987, -0.4912, -0.0138],
        [-0.5437,  3.9055, -0.7346, -0.7907],
        [ 3.2463, -1.3788, -1.5623, -1.2703],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  9
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [1],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9982, 0.9982, 0.9982, 0.0657, 0.9283, 0.9676, 0.9341, 0.9982, 0.9872,
         0.9341, 0.9949, 0.9676, 0.9341, 0.9899, 0.9341, 0.9341]])
scores: tensor([8.2144, 8.2144, 8.2144, 8.0658, 7.6070, 7.4048, 8.0658, 8.2144, 7.4366,
        8.0658, 7.9887, 7.4048, 8.0658, 7.6533, 8.0658, 8.0658])
new_beam_scores: tensor([[9.2126, 9.2126, 9.2126, 8.1315, 8.5353, 8.3724, 8.9999, 9.2126, 8.4239,
         8.9999, 8.9836, 8.3724, 8.9999, 8.6432, 8.9999, 8.9999]])
new_beam seq: tensor([[2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[9.2126, 9.2126, 9.2126, 8.1315, 8.5353, 8.3724, 8.9999, 9.2126, 8.4239,
         8.9999, 8.9836, 8.3724, 8.9999, 8.6432, 8.9999, 8.9999]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 1, 0, 1, 2, 1, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 1, 3, 0,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 3, 0,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2,
        0, 1, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.8094, -0.6987, -0.4912, -0.0138],
        [-0.5437,  3.9055, -0.7346, -0.7907],
        [ 3.2463, -1.3788, -1.5623, -1.2703],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  10
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([9.2126, 9.2126, 9.2126, 8.1315, 8.5353, 8.3724, 8.9999, 9.2126, 8.4239,
        8.9999, 8.9836, 8.3724, 8.9999, 8.6432, 8.9999, 8.9999])
new_beam_scores: tensor([[10.2126, 10.2126, 10.2126,  9.1315,  9.5353,  9.3724,  9.9999, 10.2126,
          9.4239,  9.9999,  9.9836,  9.3724,  9.9999,  9.6431,  9.9999,  9.9999]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[10.2126, 10.2126, 10.2126,  9.1315,  9.5353,  9.3724,  9.9999, 10.2126,
          9.4239,  9.9999,  9.9836,  9.3724,  9.9999,  9.6431,  9.9999,  9.9999]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 1, 0, 1, 2, 1, 3, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 1, 3, 0,
        2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 3, 0, 2, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 3, 0,
        2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 3, 0, 2, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2,
        0, 1, 3, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0,
        2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.8094, -0.6987, -0.4912, -0.0138],
        [-0.5437,  3.9055, -0.7346, -0.7907],
        [ 3.2463, -1.3788, -1.5623, -1.2703],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  11
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([10.2126, 10.2126, 10.2126,  9.1315,  9.5353,  9.3724,  9.9999, 10.2126,
         9.4239,  9.9999,  9.9836,  9.3724,  9.9999,  9.6431,  9.9999,  9.9999])
new_beam_scores: tensor([[11.2126, 11.2126, 11.2126, 10.1315, 10.5353, 10.3724, 10.9999, 11.2126,
         10.4239, 10.9999, 10.9836, 10.3724, 10.9999, 10.6431, 10.9999, 10.9999]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[11.2126, 11.2126, 11.2126, 10.1315, 10.5353, 10.3724, 10.9999, 11.2126,
         10.4239, 10.9999, 10.9836, 10.3724, 10.9999, 10.6431, 10.9999, 10.9999]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 1, 0, 1, 2, 1, 3, 0, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 1, 3, 0,
        2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 1, 1, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 3, 0, 2, 2, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 3, 0,
        2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 3, 0, 2, 2, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2,
        0, 1, 3, 0, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0,
        2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.8094, -0.6987, -0.4912, -0.0138],
        [-0.5437,  3.9055, -0.7346, -0.7907],
        [ 3.2463, -1.3788, -1.5623, -1.2703],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  12
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([11.2126, 11.2126, 11.2126, 10.1315, 10.5353, 10.3724, 10.9999, 11.2126,
        10.4239, 10.9999, 10.9836, 10.3724, 10.9999, 10.6431, 10.9999, 10.9999])
new_beam_scores: tensor([[12.2126, 12.2126, 12.2126, 11.1315, 11.5353, 11.3724, 11.9999, 12.2126,
         11.4239, 11.9999, 11.9836, 11.3724, 11.9999, 11.6431, 11.9999, 11.9999]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[12.2126, 12.2126, 12.2126, 11.1315, 11.5353, 11.3724, 11.9999, 12.2126,
         11.4239, 11.9999, 11.9836, 11.3724, 11.9999, 11.6431, 11.9999, 11.9999]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 1, 0, 1, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 1, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 1, 1, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2,
        0, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1,
        1, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.8094, -0.6987, -0.4912, -0.0138],
        [-0.5437,  3.9055, -0.7346, -0.7907],
        [ 3.2463, -1.3788, -1.5623, -1.2703],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  13
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([12.2126, 12.2126, 12.2126, 11.1315, 11.5353, 11.3724, 11.9999, 12.2126,
        11.4239, 11.9999, 11.9836, 11.3724, 11.9999, 11.6431, 11.9999, 11.9999])
new_beam_scores: tensor([[13.2126, 13.2126, 13.2126, 12.1315, 12.5353, 12.3724, 12.9999, 13.2126,
         12.4239, 12.9999, 12.9836, 12.3724, 12.9999, 12.6431, 12.9999, 12.9999]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[13.2126, 13.2126, 13.2126, 12.1315, 12.5353, 12.3724, 12.9999, 13.2126,
         12.4239, 12.9999, 12.9836, 12.3724, 12.9999, 12.6431, 12.9999, 12.9999]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 1, 0, 1, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 1, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 1, 1, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2,
        0, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1,
        1, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.8094, -0.6987, -0.4912, -0.0138],
        [-0.5437,  3.9055, -0.7346, -0.7907],
        [ 3.2463, -1.3788, -1.5623, -1.2703],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  14
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([13.2126, 13.2126, 13.2126, 12.1315, 12.5353, 12.3724, 12.9999, 13.2126,
        12.4239, 12.9999, 12.9836, 12.3724, 12.9999, 12.6431, 12.9999, 12.9999])
new_beam_scores: tensor([[14.2126, 14.2126, 14.2126, 13.1315, 13.5353, 13.3724, 13.9999, 14.2126,
         13.4239, 13.9999, 13.9836, 13.3724, 13.9999, 13.6431, 13.9999, 13.9999]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[14.2126, 14.2126, 14.2126, 13.1315, 13.5353, 13.3724, 13.9999, 14.2126,
         13.4239, 13.9999, 13.9836, 13.3724, 13.9999, 13.6431, 13.9999, 13.9999]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 1, 0, 1, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 1, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 1, 1, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2,
        0, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1,
        1, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.8094, -0.6987, -0.4912, -0.0138],
        [-0.5437,  3.9055, -0.7346, -0.7907],
        [ 3.2463, -1.3788, -1.5623, -1.2703],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  15
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [2],
        [0],
        [0],
        [0],
        [2],
        [0],
        [2],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9856, 0.9856, 0.9856, 0.9339, 0.9999, 0.7529, 0.9763, 0.9856, 0.9999,
         0.9763, 0.4374, 0.7529, 0.9763, 0.8244, 0.9763, 0.9763]])
scores: tensor([14.2126, 14.2126, 14.2126, 13.1315, 13.5353, 13.3724, 13.9999, 14.2126,
        13.4239, 13.9999, 13.9836, 13.3724, 13.9999, 13.6431, 13.9999, 13.9999])
new_beam_scores: tensor([[15.1982, 15.1982, 15.1982, 14.0654, 14.5352, 14.1253, 14.9762, 15.1982,
         14.4238, 14.9762, 14.4209, 14.1253, 14.9762, 14.4675, 14.9762, 14.9762]])
new_beam seq: tensor([[0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[15.1982, 15.1982, 15.1982, 14.0654, 14.5352, 14.1253, 14.9762, 15.1982,
         14.4238, 14.9762, 14.4209, 14.1253, 14.9762, 14.4675, 14.9762, 14.9762]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 1, 0, 1, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 1, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 1, 1, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 3, 0, 2, 2, 1, 1, 1, 0, 0, 2,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 2,
        0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2,
        0, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1,
        1, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.8094, -0.6987, -0.4912, -0.0138],
        [-0.5437,  3.9055, -0.7346, -0.7907],
        [ 3.2463, -1.3788, -1.5623, -1.2703],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  16
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [3],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([15.1982, 15.1982, 15.1982, 14.0654, 14.5352, 14.1253, 14.9762, 15.1982,
        14.4238, 14.9762, 14.4209, 14.1253, 14.9762, 14.4675, 14.9762, 14.9762])
new_beam_scores: tensor([[16.1982, 16.1982, 16.1982, 15.0654, 15.5352, 15.1253, 15.9762, 16.1982,
         15.4238, 15.9762, 15.4209, 15.1253, 15.9762, 15.4675, 15.9762, 15.9762]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[16.1982, 16.1982, 16.1982, 15.0654, 15.5352, 15.1253, 15.9762, 16.1982,
         15.4238, 15.9762, 15.4209, 15.1253, 15.9762, 15.4675, 15.9762, 15.9762]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 1, 0, 1, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 2, 1, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 1, 1, 1,
        1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 2, 2, 0, 3, 0, 2, 2, 1, 1, 1, 0, 0, 2,
        1, 0, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 2, 0, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1,
        1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 2,
        1, 0, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 2,
        0, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 3, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1,
        1, 0, 0, 0, 1, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.8094, -0.6987, -0.4912, -0.0138],
        [-0.5437,  3.9055, -0.7346, -0.7907],
        [ 3.2463, -1.3788, -1.5623, -1.2703],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  17
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 0.9989, 0.9971, 1.0000, 0.9047, 1.0000, 1.0000,
         0.9047, 1.0000, 1.0000, 0.9047, 1.0000, 0.9047, 0.9047]])
scores: tensor([16.1982, 16.1982, 16.1982, 15.0654, 15.5352, 15.1253, 15.9762, 16.1982,
        15.4238, 15.9762, 15.4209, 15.1253, 15.9762, 15.4675, 15.9762, 15.9762])
new_beam_scores: tensor([[17.1982, 17.1982, 17.1982, 16.0643, 16.5323, 16.1253, 16.8809, 17.1982,
         16.4238, 16.8809, 16.4209, 16.1253, 16.8809, 16.4675, 16.8809, 16.8809]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[17.1982, 17.1982, 17.1982, 16.0643, 16.5323, 16.1253, 16.8809, 17.1982,
         16.4238, 16.8809, 16.4209, 16.1253, 16.8809, 16.4675, 16.8809, 16.8809]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 1, 0, 1, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0, 0, 1, 0, 1, 2, 1, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 1, 1, 1,
        1, 0, 0, 0, 1, 3, 0, 0, 0, 1, 0, 2, 2, 0, 3, 0, 2, 2, 1, 1, 1, 0, 0, 2,
        1, 3, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0, 0, 1, 0, 1, 2, 0, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 2, 1, 3, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1,
        1, 0, 0, 0, 1, 3, 0, 0, 0, 1, 0, 0, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 2,
        1, 3, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0, 0, 1, 0, 2,
        0, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 3, 3, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1,
        1, 0, 0, 0, 1, 3, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.8094, -0.6987, -0.4912, -0.0138],
        [-0.5437,  3.9055, -0.7346, -0.7907],
        [ 3.2463, -1.3788, -1.5623, -1.2703],
        ...,
        [ 0.3972, -1.1115, -1.3981,  0.6222],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  18
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([17.1982, 17.1982, 17.1982, 16.0643, 16.5323, 16.1253, 16.8809, 17.1982,
        16.4238, 16.8809, 16.4209, 16.1253, 16.8809, 16.4675, 16.8809, 16.8809])
new_beam_scores: tensor([[18.1982, 18.1982, 18.1982, 17.0643, 17.5323, 17.1253, 17.8809, 18.1982,
         17.4238, 17.8809, 17.4209, 17.1253, 17.8809, 17.4675, 17.8809, 17.8809]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[18.1982, 18.1982, 18.1982, 17.0643, 17.5323, 17.1253, 17.8809, 18.1982,
         17.4238, 17.8809, 17.4209, 17.1253, 17.8809, 17.4675, 17.8809, 17.8809]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 1, 0, 1, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0, 0, 1, 0, 1, 2, 1, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 1, 1, 1,
        1, 0, 0, 0, 1, 3, 0, 0, 0, 1, 0, 2, 2, 0, 3, 0, 2, 2, 1, 1, 1, 0, 0, 2,
        1, 3, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0, 0, 1, 0, 1, 2, 0, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 2, 1, 3, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1,
        1, 0, 0, 0, 1, 3, 0, 0, 0, 1, 0, 0, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 2,
        1, 3, 0, 0, 0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0, 0, 1, 0, 2,
        0, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 3, 3, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1,
        1, 0, 0, 0, 1, 3, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.8094, -0.6987, -0.4912, -0.0138],
        [-0.5437,  3.9055, -0.7346, -0.7907],
        [ 3.2463, -1.3788, -1.5623, -1.2703],
        ...,
        [ 0.3972, -1.1115, -1.3981,  0.6222],
        [ 2.5136, -0.7603, -1.7055, -1.4857],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  19
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([18.1982, 18.1982, 18.1982, 17.0643, 17.5323, 17.1253, 17.8809, 18.1982,
        17.4238, 17.8809, 17.4209, 17.1253, 17.8809, 17.4675, 17.8809, 17.8809])
new_beam_scores: tensor([[19.1982, 19.1982, 19.1982, 18.0643, 18.5323, 18.1253, 18.8809, 19.1982,
         18.4238, 18.8809, 18.4209, 18.1253, 18.8809, 18.4675, 18.8809, 18.8809]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[19.1982, 19.1982, 19.1982, 18.0643, 18.5323, 18.1253, 18.8809, 19.1982,
         18.4238, 18.8809, 18.4209, 18.1253, 18.8809, 18.4675, 18.8809, 18.8809]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 1, 0, 1, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1, 0, 1, 0, 1, 2, 1, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1, 0, 1, 0, 2, 2, 1, 3, 0, 2, 1, 1, 1,
        1, 0, 0, 0, 1, 3, 0, 1, 0, 1, 0, 2, 2, 0, 3, 0, 2, 2, 1, 1, 1, 0, 0, 2,
        1, 3, 0, 1, 0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1, 0, 1, 0, 1,
        2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1, 0, 1, 0, 1, 2, 0, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 2, 1, 3, 0, 1, 0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1,
        1, 0, 0, 0, 1, 3, 0, 1, 0, 1, 0, 0, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 2,
        1, 3, 0, 1, 0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1,
        0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1, 0, 1, 0, 2,
        0, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 3, 3, 0, 1, 0, 1, 0, 2, 2, 1, 3, 0,
        2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1, 0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1,
        1, 0, 0, 0, 1, 3, 0, 1], dtype=torch.int32)
logits: tensor([[ 0.8094, -0.6987, -0.4912, -0.0138],
        [-0.5437,  3.9055, -0.7346, -0.7907],
        [ 3.2463, -1.3788, -1.5623, -1.2703],
        ...,
        [ 0.3972, -1.1115, -1.3981,  0.6222],
        [ 2.5136, -0.7603, -1.7055, -1.4857],
        [-0.4207,  1.2850, -0.9714, -1.2684]])
h_S size: torch.Size([320, 4])
tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size expanded indices: torch.Size([1, 16, 20])
tensor([[[0, 1, 0, 1, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1],
         [0, 1, 0, 1, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1],
         [0, 1, 0, 1, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1],
         [0, 1, 0, 2, 2, 1, 3, 0, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1],
         [0, 1, 0, 2, 2, 0, 3, 0, 2, 2, 1, 1, 1, 0, 0, 2, 1, 3, 0, 1],
         [0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1],
         [0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1],
         [0, 1, 0, 1, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1],
         [0, 1, 0, 1, 2, 0, 3, 0, 2, 2, 1, 1, 1, 0, 0, 2, 1, 3, 0, 1],
         [0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1],
         [0, 1, 0, 0, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 2, 1, 3, 0, 1],
         [0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1],
         [0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1],
         [0, 1, 0, 2, 0, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 3, 3, 0, 1],
         [0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1],
         [0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1]]],
       dtype=torch.int32)
final_scores: tensor([19.1982, 19.1982, 19.1982, 18.0643, 18.5323, 18.1253, 18.8809, 19.1982,
        18.4238, 18.8809, 18.4209, 18.1253, 18.8809, 18.4675, 18.8809, 18.8809])
final_seq: tensor([[0, 1, 0, 1, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1],
        [0, 1, 0, 1, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1],
        [0, 1, 0, 1, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1],
        [0, 1, 0, 2, 2, 1, 3, 0, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1],
        [0, 1, 0, 2, 2, 0, 3, 0, 2, 2, 1, 1, 1, 0, 0, 2, 1, 3, 0, 1],
        [0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1],
        [0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1],
        [0, 1, 0, 1, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1],
        [0, 1, 0, 1, 2, 0, 3, 0, 2, 2, 1, 1, 1, 0, 0, 2, 1, 3, 0, 1],
        [0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1],
        [0, 1, 0, 0, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 2, 1, 3, 0, 1],
        [0, 1, 0, 1, 2, 2, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1],
        [0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1],
        [0, 1, 0, 2, 0, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 3, 3, 0, 1],
        [0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1],
        [0, 1, 0, 2, 2, 1, 3, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 3, 0, 1]],
       dtype=torch.int32)
final_logits: tensor([[[ 0.8094, -0.6987, -0.4912, -0.0138],
         [-0.5437,  3.9055, -0.7346, -0.7907],
         [ 3.2463, -1.3788, -1.5623, -1.2703],
         ...,
         [-2.0015, -1.7049, -1.3759,  2.7975],
         [ 2.5431, -0.8437, -1.7698, -1.5218],
         [-0.4942,  1.4600, -1.0098, -1.3074]],

        [[ 0.8094, -0.6987, -0.4912, -0.0138],
         [-0.5437,  3.9055, -0.7346, -0.7907],
         [ 3.2463, -1.3788, -1.5623, -1.2703],
         ...,
         [-2.0015, -1.7049, -1.3759,  2.7975],
         [ 2.5431, -0.8437, -1.7698, -1.5218],
         [-0.4942,  1.4600, -1.0098, -1.3074]],

        [[ 0.8094, -0.6987, -0.4912, -0.0138],
         [-0.5437,  3.9055, -0.7346, -0.7907],
         [ 3.2463, -1.3788, -1.5623, -1.2703],
         ...,
         [-2.0015, -1.7049, -1.3759,  2.7975],
         [ 2.5431, -0.8437, -1.7698, -1.5218],
         [-0.4942,  1.4600, -1.0098, -1.3074]],

        ...,

        [[ 0.8094, -0.6987, -0.4912, -0.0138],
         [-0.5437,  3.9055, -0.7346, -0.7907],
         [ 3.2463, -1.3788, -1.5623, -1.2703],
         ...,
         [-0.9239, -1.5589, -0.1284,  1.6143],
         [ 2.4896, -0.7003, -1.5592, -1.3312],
         [-0.3428,  1.2193, -0.8177, -0.9734]],

        [[ 0.8094, -0.6987, -0.4912, -0.0138],
         [-0.5437,  3.9055, -0.7346, -0.7907],
         [ 3.2463, -1.3788, -1.5623, -1.2703],
         ...,
         [ 0.3972, -1.1115, -1.3981,  0.6222],
         [ 2.5136, -0.7603, -1.7055, -1.4857],
         [-0.4207,  1.2850, -0.9714, -1.2684]],

        [[ 0.8094, -0.6987, -0.4912, -0.0138],
         [-0.5437,  3.9055, -0.7346, -0.7907],
         [ 3.2463, -1.3788, -1.5623, -1.2703],
         ...,
         [ 0.3972, -1.1115, -1.3981,  0.6222],
         [ 2.5136, -0.7603, -1.7055, -1.4857],
         [-0.4207,  1.2850, -0.9714, -1.2684]]])
Coords: 27
Sequence: UGCUCCUAGUACGAGAGGACCGGAGUG
Len sequence: 27
Detected base pairs: [[ 17 536]
 [ 40 513]
 [ 60 491]
 [ 80 468]
 [100 445]
 [120 425]
 [185 383]
 [205 360]
 [227 337]
 [247 315]]
Secondary structure: '.((((((..((((..)))).)))))).'
Sequence length: 27
Number of residues: 27
Chain IDs: ['A']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
.((((((..((((..)))).)))))).
Batch size:  (26, 26)
Number of nodes:  26
edge_index: tensor([[[ 0,  0,  0,  ..., 25, 25, 25],
         [ 1,  2,  3,  ..., 22, 23, 24]],

        [[ 0,  0,  0,  ..., 25, 25, 25],
         [ 1,  2,  3,  ..., 22, 23, 24]],

        [[ 0,  0,  0,  ..., 25, 25, 25],
         [ 1,  2,  3,  ..., 22, 23, 24]],

        ...,

        [[ 0,  0,  0,  ..., 25, 25, 25],
         [ 1,  2,  3,  ..., 22, 23, 24]],

        [[ 0,  0,  0,  ..., 25, 25, 25],
         [ 1,  2,  3,  ..., 22, 23, 24]],

        [[ 0,  0,  0,  ..., 25, 25, 25],
         [ 1,  2,  3,  ..., 22, 23, 24]]])
offset size: torch.Size([16, 1, 1])
offset: tensor([[[  0]],

        [[ 26]],

        [[ 52]],

        [[ 78]],

        [[104]],

        [[130]],

        [[156]],

        [[182]],

        [[208]],

        [[234]],

        [[260]],

        [[286]],

        [[312]],

        [[338]],

        [[364]],

        [[390]]])
Iteration :  0
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
new_beam_scores: tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  1
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [3],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9431, 0.0565, 0.9431, 0.9431, 0.9431, 0.9431, 0.9431, 0.9431, 0.9431,
         0.9431, 0.9431, 0.9431, 0.9431, 0.9431, 0.9431, 0.9431]])
scores: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
new_beam_scores: tensor([[1.9431, 1.0565, 1.9431, 1.9431, 1.9431, 1.9431, 1.9431, 1.9431, 1.9431,
         1.9431, 1.9431, 1.9431, 1.9431, 1.9431, 1.9431, 1.9431]])
new_beam seq: tensor([[2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[1.9431, 1.0565, 1.9431, 1.9431, 1.9431, 1.9431, 1.9431, 1.9431, 1.9431,
         1.9431, 1.9431, 1.9431, 1.9431, 1.9431, 1.9431, 1.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  2
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([1.9431, 1.0565, 1.9431, 1.9431, 1.9431, 1.9431, 1.9431, 1.9431, 1.9431,
        1.9431, 1.9431, 1.9431, 1.9431, 1.9431, 1.9431, 1.9431])
new_beam_scores: tensor([[2.9431, 2.0565, 2.9431, 2.9431, 2.9431, 2.9431, 2.9431, 2.9431, 2.9431,
         2.9431, 2.9431, 2.9431, 2.9431, 2.9431, 2.9431, 2.9431]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[2.9431, 2.0565, 2.9431, 2.9431, 2.9431, 2.9431, 2.9431, 2.9431, 2.9431,
         2.9431, 2.9431, 2.9431, 2.9431, 2.9431, 2.9431, 2.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  3
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([2.9431, 2.0565, 2.9431, 2.9431, 2.9431, 2.9431, 2.9431, 2.9431, 2.9431,
        2.9431, 2.9431, 2.9431, 2.9431, 2.9431, 2.9431, 2.9431])
new_beam_scores: tensor([[3.9431, 3.0565, 3.9431, 3.9431, 3.9431, 3.9431, 3.9431, 3.9431, 3.9431,
         3.9431, 3.9431, 3.9431, 3.9431, 3.9431, 3.9431, 3.9431]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[3.9431, 3.0565, 3.9431, 3.9431, 3.9431, 3.9431, 3.9431, 3.9431, 3.9431,
         3.9431, 3.9431, 3.9431, 3.9431, 3.9431, 3.9431, 3.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 3, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2,
        3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 2, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 2, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  4
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([3.9431, 3.0565, 3.9431, 3.9431, 3.9431, 3.9431, 3.9431, 3.9431, 3.9431,
        3.9431, 3.9431, 3.9431, 3.9431, 3.9431, 3.9431, 3.9431])
new_beam_scores: tensor([[4.9431, 4.0565, 4.9431, 4.9431, 4.9431, 4.9431, 4.9431, 4.9431, 4.9431,
         4.9431, 4.9431, 4.9431, 4.9431, 4.9431, 4.9431, 4.9431]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[4.9431, 4.0565, 4.9431, 4.9431, 4.9431, 4.9431, 4.9431, 4.9431, 4.9431,
         4.9431, 4.9431, 4.9431, 4.9431, 4.9431, 4.9431, 4.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 3, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2,
        3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 2, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 2, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  5
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([4.9431, 4.0565, 4.9431, 4.9431, 4.9431, 4.9431, 4.9431, 4.9431, 4.9431,
        4.9431, 4.9431, 4.9431, 4.9431, 4.9431, 4.9431, 4.9431])
new_beam_scores: tensor([[5.9431, 5.0565, 5.9431, 5.9431, 5.9431, 5.9431, 5.9431, 5.9431, 5.9431,
         5.9431, 5.9431, 5.9431, 5.9431, 5.9431, 5.9431, 5.9431]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[5.9431, 5.0565, 5.9431, 5.9431, 5.9431, 5.9431, 5.9431, 5.9431, 5.9431,
         5.9431, 5.9431, 5.9431, 5.9431, 5.9431, 5.9431, 5.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 3, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2,
        2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2,
        3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 2, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 2, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  6
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([5.9431, 5.0565, 5.9431, 5.9431, 5.9431, 5.9431, 5.9431, 5.9431, 5.9431,
        5.9431, 5.9431, 5.9431, 5.9431, 5.9431, 5.9431, 5.9431])
new_beam_scores: tensor([[6.9431, 6.0565, 6.9431, 6.9431, 6.9431, 6.9431, 6.9431, 6.9431, 6.9431,
         6.9431, 6.9431, 6.9431, 6.9431, 6.9431, 6.9431, 6.9431]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[6.9431, 6.0565, 6.9431, 6.9431, 6.9431, 6.9431, 6.9431, 6.9431, 6.9431,
         6.9431, 6.9431, 6.9431, 6.9431, 6.9431, 6.9431, 6.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 3, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2,
        2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2,
        3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 2, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 2, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  7
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([6.9431, 6.0565, 6.9431, 6.9431, 6.9431, 6.9431, 6.9431, 6.9431, 6.9431,
        6.9431, 6.9431, 6.9431, 6.9431, 6.9431, 6.9431, 6.9431])
new_beam_scores: tensor([[7.9431, 7.0565, 7.9431, 7.9431, 7.9431, 7.9431, 7.9431, 7.9431, 7.9431,
         7.9431, 7.9431, 7.9431, 7.9431, 7.9431, 7.9431, 7.9431]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[7.9431, 7.0565, 7.9431, 7.9431, 7.9431, 7.9431, 7.9431, 7.9431, 7.9431,
         7.9431, 7.9431, 7.9431, 7.9431, 7.9431, 7.9431, 7.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 2, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 3, 3, 2, 2, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2,
        2, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2,
        3, 2, 2, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 2, 3, 2, 2, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  8
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([7.9431, 7.0565, 7.9431, 7.9431, 7.9431, 7.9431, 7.9431, 7.9431, 7.9431,
        7.9431, 7.9431, 7.9431, 7.9431, 7.9431, 7.9431, 7.9431])
new_beam_scores: tensor([[8.9431, 8.0565, 8.9431, 8.9431, 8.9431, 8.9431, 8.9431, 8.9431, 8.9431,
         8.9431, 8.9431, 8.9431, 8.9431, 8.9431, 8.9431, 8.9431]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[8.9431, 8.0565, 8.9431, 8.9431, 8.9431, 8.9431, 8.9431, 8.9431, 8.9431,
         8.9431, 8.9431, 8.9431, 8.9431, 8.9431, 8.9431, 8.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 3, 3, 2, 2, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3,
        0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2,
        2, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2,
        3, 2, 2, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  9
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([8.9431, 8.0565, 8.9431, 8.9431, 8.9431, 8.9431, 8.9431, 8.9431, 8.9431,
        8.9431, 8.9431, 8.9431, 8.9431, 8.9431, 8.9431, 8.9431])
new_beam_scores: tensor([[9.9431, 9.0565, 9.9431, 9.9431, 9.9431, 9.9431, 9.9431, 9.9431, 9.9431,
         9.9431, 9.9431, 9.9431, 9.9431, 9.9431, 9.9431, 9.9431]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[9.9431, 9.0565, 9.9431, 9.9431, 9.9431, 9.9431, 9.9431, 9.9431, 9.9431,
         9.9431, 9.9431, 9.9431, 9.9431, 9.9431, 9.9431, 9.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 3, 3, 2, 2, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3,
        0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2,
        2, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2,
        3, 2, 2, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  10
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([9.9431, 9.0565, 9.9431, 9.9431, 9.9431, 9.9431, 9.9431, 9.9431, 9.9431,
        9.9431, 9.9431, 9.9431, 9.9431, 9.9431, 9.9431, 9.9431])
new_beam_scores: tensor([[10.9431, 10.0565, 10.9431, 10.9431, 10.9431, 10.9431, 10.9431, 10.9431,
         10.9431, 10.9431, 10.9431, 10.9431, 10.9431, 10.9431, 10.9431, 10.9431]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[10.9431, 10.0565, 10.9431, 10.9431, 10.9431, 10.9431, 10.9431, 10.9431,
         10.9431, 10.9431, 10.9431, 10.9431, 10.9431, 10.9431, 10.9431, 10.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 3, 3, 2, 2, 3, 0, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1,
        3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3,
        0, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2,
        2, 3, 0, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2,
        3, 2, 2, 3, 0, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  11
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([10.9431, 10.0565, 10.9431, 10.9431, 10.9431, 10.9431, 10.9431, 10.9431,
        10.9431, 10.9431, 10.9431, 10.9431, 10.9431, 10.9431, 10.9431, 10.9431])
new_beam_scores: tensor([[11.9431, 11.0565, 11.9431, 11.9431, 11.9431, 11.9431, 11.9431, 11.9431,
         11.9431, 11.9431, 11.9431, 11.9431, 11.9431, 11.9431, 11.9431, 11.9431]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[11.9431, 11.0565, 11.9431, 11.9431, 11.9431, 11.9431, 11.9431, 11.9431,
         11.9431, 11.9431, 11.9431, 11.9431, 11.9431, 11.9431, 11.9431, 11.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 3, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0,
        2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1,
        3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3,
        0, 1, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2,
        2, 3, 0, 1, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2,
        3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  12
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([11.9431, 11.0565, 11.9431, 11.9431, 11.9431, 11.9431, 11.9431, 11.9431,
        11.9431, 11.9431, 11.9431, 11.9431, 11.9431, 11.9431, 11.9431, 11.9431])
new_beam_scores: tensor([[12.9431, 12.0565, 12.9431, 12.9431, 12.9431, 12.9431, 12.9431, 12.9431,
         12.9431, 12.9431, 12.9431, 12.9431, 12.9431, 12.9431, 12.9431, 12.9431]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[12.9431, 12.0565, 12.9431, 12.9431, 12.9431, 12.9431, 12.9431, 12.9431,
         12.9431, 12.9431, 12.9431, 12.9431, 12.9431, 12.9431, 12.9431, 12.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 3, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0,
        2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1,
        3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3,
        0, 1, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2,
        2, 3, 0, 1, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2,
        3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  13
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([12.9431, 12.0565, 12.9431, 12.9431, 12.9431, 12.9431, 12.9431, 12.9431,
        12.9431, 12.9431, 12.9431, 12.9431, 12.9431, 12.9431, 12.9431, 12.9431])
new_beam_scores: tensor([[13.9431, 13.0565, 13.9431, 13.9431, 13.9431, 13.9431, 13.9431, 13.9431,
         13.9431, 13.9431, 13.9431, 13.9431, 13.9431, 13.9431, 13.9431, 13.9431]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[13.9431, 13.0565, 13.9431, 13.9431, 13.9431, 13.9431, 13.9431, 13.9431,
         13.9431, 13.9431, 13.9431, 13.9431, 13.9431, 13.9431, 13.9431, 13.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 3, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0,
        2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1,
        3, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3,
        0, 1, 3, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2,
        2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2,
        3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  14
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([13.9431, 13.0565, 13.9431, 13.9431, 13.9431, 13.9431, 13.9431, 13.9431,
        13.9431, 13.9431, 13.9431, 13.9431, 13.9431, 13.9431, 13.9431, 13.9431])
new_beam_scores: tensor([[14.9431, 14.0565, 14.9431, 14.9431, 14.9431, 14.9431, 14.9431, 14.9431,
         14.9431, 14.9431, 14.9431, 14.9431, 14.9431, 14.9431, 14.9431, 14.9431]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[14.9431, 14.0565, 14.9431, 14.9431, 14.9431, 14.9431, 14.9431, 14.9431,
         14.9431, 14.9431, 14.9431, 14.9431, 14.9431, 14.9431, 14.9431, 14.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 3, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0,
        2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1,
        3, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3,
        0, 1, 3, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2,
        2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2,
        3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  15
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([14.9431, 14.0565, 14.9431, 14.9431, 14.9431, 14.9431, 14.9431, 14.9431,
        14.9431, 14.9431, 14.9431, 14.9431, 14.9431, 14.9431, 14.9431, 14.9431])
new_beam_scores: tensor([[15.9431, 15.0565, 15.9431, 15.9431, 15.9431, 15.9431, 15.9431, 15.9431,
         15.9431, 15.9431, 15.9431, 15.9431, 15.9431, 15.9431, 15.9431, 15.9431]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[15.9431, 15.0565, 15.9431, 15.9431, 15.9431, 15.9431, 15.9431, 15.9431,
         15.9431, 15.9431, 15.9431, 15.9431, 15.9431, 15.9431, 15.9431, 15.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 3, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1,
        0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0,
        2, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1,
        3, 0, 2, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3,
        0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2,
        2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2,
        3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  16
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([15.9431, 15.0565, 15.9431, 15.9431, 15.9431, 15.9431, 15.9431, 15.9431,
        15.9431, 15.9431, 15.9431, 15.9431, 15.9431, 15.9431, 15.9431, 15.9431])
new_beam_scores: tensor([[16.9431, 16.0565, 16.9431, 16.9431, 16.9431, 16.9431, 16.9431, 16.9431,
         16.9431, 16.9431, 16.9431, 16.9431, 16.9431, 16.9431, 16.9431, 16.9431]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[16.9431, 16.0565, 16.9431, 16.9431, 16.9431, 16.9431, 16.9431, 16.9431,
         16.9431, 16.9431, 16.9431, 16.9431, 16.9431, 16.9431, 16.9431, 16.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 3, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1,
        0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1,
        0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0,
        2, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1,
        3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3,
        0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2,
        2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2,
        3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  17
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([16.9431, 16.0565, 16.9431, 16.9431, 16.9431, 16.9431, 16.9431, 16.9431,
        16.9431, 16.9431, 16.9431, 16.9431, 16.9431, 16.9431, 16.9431, 16.9431])
new_beam_scores: tensor([[17.9431, 17.0565, 17.9431, 17.9431, 17.9431, 17.9431, 17.9431, 17.9431,
         17.9431, 17.9431, 17.9431, 17.9431, 17.9431, 17.9431, 17.9431, 17.9431]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[17.9431, 17.0565, 17.9431, 17.9431, 17.9431, 17.9431, 17.9431, 17.9431,
         17.9431, 17.9431, 17.9431, 17.9431, 17.9431, 17.9431, 17.9431, 17.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 3, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1,
        0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1,
        0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0,
        2, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1,
        3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3,
        0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2,
        2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2,
        3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  18
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([17.9431, 17.0565, 17.9431, 17.9431, 17.9431, 17.9431, 17.9431, 17.9431,
        17.9431, 17.9431, 17.9431, 17.9431, 17.9431, 17.9431, 17.9431, 17.9431])
new_beam_scores: tensor([[18.9431, 18.0565, 18.9431, 18.9431, 18.9431, 18.9431, 18.9431, 18.9431,
         18.9431, 18.9431, 18.9431, 18.9431, 18.9431, 18.9431, 18.9431, 18.9431]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[18.9431, 18.0565, 18.9431, 18.9431, 18.9431, 18.9431, 18.9431, 18.9431,
         18.9431, 18.9431, 18.9431, 18.9431, 18.9431, 18.9431, 18.9431, 18.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 0, 0, 0, 0, 0,
        0, 0, 1, 3, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0,
        2, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1,
        1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1,
        0, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1,
        0, 1, 0, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0,
        2, 1, 0, 1, 0, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1,
        3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3,
        0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2,
        2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 2,
        3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 0, 0, 0, 0, 0,
        0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0,
        2, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  19
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([18.9431, 18.0565, 18.9431, 18.9431, 18.9431, 18.9431, 18.9431, 18.9431,
        18.9431, 18.9431, 18.9431, 18.9431, 18.9431, 18.9431, 18.9431, 18.9431])
new_beam_scores: tensor([[19.9431, 19.0565, 19.9431, 19.9431, 19.9431, 19.9431, 19.9431, 19.9431,
         19.9431, 19.9431, 19.9431, 19.9431, 19.9431, 19.9431, 19.9431, 19.9431]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[19.9431, 19.0565, 19.9431, 19.9431, 19.9431, 19.9431, 19.9431, 19.9431,
         19.9431, 19.9431, 19.9431, 19.9431, 19.9431, 19.9431, 19.9431, 19.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 0, 0, 0, 0,
        0, 0, 1, 3, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0,
        2, 2, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1,
        1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1,
        0, 1, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1,
        0, 1, 0, 1, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0,
        2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1,
        3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3,
        0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1, 2, 3, 2,
        2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1, 2,
        3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0,
        1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 0, 0, 0, 0,
        0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 0, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0,
        2, 2, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  20
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([19.9431, 19.0565, 19.9431, 19.9431, 19.9431, 19.9431, 19.9431, 19.9431,
        19.9431, 19.9431, 19.9431, 19.9431, 19.9431, 19.9431, 19.9431, 19.9431])
new_beam_scores: tensor([[20.9431, 20.0565, 20.9431, 20.9431, 20.9431, 20.9431, 20.9431, 20.9431,
         20.9431, 20.9431, 20.9431, 20.9431, 20.9431, 20.9431, 20.9431, 20.9431]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[20.9431, 20.0565, 20.9431, 20.9431, 20.9431, 20.9431, 20.9431, 20.9431,
         20.9431, 20.9431, 20.9431, 20.9431, 20.9431, 20.9431, 20.9431, 20.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 0, 0, 0,
        0, 0, 1, 3, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2,
        1, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0,
        2, 2, 1, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1,
        1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1,
        0, 1, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1,
        0, 1, 0, 1, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0,
        2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1,
        3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3,
        0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 1, 2, 3, 2,
        2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 1, 2,
        3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0,
        1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 0, 0, 0,
        0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 0,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2,
        1, 0, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0,
        2, 2, 1, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  21
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([20.9431, 20.0565, 20.9431, 20.9431, 20.9431, 20.9431, 20.9431, 20.9431,
        20.9431, 20.9431, 20.9431, 20.9431, 20.9431, 20.9431, 20.9431, 20.9431])
new_beam_scores: tensor([[21.9431, 21.0565, 21.9431, 21.9431, 21.9431, 21.9431, 21.9431, 21.9431,
         21.9431, 21.9431, 21.9431, 21.9431, 21.9431, 21.9431, 21.9431, 21.9431]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[21.9431, 21.0565, 21.9431, 21.9431, 21.9431, 21.9431, 21.9431, 21.9431,
         21.9431, 21.9431, 21.9431, 21.9431, 21.9431, 21.9431, 21.9431, 21.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 0,
        0, 0, 1, 3, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2,
        1, 1, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0,
        2, 2, 1, 1, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1,
        1, 0, 2, 2, 1, 1, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1,
        0, 1, 1, 0, 2, 2, 1, 1, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1,
        0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0,
        2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1,
        3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3,
        0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 0, 0, 0, 1, 2, 3, 2,
        2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 0, 0, 0, 1, 2,
        3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 0, 0, 0,
        1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 0,
        0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2,
        1, 1, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0,
        2, 2, 1, 1, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  22
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([21.9431, 21.0565, 21.9431, 21.9431, 21.9431, 21.9431, 21.9431, 21.9431,
        21.9431, 21.9431, 21.9431, 21.9431, 21.9431, 21.9431, 21.9431, 21.9431])
new_beam_scores: tensor([[22.9431, 22.0565, 22.9431, 22.9431, 22.9431, 22.9431, 22.9431, 22.9431,
         22.9431, 22.9431, 22.9431, 22.9431, 22.9431, 22.9431, 22.9431, 22.9431]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[22.9431, 22.0565, 22.9431, 22.9431, 22.9431, 22.9431, 22.9431, 22.9431,
         22.9431, 22.9431, 22.9431, 22.9431, 22.9431, 22.9431, 22.9431, 22.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 0,
        0, 0, 1, 3, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2,
        1, 1, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0,
        2, 2, 1, 1, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1,
        1, 0, 2, 2, 1, 1, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1,
        0, 1, 1, 0, 2, 2, 1, 1, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1,
        0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0,
        2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1,
        3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3,
        0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 0, 0, 0, 1, 2, 3, 2,
        2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 0, 0, 0, 1, 2,
        3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 0, 0, 0,
        1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 0,
        0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2,
        1, 1, 0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0,
        2, 2, 1, 1, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  23
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([22.9431, 22.0565, 22.9431, 22.9431, 22.9431, 22.9431, 22.9431, 22.9431,
        22.9431, 22.9431, 22.9431, 22.9431, 22.9431, 22.9431, 22.9431, 22.9431])
new_beam_scores: tensor([[23.9431, 23.0565, 23.9431, 23.9431, 23.9431, 23.9431, 23.9431, 23.9431,
         23.9431, 23.9431, 23.9431, 23.9431, 23.9431, 23.9431, 23.9431, 23.9431]])
new_beam seq: tensor([[1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[23.9431, 23.0565, 23.9431, 23.9431, 23.9431, 23.9431, 23.9431, 23.9431,
         23.9431, 23.9431, 23.9431, 23.9431, 23.9431, 23.9431, 23.9431, 23.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1,
        0, 0, 1, 3, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1,
        0, 0, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2,
        1, 1, 0, 1, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0,
        2, 2, 1, 1, 0, 1, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1,
        1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1,
        0, 1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1,
        0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0,
        2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1,
        3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 1, 2, 3, 2, 2, 3,
        0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 1, 2, 3, 2,
        2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 1, 2,
        3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0,
        1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1,
        0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1,
        0, 1, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2,
        1, 1, 0, 1, 0, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0,
        2, 2, 1, 1, 0, 1, 0, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [-1.2827,  3.2703, -0.8517, -1.2264],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  24
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 0.9998, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([23.9431, 23.0565, 23.9431, 23.9431, 23.9431, 23.9431, 23.9431, 23.9431,
        23.9431, 23.9431, 23.9431, 23.9431, 23.9431, 23.9431, 23.9431, 23.9431])
new_beam_scores: tensor([[24.9431, 24.0563, 24.9431, 24.9431, 24.9431, 24.9431, 24.9431, 24.9431,
         24.9431, 24.9431, 24.9431, 24.9431, 24.9431, 24.9431, 24.9431, 24.9431]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[24.9431, 24.0563, 24.9431, 24.9431, 24.9431, 24.9431, 24.9431, 24.9431,
         24.9431, 24.9431, 24.9431, 24.9431, 24.9431, 24.9431, 24.9431, 24.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1,
        3, 0, 1, 3, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1,
        0, 0, 3, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2,
        1, 1, 0, 1, 3, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0,
        2, 2, 1, 1, 0, 1, 3, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1,
        1, 0, 2, 2, 1, 1, 0, 1, 3, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1,
        0, 1, 1, 0, 2, 2, 1, 1, 0, 1, 3, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1,
        0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1, 3, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0,
        2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1, 3, 0, 1, 2, 3, 2, 2, 3, 0, 1,
        3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1, 3, 0, 1, 2, 3, 2, 2, 3,
        0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1, 3, 0, 1, 2, 3, 2,
        2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1, 3, 0, 1, 2,
        3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1, 3, 0,
        1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1,
        3, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1,
        0, 1, 3, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2,
        1, 1, 0, 1, 3, 0, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0,
        2, 2, 1, 1, 0, 1, 3, 0], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [-1.2827,  3.2703, -0.8517, -1.2264],
        [-2.0007, -2.6689,  0.8122,  2.1344],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  25
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([24.9431, 24.0563, 24.9431, 24.9431, 24.9431, 24.9431, 24.9431, 24.9431,
        24.9431, 24.9431, 24.9431, 24.9431, 24.9431, 24.9431, 24.9431, 24.9431])
new_beam_scores: tensor([[25.9431, 25.0563, 25.9431, 25.9431, 25.9431, 25.9431, 25.9431, 25.9431,
         25.9431, 25.9431, 25.9431, 25.9431, 25.9431, 25.9431, 25.9431, 25.9431]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[25.9431, 25.0563, 25.9431, 25.9431, 25.9431, 25.9431, 25.9431, 25.9431,
         25.9431, 25.9431, 25.9431, 25.9431, 25.9431, 25.9431, 25.9431, 25.9431]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1,
        3, 2, 1, 3, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1,
        0, 0, 3, 2, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2,
        1, 1, 0, 1, 3, 2, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0,
        2, 2, 1, 1, 0, 1, 3, 2, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1,
        1, 0, 2, 2, 1, 1, 0, 1, 3, 2, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1,
        0, 1, 1, 0, 2, 2, 1, 1, 0, 1, 3, 2, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1,
        0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1, 3, 2, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0,
        2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1, 3, 2, 1, 2, 3, 2, 2, 3, 0, 1,
        3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1, 3, 2, 1, 2, 3, 2, 2, 3,
        0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1, 3, 2, 1, 2, 3, 2,
        2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1, 3, 2, 1, 2,
        3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1, 3, 2,
        1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1,
        3, 2, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1,
        0, 1, 3, 2, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2,
        1, 1, 0, 1, 3, 2, 1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0,
        2, 2, 1, 1, 0, 1, 3, 2], dtype=torch.int32)
logits: tensor([[-0.6242,  2.3442, -0.6854, -1.0345],
        [-0.1891, -0.9723,  0.5760,  0.2945],
        [-0.4001, -1.4540, -1.2058,  1.8879],
        ...,
        [-1.2827,  3.2703, -0.8517, -1.2264],
        [-2.0007, -2.6689,  0.8122,  2.1344],
        [-1.2289,  0.0097,  2.4031, -2.0228]])
h_S size: torch.Size([416, 4])
tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size expanded indices: torch.Size([1, 16, 26])
tensor([[[1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0,
          1, 3, 2],
         [1, 3, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0,
          0, 3, 2],
         [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0,
          1, 3, 2],
         [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0,
          1, 3, 2],
         [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0,
          1, 3, 2],
         [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0,
          1, 3, 2],
         [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0,
          1, 3, 2],
         [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0,
          1, 3, 2],
         [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0,
          1, 3, 2],
         [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0,
          1, 3, 2],
         [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0,
          1, 3, 2],
         [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0,
          1, 3, 2],
         [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0,
          1, 3, 2],
         [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0,
          1, 3, 2],
         [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0,
          1, 3, 2],
         [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0,
          1, 3, 2]]], dtype=torch.int32)
final_scores: tensor([25.9431, 25.0563, 25.9431, 25.9431, 25.9431, 25.9431, 25.9431, 25.9431,
        25.9431, 25.9431, 25.9431, 25.9431, 25.9431, 25.9431, 25.9431, 25.9431])
final_seq: tensor([[1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1,
         3, 2],
        [1, 3, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 0,
         3, 2],
        [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1,
         3, 2],
        [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1,
         3, 2],
        [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1,
         3, 2],
        [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1,
         3, 2],
        [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1,
         3, 2],
        [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1,
         3, 2],
        [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1,
         3, 2],
        [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1,
         3, 2],
        [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1,
         3, 2],
        [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1,
         3, 2],
        [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1,
         3, 2],
        [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1,
         3, 2],
        [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1,
         3, 2],
        [1, 2, 3, 2, 2, 3, 0, 1, 3, 0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 2, 1, 1, 0, 1,
         3, 2]], dtype=torch.int32)
final_logits: tensor([[[-0.6242,  2.3442, -0.6854, -1.0345],
         [-0.1891, -0.9723,  0.5760,  0.2945],
         [-0.4001, -1.4540, -1.2058,  1.8879],
         ...,
         [-1.2827,  3.2703, -0.8517, -1.2264],
         [-2.0007, -2.6689,  0.8122,  2.1344],
         [-1.2289,  0.0097,  2.4031, -2.0228]],

        [[-0.6242,  2.3442, -0.6854, -1.0345],
         [-0.1891, -0.9723,  0.5760,  0.2945],
         [-0.7835, -1.0794, -0.6135,  1.8276],
         ...,
         [ 3.1371, -1.8189, -1.3769, -1.6370],
         [-2.1368, -2.4498,  1.2452,  2.0871],
         [-1.3335,  0.2599,  2.3432, -1.8504]],

        [[-0.6242,  2.3442, -0.6854, -1.0345],
         [-0.1891, -0.9723,  0.5760,  0.2945],
         [-0.4001, -1.4540, -1.2058,  1.8879],
         ...,
         [-1.2827,  3.2703, -0.8517, -1.2264],
         [-2.0007, -2.6689,  0.8122,  2.1344],
         [-1.2289,  0.0097,  2.4031, -2.0228]],

        ...,

        [[-0.6242,  2.3442, -0.6854, -1.0345],
         [-0.1891, -0.9723,  0.5760,  0.2945],
         [-0.4001, -1.4540, -1.2058,  1.8879],
         ...,
         [-1.2827,  3.2703, -0.8517, -1.2264],
         [-2.0007, -2.6689,  0.8122,  2.1344],
         [-1.2289,  0.0097,  2.4031, -2.0228]],

        [[-0.6242,  2.3442, -0.6854, -1.0345],
         [-0.1891, -0.9723,  0.5760,  0.2945],
         [-0.4001, -1.4540, -1.2058,  1.8879],
         ...,
         [-1.2827,  3.2703, -0.8517, -1.2264],
         [-2.0007, -2.6689,  0.8122,  2.1344],
         [-1.2289,  0.0097,  2.4031, -2.0228]],

        [[-0.6242,  2.3442, -0.6854, -1.0345],
         [-0.1891, -0.9723,  0.5760,  0.2945],
         [-0.4001, -1.4540, -1.2058,  1.8879],
         ...,
         [-1.2827,  3.2703, -0.8517, -1.2264],
         [-2.0007, -2.6689,  0.8122,  2.1344],
         [-1.2289,  0.0097,  2.4031, -2.0228]]])
Coords: 46
Sequence: CUUGCUGAAGCGCGCACGGCAAGCUUGCUGAAGCGCGCACGGCAAG
Len sequence: 46
Detected base pairs: [[  0 468]
 [ 17 446]
 [ 37 424]
 [ 57 404]
 [ 80 381]
 [100 358]
 [120 338]
 [187 787]
 [210 764]
 [230 744]
 [253 721]
 [273 701]
 [296 678]
 [491 959]
 [508 937]
 [528 915]
 [548 895]
 [571 872]
 [591 849]
 [611 829]]
Secondary structure: '(((((((..[[[[[[.)))))))(((((((..]]]]]].)))))))'
Sequence length: 46
Number of residues: 46
Chain IDs: ['A' 'B']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
(((((((.........)))))))(((((((.........)))))))
Batch size:  (44, 44)
Number of nodes:  44
edge_index: tensor([[[ 0,  0,  0,  ..., 43, 43, 43],
         [ 1,  2,  3,  ..., 40, 41, 42]],

        [[ 0,  0,  0,  ..., 43, 43, 43],
         [ 1,  2,  3,  ..., 40, 41, 42]],

        [[ 0,  0,  0,  ..., 43, 43, 43],
         [ 1,  2,  3,  ..., 40, 41, 42]],

        ...,

        [[ 0,  0,  0,  ..., 43, 43, 43],
         [ 1,  2,  3,  ..., 40, 41, 42]],

        [[ 0,  0,  0,  ..., 43, 43, 43],
         [ 1,  2,  3,  ..., 40, 41, 42]],

        [[ 0,  0,  0,  ..., 43, 43, 43],
         [ 1,  2,  3,  ..., 40, 41, 42]]])
offset size: torch.Size([16, 1, 1])
offset: tensor([[[  0]],

        [[ 44]],

        [[ 88]],

        [[132]],

        [[176]],

        [[220]],

        [[264]],

        [[308]],

        [[352]],

        [[396]],

        [[440]],

        [[484]],

        [[528]],

        [[572]],

        [[616]],

        [[660]]])
Iteration :  0
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
new_beam_scores: tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  1
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9967, 0.9967, 0.9967, 0.9967, 0.9967, 0.9967, 0.9967, 0.9967, 0.9967,
         0.9967, 0.9967, 0.9967, 0.9967, 0.9967, 0.9967, 0.9967]])
scores: tensor([1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000])
new_beam_scores: tensor([[1.9967, 1.9967, 1.9967, 1.9967, 1.9967, 1.9967, 1.9967, 1.9967, 1.9967,
         1.9967, 1.9967, 1.9967, 1.9967, 1.9967, 1.9967, 1.9967]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[1.9967, 1.9967, 1.9967, 1.9967, 1.9967, 1.9967, 1.9967, 1.9967, 1.9967,
         1.9967, 1.9967, 1.9967, 1.9967, 1.9967, 1.9967, 1.9967]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  2
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998,
         0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998]])
scores: tensor([1.9967, 1.9967, 1.9967, 1.9967, 1.9967, 1.9967, 1.9967, 1.9967, 1.9967,
        1.9967, 1.9967, 1.9967, 1.9967, 1.9967, 1.9967, 1.9967])
new_beam_scores: tensor([[2.9965, 2.9965, 2.9965, 2.9965, 2.9965, 2.9965, 2.9965, 2.9965, 2.9965,
         2.9965, 2.9965, 2.9965, 2.9965, 2.9965, 2.9965, 2.9965]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[2.9965, 2.9965, 2.9965, 2.9965, 2.9965, 2.9965, 2.9965, 2.9965, 2.9965,
         2.9965, 2.9965, 2.9965, 2.9965, 2.9965, 2.9965, 2.9965]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  3
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9582, 0.9582, 0.9582, 0.9582, 0.9582, 0.9582, 0.9582, 0.9582, 0.9582,
         0.9582, 0.9582, 0.9582, 0.9582, 0.9582, 0.9582, 0.9582]])
scores: tensor([2.9965, 2.9965, 2.9965, 2.9965, 2.9965, 2.9965, 2.9965, 2.9965, 2.9965,
        2.9965, 2.9965, 2.9965, 2.9965, 2.9965, 2.9965, 2.9965])
new_beam_scores: tensor([[3.9547, 3.9547, 3.9547, 3.9547, 3.9547, 3.9547, 3.9547, 3.9547, 3.9547,
         3.9547, 3.9547, 3.9547, 3.9547, 3.9547, 3.9547, 3.9547]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[3.9547, 3.9547, 3.9547, 3.9547, 3.9547, 3.9547, 3.9547, 3.9547, 3.9547,
         3.9547, 3.9547, 3.9547, 3.9547, 3.9547, 3.9547, 3.9547]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  4
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([3.9547, 3.9547, 3.9547, 3.9547, 3.9547, 3.9547, 3.9547, 3.9547, 3.9547,
        3.9547, 3.9547, 3.9547, 3.9547, 3.9547, 3.9547, 3.9547])
new_beam_scores: tensor([[4.9547, 4.9547, 4.9547, 4.9547, 4.9547, 4.9547, 4.9547, 4.9547, 4.9547,
         4.9547, 4.9547, 4.9547, 4.9547, 4.9547, 4.9547, 4.9547]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[4.9547, 4.9547, 4.9547, 4.9547, 4.9547, 4.9547, 4.9547, 4.9547, 4.9547,
         4.9547, 4.9547, 4.9547, 4.9547, 4.9547, 4.9547, 4.9547]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  5
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([4.9547, 4.9547, 4.9547, 4.9547, 4.9547, 4.9547, 4.9547, 4.9547, 4.9547,
        4.9547, 4.9547, 4.9547, 4.9547, 4.9547, 4.9547, 4.9547])
new_beam_scores: tensor([[5.9547, 5.9547, 5.9547, 5.9547, 5.9547, 5.9547, 5.9547, 5.9547, 5.9547,
         5.9547, 5.9547, 5.9547, 5.9547, 5.9547, 5.9547, 5.9547]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[5.9547, 5.9547, 5.9547, 5.9547, 5.9547, 5.9547, 5.9547, 5.9547, 5.9547,
         5.9547, 5.9547, 5.9547, 5.9547, 5.9547, 5.9547, 5.9547]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  6
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9949, 0.9949, 0.9949, 0.9949, 0.9949, 0.9949, 0.9949, 0.9949, 0.9949,
         0.9949, 0.9949, 0.9949, 0.9949, 0.9949, 0.9949, 0.9949]])
scores: tensor([5.9547, 5.9547, 5.9547, 5.9547, 5.9547, 5.9547, 5.9547, 5.9547, 5.9547,
        5.9547, 5.9547, 5.9547, 5.9547, 5.9547, 5.9547, 5.9547])
new_beam_scores: tensor([[6.9496, 6.9496, 6.9496, 6.9496, 6.9496, 6.9496, 6.9496, 6.9496, 6.9496,
         6.9496, 6.9496, 6.9496, 6.9496, 6.9496, 6.9496, 6.9496]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[6.9496, 6.9496, 6.9496, 6.9496, 6.9496, 6.9496, 6.9496, 6.9496, 6.9496,
         6.9496, 6.9496, 6.9496, 6.9496, 6.9496, 6.9496, 6.9496]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  7
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [1],
        [1],
        [1],
        [1],
        [0],
        [1],
        [1],
        [1],
        [0],
        [0],
        [1],
        [0],
        [0],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.3818, 0.6174, 0.6174, 0.6174, 0.6174, 0.3818, 0.6174, 0.6174, 0.6174,
         0.3818, 0.3818, 0.6174, 0.3818, 0.3818, 0.6174, 0.6174]])
scores: tensor([6.9496, 6.9496, 6.9496, 6.9496, 6.9496, 6.9496, 6.9496, 6.9496, 6.9496,
        6.9496, 6.9496, 6.9496, 6.9496, 6.9496, 6.9496, 6.9496])
new_beam_scores: tensor([[7.3314, 7.5670, 7.5670, 7.5670, 7.5670, 7.3314, 7.5670, 7.5670, 7.5670,
         7.3314, 7.3314, 7.5670, 7.3314, 7.3314, 7.5670, 7.5670]])
new_beam seq: tensor([[0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[7.3314, 7.5670, 7.5670, 7.5670, 7.5670, 7.3314, 7.5670, 7.5670, 7.5670,
         7.3314, 7.3314, 7.5670, 7.3314, 7.3314, 7.5670, 7.5670]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  8
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([7.3314, 7.5670, 7.5670, 7.5670, 7.5670, 7.3314, 7.5670, 7.5670, 7.5670,
        7.3314, 7.3314, 7.5670, 7.3314, 7.3314, 7.5670, 7.5670])
new_beam_scores: tensor([[8.3314, 8.5670, 8.5670, 8.5670, 8.5670, 8.3314, 8.5670, 8.5670, 8.5670,
         8.3314, 8.3314, 8.5670, 8.3314, 8.3314, 8.5670, 8.5670]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[8.3314, 8.5670, 8.5670, 8.5670, 8.5670, 8.3314, 8.5670, 8.5670, 8.5670,
         8.3314, 8.3314, 8.5670, 8.3314, 8.3314, 8.5670, 8.5670]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  9
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995,
         0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995]])
scores: tensor([8.3314, 8.5670, 8.5670, 8.5670, 8.5670, 8.3314, 8.5670, 8.5670, 8.5670,
        8.3314, 8.3314, 8.5670, 8.3314, 8.3314, 8.5670, 8.5670])
new_beam_scores: tensor([[9.3309, 9.5665, 9.5665, 9.5665, 9.5665, 9.3309, 9.5665, 9.5665, 9.5665,
         9.3309, 9.3309, 9.5665, 9.3309, 9.3309, 9.5665, 9.5665]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[9.3309, 9.5665, 9.5665, 9.5665, 9.5665, 9.3309, 9.5665, 9.5665, 9.5665,
         9.3309, 9.3309, 9.5665, 9.3309, 9.3309, 9.5665, 9.5665]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  10
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9998, 0.9995, 0.9995, 0.9995, 0.9995, 0.9998, 0.9995, 0.9995, 0.9995,
         0.9998, 0.9998, 0.9995, 0.9998, 0.9998, 0.9995, 0.9995]])
scores: tensor([9.3309, 9.5665, 9.5665, 9.5665, 9.5665, 9.3309, 9.5665, 9.5665, 9.5665,
        9.3309, 9.3309, 9.5665, 9.3309, 9.3309, 9.5665, 9.5665])
new_beam_scores: tensor([[10.3307, 10.5660, 10.5660, 10.5660, 10.5660, 10.3307, 10.5660, 10.5660,
         10.5660, 10.3307, 10.3307, 10.5660, 10.3307, 10.3307, 10.5660, 10.5660]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[10.3307, 10.5660, 10.5660, 10.5660, 10.5660, 10.3307, 10.5660, 10.5660,
         10.5660, 10.3307, 10.3307, 10.5660, 10.3307, 10.3307, 10.5660, 10.5660]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  11
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9996, 0.9861, 0.9861, 0.9861, 0.9861, 0.9996, 0.9861, 0.9861, 0.9861,
         0.9996, 0.9996, 0.9861, 0.9996, 0.9996, 0.9861, 0.9861]])
scores: tensor([10.3307, 10.5660, 10.5660, 10.5660, 10.5660, 10.3307, 10.5660, 10.5660,
        10.5660, 10.3307, 10.3307, 10.5660, 10.3307, 10.3307, 10.5660, 10.5660])
new_beam_scores: tensor([[11.3303, 11.5520, 11.5520, 11.5520, 11.5520, 11.3303, 11.5520, 11.5520,
         11.5520, 11.3303, 11.3303, 11.5520, 11.3303, 11.3303, 11.5520, 11.5520]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[11.3303, 11.5520, 11.5520, 11.5520, 11.5520, 11.3303, 11.5520, 11.5520,
         11.5520, 11.3303, 11.3303, 11.5520, 11.3303, 11.3303, 11.5520, 11.5520]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  12
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9891, 0.9661, 0.9661, 0.9661, 0.9661, 0.9891, 0.9661, 0.9661, 0.9661,
         0.9891, 0.9891, 0.9661, 0.9891, 0.9891, 0.9661, 0.9661]])
scores: tensor([11.3303, 11.5520, 11.5520, 11.5520, 11.5520, 11.3303, 11.5520, 11.5520,
        11.5520, 11.3303, 11.3303, 11.5520, 11.3303, 11.3303, 11.5520, 11.5520])
new_beam_scores: tensor([[12.3194, 12.5181, 12.5181, 12.5181, 12.5181, 12.3194, 12.5181, 12.5181,
         12.5181, 12.3194, 12.3194, 12.5181, 12.3194, 12.3194, 12.5181, 12.5181]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[12.3194, 12.5181, 12.5181, 12.5181, 12.5181, 12.3194, 12.5181, 12.5181,
         12.5181, 12.3194, 12.3194, 12.5181, 12.3194, 12.3194, 12.5181, 12.5181]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  13
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([12.3194, 12.5181, 12.5181, 12.5181, 12.5181, 12.3194, 12.5181, 12.5181,
        12.5181, 12.3194, 12.3194, 12.5181, 12.3194, 12.3194, 12.5181, 12.5181])
new_beam_scores: tensor([[13.3194, 13.5181, 13.5181, 13.5181, 13.5181, 13.3194, 13.5181, 13.5181,
         13.5181, 13.3194, 13.3194, 13.5181, 13.3194, 13.3194, 13.5181, 13.5181]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[13.3194, 13.5181, 13.5181, 13.5181, 13.5181, 13.3194, 13.5181, 13.5181,
         13.5181, 13.3194, 13.3194, 13.5181, 13.3194, 13.3194, 13.5181, 13.5181]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  14
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([13.3194, 13.5181, 13.5181, 13.5181, 13.5181, 13.3194, 13.5181, 13.5181,
        13.5181, 13.3194, 13.3194, 13.5181, 13.3194, 13.3194, 13.5181, 13.5181])
new_beam_scores: tensor([[14.3194, 14.5181, 14.5181, 14.5181, 14.5181, 14.3194, 14.5181, 14.5181,
         14.5181, 14.3194, 14.3194, 14.5181, 14.3194, 14.3194, 14.5181, 14.5181]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[14.3194, 14.5181, 14.5181, 14.5181, 14.5181, 14.3194, 14.5181, 14.5181,
         14.5181, 14.3194, 14.3194, 14.5181, 14.3194, 14.3194, 14.5181, 14.5181]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  15
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([14.3194, 14.5181, 14.5181, 14.5181, 14.5181, 14.3194, 14.5181, 14.5181,
        14.5181, 14.3194, 14.3194, 14.5181, 14.3194, 14.3194, 14.5181, 14.5181])
new_beam_scores: tensor([[15.3194, 15.5181, 15.5181, 15.5181, 15.5181, 15.3194, 15.5181, 15.5181,
         15.5181, 15.3194, 15.3194, 15.5181, 15.3194, 15.3194, 15.5181, 15.5181]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[15.3194, 15.5181, 15.5181, 15.5181, 15.5181, 15.3194, 15.5181, 15.5181,
         15.5181, 15.3194, 15.3194, 15.5181, 15.3194, 15.3194, 15.5181, 15.5181]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  16
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([15.3194, 15.5181, 15.5181, 15.5181, 15.5181, 15.3194, 15.5181, 15.5181,
        15.5181, 15.3194, 15.3194, 15.5181, 15.3194, 15.3194, 15.5181, 15.5181])
new_beam_scores: tensor([[16.3194, 16.5181, 16.5181, 16.5181, 16.5181, 16.3194, 16.5181, 16.5181,
         16.5181, 16.3194, 16.3194, 16.5181, 16.3194, 16.3194, 16.5181, 16.5181]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[16.3194, 16.5181, 16.5181, 16.5181, 16.5181, 16.3194, 16.5181, 16.5181,
         16.5181, 16.3194, 16.3194, 16.5181, 16.3194, 16.3194, 16.5181, 16.5181]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  17
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([16.3194, 16.5181, 16.5181, 16.5181, 16.5181, 16.3194, 16.5181, 16.5181,
        16.5181, 16.3194, 16.3194, 16.5181, 16.3194, 16.3194, 16.5181, 16.5181])
new_beam_scores: tensor([[17.3194, 17.5181, 17.5181, 17.5181, 17.5181, 17.3194, 17.5181, 17.5181,
         17.5181, 17.3194, 17.3194, 17.5181, 17.3194, 17.3194, 17.5181, 17.5181]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[17.3194, 17.5181, 17.5181, 17.5181, 17.5181, 17.3194, 17.5181, 17.5181,
         17.5181, 17.3194, 17.3194, 17.5181, 17.3194, 17.3194, 17.5181, 17.5181]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  18
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([17.3194, 17.5181, 17.5181, 17.5181, 17.5181, 17.3194, 17.5181, 17.5181,
        17.5181, 17.3194, 17.3194, 17.5181, 17.3194, 17.3194, 17.5181, 17.5181])
new_beam_scores: tensor([[18.3194, 18.5181, 18.5181, 18.5181, 18.5181, 18.3194, 18.5181, 18.5181,
         18.5181, 18.3194, 18.3194, 18.5181, 18.3194, 18.3194, 18.5181, 18.5181]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[18.3194, 18.5181, 18.5181, 18.5181, 18.5181, 18.3194, 18.5181, 18.5181,
         18.5181, 18.3194, 18.3194, 18.5181, 18.3194, 18.3194, 18.5181, 18.5181]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  19
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([18.3194, 18.5181, 18.5181, 18.5181, 18.5181, 18.3194, 18.5181, 18.5181,
        18.5181, 18.3194, 18.3194, 18.5181, 18.3194, 18.3194, 18.5181, 18.5181])
new_beam_scores: tensor([[19.3194, 19.5181, 19.5181, 19.5181, 19.5181, 19.3194, 19.5181, 19.5181,
         19.5181, 19.3194, 19.3194, 19.5181, 19.3194, 19.3194, 19.5181, 19.5181]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[19.3194, 19.5181, 19.5181, 19.5181, 19.5181, 19.3194, 19.5181, 19.5181,
         19.5181, 19.3194, 19.3194, 19.5181, 19.3194, 19.3194, 19.5181, 19.5181]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  20
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([19.3194, 19.5181, 19.5181, 19.5181, 19.5181, 19.3194, 19.5181, 19.5181,
        19.5181, 19.3194, 19.3194, 19.5181, 19.3194, 19.3194, 19.5181, 19.5181])
new_beam_scores: tensor([[20.3194, 20.5181, 20.5181, 20.5181, 20.5181, 20.3194, 20.5181, 20.5181,
         20.5181, 20.3194, 20.3194, 20.5181, 20.3194, 20.3194, 20.5181, 20.5181]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[20.3194, 20.5181, 20.5181, 20.5181, 20.5181, 20.3194, 20.5181, 20.5181,
         20.5181, 20.3194, 20.3194, 20.5181, 20.3194, 20.3194, 20.5181, 20.5181]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  21
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([20.3194, 20.5181, 20.5181, 20.5181, 20.5181, 20.3194, 20.5181, 20.5181,
        20.5181, 20.3194, 20.3194, 20.5181, 20.3194, 20.3194, 20.5181, 20.5181])
new_beam_scores: tensor([[21.3194, 21.5181, 21.5181, 21.5181, 21.5181, 21.3194, 21.5181, 21.5181,
         21.5181, 21.3194, 21.3194, 21.5181, 21.3194, 21.3194, 21.5181, 21.5181]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[21.3194, 21.5181, 21.5181, 21.5181, 21.5181, 21.3194, 21.5181, 21.5181,
         21.5181, 21.3194, 21.3194, 21.5181, 21.3194, 21.3194, 21.5181, 21.5181]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  22
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([21.3194, 21.5181, 21.5181, 21.5181, 21.5181, 21.3194, 21.5181, 21.5181,
        21.5181, 21.3194, 21.3194, 21.5181, 21.3194, 21.3194, 21.5181, 21.5181])
new_beam_scores: tensor([[22.3194, 22.5181, 22.5181, 22.5181, 22.5181, 22.3194, 22.5181, 22.5181,
         22.5181, 22.3194, 22.3194, 22.5181, 22.3194, 22.3194, 22.5181, 22.5181]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[22.3194, 22.5181, 22.5181, 22.5181, 22.5181, 22.3194, 22.5181, 22.5181,
         22.5181, 22.3194, 22.3194, 22.5181, 22.3194, 22.3194, 22.5181, 22.5181]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  23
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9981, 0.9997, 0.9997, 0.9997, 0.9997, 0.9981, 0.9997, 0.9997, 0.9997,
         0.9981, 0.9981, 0.9997, 0.9981, 0.9981, 0.9997, 0.9997]])
scores: tensor([22.3194, 22.5181, 22.5181, 22.5181, 22.5181, 22.3194, 22.5181, 22.5181,
        22.5181, 22.3194, 22.3194, 22.5181, 22.3194, 22.3194, 22.5181, 22.5181])
new_beam_scores: tensor([[23.3175, 23.5178, 23.5178, 23.5178, 23.5178, 23.3175, 23.5178, 23.5178,
         23.5178, 23.3175, 23.3175, 23.5178, 23.3175, 23.3175, 23.5178, 23.5178]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[23.3175, 23.5178, 23.5178, 23.5178, 23.5178, 23.3175, 23.5178, 23.5178,
         23.5178, 23.3175, 23.3175, 23.5178, 23.3175, 23.3175, 23.5178, 23.5178]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  24
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([23.3175, 23.5178, 23.5178, 23.5178, 23.5178, 23.3175, 23.5178, 23.5178,
        23.5178, 23.3175, 23.3175, 23.5178, 23.3175, 23.3175, 23.5178, 23.5178])
new_beam_scores: tensor([[24.3175, 24.5178, 24.5178, 24.5178, 24.5178, 24.3175, 24.5178, 24.5178,
         24.5178, 24.3175, 24.3175, 24.5178, 24.3175, 24.3175, 24.5178, 24.5178]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[24.3175, 24.5178, 24.5178, 24.5178, 24.5178, 24.3175, 24.5178, 24.5178,
         24.5178, 24.3175, 24.3175, 24.5178, 24.3175, 24.3175, 24.5178, 24.5178]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  25
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([24.3175, 24.5178, 24.5178, 24.5178, 24.5178, 24.3175, 24.5178, 24.5178,
        24.5178, 24.3175, 24.3175, 24.5178, 24.3175, 24.3175, 24.5178, 24.5178])
new_beam_scores: tensor([[25.3175, 25.5178, 25.5178, 25.5178, 25.5178, 25.3175, 25.5178, 25.5178,
         25.5178, 25.3175, 25.3175, 25.5178, 25.3175, 25.3175, 25.5178, 25.5178]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[25.3175, 25.5178, 25.5178, 25.5178, 25.5178, 25.3175, 25.5178, 25.5178,
         25.5178, 25.3175, 25.3175, 25.5178, 25.3175, 25.3175, 25.5178, 25.5178]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  26
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([25.3175, 25.5178, 25.5178, 25.5178, 25.5178, 25.3175, 25.5178, 25.5178,
        25.5178, 25.3175, 25.3175, 25.5178, 25.3175, 25.3175, 25.5178, 25.5178])
new_beam_scores: tensor([[26.3175, 26.5178, 26.5178, 26.5178, 26.5178, 26.3175, 26.5178, 26.5178,
         26.5178, 26.3175, 26.3175, 26.5178, 26.3175, 26.3175, 26.5178, 26.5178]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[26.3175, 26.5178, 26.5178, 26.5178, 26.5178, 26.3175, 26.5178, 26.5178,
         26.5178, 26.3175, 26.3175, 26.5178, 26.3175, 26.3175, 26.5178, 26.5178]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  27
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([26.3175, 26.5178, 26.5178, 26.5178, 26.5178, 26.3175, 26.5178, 26.5178,
        26.5178, 26.3175, 26.3175, 26.5178, 26.3175, 26.3175, 26.5178, 26.5178])
new_beam_scores: tensor([[27.3175, 27.5178, 27.5178, 27.5178, 27.5178, 27.3175, 27.5178, 27.5178,
         27.5178, 27.3175, 27.3175, 27.5178, 27.3175, 27.3175, 27.5178, 27.5178]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[27.3175, 27.5178, 27.5178, 27.5178, 27.5178, 27.3175, 27.5178, 27.5178,
         27.5178, 27.3175, 27.3175, 27.5178, 27.3175, 27.3175, 27.5178, 27.5178]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  28
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9996, 0.9988, 0.9988, 0.9988, 0.9988, 0.9996, 0.9988, 0.9988, 0.9988,
         0.9996, 0.9996, 0.9988, 0.9996, 0.9996, 0.9988, 0.9988]])
scores: tensor([27.3175, 27.5178, 27.5178, 27.5178, 27.5178, 27.3175, 27.5178, 27.5178,
        27.5178, 27.3175, 27.3175, 27.5178, 27.3175, 27.3175, 27.5178, 27.5178])
new_beam_scores: tensor([[28.3171, 28.5167, 28.5167, 28.5167, 28.5167, 28.3171, 28.5167, 28.5167,
         28.5167, 28.3171, 28.3171, 28.5167, 28.3171, 28.3171, 28.5167, 28.5167]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[28.3171, 28.5167, 28.5167, 28.5167, 28.5167, 28.3171, 28.5167, 28.5167,
         28.5167, 28.3171, 28.3171, 28.5167, 28.3171, 28.3171, 28.5167, 28.5167]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  29
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 0.9998, 0.9998, 0.9998, 0.9998, 1.0000, 0.9998, 0.9998, 0.9998,
         1.0000, 1.0000, 0.9998, 1.0000, 1.0000, 0.9998, 0.9998]])
scores: tensor([28.3171, 28.5167, 28.5167, 28.5167, 28.5167, 28.3171, 28.5167, 28.5167,
        28.5167, 28.3171, 28.3171, 28.5167, 28.3171, 28.3171, 28.5167, 28.5167])
new_beam_scores: tensor([[29.3170, 29.5165, 29.5165, 29.5165, 29.5165, 29.3170, 29.5165, 29.5165,
         29.5165, 29.3170, 29.3170, 29.5165, 29.3170, 29.3170, 29.5165, 29.5165]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[29.3170, 29.5165, 29.5165, 29.5165, 29.5165, 29.3170, 29.5165, 29.5165,
         29.5165, 29.3170, 29.3170, 29.5165, 29.3170, 29.3170, 29.5165, 29.5165]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  30
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([29.3170, 29.5165, 29.5165, 29.5165, 29.5165, 29.3170, 29.5165, 29.5165,
        29.5165, 29.3170, 29.3170, 29.5165, 29.3170, 29.3170, 29.5165, 29.5165])
new_beam_scores: tensor([[30.3170, 30.5165, 30.5165, 30.5165, 30.5165, 30.3170, 30.5165, 30.5165,
         30.5165, 30.3170, 30.3170, 30.5165, 30.3170, 30.3170, 30.5165, 30.5165]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[30.3170, 30.5165, 30.5165, 30.5165, 30.5165, 30.3170, 30.5165, 30.5165,
         30.5165, 30.3170, 30.3170, 30.5165, 30.3170, 30.3170, 30.5165, 30.5165]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  31
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([30.3170, 30.5165, 30.5165, 30.5165, 30.5165, 30.3170, 30.5165, 30.5165,
        30.5165, 30.3170, 30.3170, 30.5165, 30.3170, 30.3170, 30.5165, 30.5165])
new_beam_scores: tensor([[31.3170, 31.5165, 31.5165, 31.5165, 31.5165, 31.3170, 31.5165, 31.5165,
         31.5165, 31.3170, 31.3170, 31.5165, 31.3170, 31.3170, 31.5165, 31.5165]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[31.3170, 31.5165, 31.5165, 31.5165, 31.5165, 31.3170, 31.5165, 31.5165,
         31.5165, 31.3170, 31.3170, 31.5165, 31.3170, 31.3170, 31.5165, 31.5165]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  32
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([31.3170, 31.5165, 31.5165, 31.5165, 31.5165, 31.3170, 31.5165, 31.5165,
        31.5165, 31.3170, 31.3170, 31.5165, 31.3170, 31.3170, 31.5165, 31.5165])
new_beam_scores: tensor([[32.3170, 32.5165, 32.5165, 32.5165, 32.5165, 32.3170, 32.5165, 32.5165,
         32.5165, 32.3170, 32.3170, 32.5165, 32.3170, 32.3170, 32.5165, 32.5165]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[32.3170, 32.5165, 32.5165, 32.5165, 32.5165, 32.3170, 32.5165, 32.5165,
         32.5165, 32.3170, 32.3170, 32.5165, 32.3170, 32.3170, 32.5165, 32.5165]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  33
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([32.3170, 32.5165, 32.5165, 32.5165, 32.5165, 32.3170, 32.5165, 32.5165,
        32.5165, 32.3170, 32.3170, 32.5165, 32.3170, 32.3170, 32.5165, 32.5165])
new_beam_scores: tensor([[33.3170, 33.5165, 33.5165, 33.5165, 33.5165, 33.3170, 33.5165, 33.5165,
         33.5165, 33.3170, 33.3170, 33.5165, 33.3170, 33.3170, 33.5165, 33.5165]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[33.3170, 33.5165, 33.5165, 33.5165, 33.5165, 33.3170, 33.5165, 33.5165,
         33.5165, 33.3170, 33.3170, 33.5165, 33.3170, 33.3170, 33.5165, 33.5165]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  34
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([33.3170, 33.5165, 33.5165, 33.5165, 33.5165, 33.3170, 33.5165, 33.5165,
        33.5165, 33.3170, 33.3170, 33.5165, 33.3170, 33.3170, 33.5165, 33.5165])
new_beam_scores: tensor([[34.3170, 34.5165, 34.5165, 34.5165, 34.5165, 34.3170, 34.5165, 34.5165,
         34.5165, 34.3170, 34.3170, 34.5165, 34.3170, 34.3170, 34.5165, 34.5165]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[34.3170, 34.5165, 34.5165, 34.5165, 34.5165, 34.3170, 34.5165, 34.5165,
         34.5165, 34.3170, 34.3170, 34.5165, 34.3170, 34.3170, 34.5165, 34.5165]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  35
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([34.3170, 34.5165, 34.5165, 34.5165, 34.5165, 34.3170, 34.5165, 34.5165,
        34.5165, 34.3170, 34.3170, 34.5165, 34.3170, 34.3170, 34.5165, 34.5165])
new_beam_scores: tensor([[35.3170, 35.5165, 35.5165, 35.5165, 35.5165, 35.3170, 35.5165, 35.5165,
         35.5165, 35.3170, 35.3170, 35.5165, 35.3170, 35.3170, 35.5165, 35.5165]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[35.3170, 35.5165, 35.5165, 35.5165, 35.5165, 35.3170, 35.5165, 35.5165,
         35.5165, 35.3170, 35.3170, 35.5165, 35.3170, 35.3170, 35.5165, 35.5165]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  36
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([35.3170, 35.5165, 35.5165, 35.5165, 35.5165, 35.3170, 35.5165, 35.5165,
        35.5165, 35.3170, 35.3170, 35.5165, 35.3170, 35.3170, 35.5165, 35.5165])
new_beam_scores: tensor([[36.3170, 36.5165, 36.5165, 36.5165, 36.5165, 36.3170, 36.5165, 36.5165,
         36.5165, 36.3170, 36.3170, 36.5165, 36.3170, 36.3170, 36.5165, 36.5165]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[36.3170, 36.5165, 36.5165, 36.5165, 36.5165, 36.3170, 36.5165, 36.5165,
         36.5165, 36.3170, 36.3170, 36.5165, 36.3170, 36.3170, 36.5165, 36.5165]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  37
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([36.3170, 36.5165, 36.5165, 36.5165, 36.5165, 36.3170, 36.5165, 36.5165,
        36.5165, 36.3170, 36.3170, 36.5165, 36.3170, 36.3170, 36.5165, 36.5165])
new_beam_scores: tensor([[37.3170, 37.5165, 37.5165, 37.5165, 37.5165, 37.3170, 37.5165, 37.5165,
         37.5165, 37.3170, 37.3170, 37.5165, 37.3170, 37.3170, 37.5165, 37.5165]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[37.3170, 37.5165, 37.5165, 37.5165, 37.5165, 37.3170, 37.5165, 37.5165,
         37.5165, 37.3170, 37.3170, 37.5165, 37.3170, 37.3170, 37.5165, 37.5165]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 2, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 2, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 2, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  38
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([37.3170, 37.5165, 37.5165, 37.5165, 37.5165, 37.3170, 37.5165, 37.5165,
        37.5165, 37.3170, 37.3170, 37.5165, 37.3170, 37.3170, 37.5165, 37.5165])
new_beam_scores: tensor([[38.3170, 38.5165, 38.5165, 38.5165, 38.5165, 38.3170, 38.5165, 38.5165,
         38.5165, 38.3170, 38.3170, 38.5165, 38.3170, 38.3170, 38.5165, 38.5165]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[38.3170, 38.5165, 38.5165, 38.5165, 38.5165, 38.3170, 38.5165, 38.5165,
         38.5165, 38.3170, 38.3170, 38.5165, 38.3170, 38.3170, 38.5165, 38.5165]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 2, 1, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 2, 1, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 2, 1, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 2, 1, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 0, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 0, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 2, 1, 0, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 2, 1, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  39
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([38.3170, 38.5165, 38.5165, 38.5165, 38.5165, 38.3170, 38.5165, 38.5165,
        38.5165, 38.3170, 38.3170, 38.5165, 38.3170, 38.3170, 38.5165, 38.5165])
new_beam_scores: tensor([[39.3170, 39.5165, 39.5165, 39.5165, 39.5165, 39.3170, 39.5165, 39.5165,
         39.5165, 39.3170, 39.3170, 39.5165, 39.3170, 39.3170, 39.5165, 39.5165]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[39.3170, 39.5165, 39.5165, 39.5165, 39.5165, 39.3170, 39.5165, 39.5165,
         39.5165, 39.3170, 39.3170, 39.5165, 39.3170, 39.3170, 39.5165, 39.5165]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 2, 1, 3, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 2, 1, 3, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 2, 1, 3, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 2, 1, 3, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3,
        0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 0, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 0, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 2, 1, 3, 0, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 2, 1, 3, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  40
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([39.3170, 39.5165, 39.5165, 39.5165, 39.5165, 39.3170, 39.5165, 39.5165,
        39.5165, 39.3170, 39.3170, 39.5165, 39.3170, 39.3170, 39.5165, 39.5165])
new_beam_scores: tensor([[40.3170, 40.5165, 40.5165, 40.5165, 40.5165, 40.3170, 40.5165, 40.5165,
         40.5165, 40.3170, 40.3170, 40.5165, 40.3170, 40.3170, 40.5165, 40.5165]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[40.3170, 40.5165, 40.5165, 40.5165, 40.5165, 40.3170, 40.5165, 40.5165,
         40.5165, 40.3170, 40.3170, 40.5165, 40.3170, 40.3170, 40.5165, 40.5165]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3,
        2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3,
        2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 2, 1, 3, 2, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  41
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([40.3170, 40.5165, 40.5165, 40.5165, 40.5165, 40.3170, 40.5165, 40.5165,
        40.5165, 40.3170, 40.3170, 40.5165, 40.3170, 40.3170, 40.5165, 40.5165])
new_beam_scores: tensor([[41.3170, 41.5165, 41.5165, 41.5165, 41.5165, 41.3170, 41.5165, 41.5165,
         41.5165, 41.3170, 41.3170, 41.5165, 41.3170, 41.3170, 41.5165, 41.5165]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[41.3170, 41.5165, 41.5165, 41.5165, 41.5165, 41.3170, 41.5165, 41.5165,
         41.5165, 41.3170, 41.3170, 41.5165, 41.3170, 41.3170, 41.5165, 41.5165]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3,
        2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3,
        2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 2, 1, 3, 2, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 3.1487, -1.6035, -1.4782, -1.6271],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  42
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([41.3170, 41.5165, 41.5165, 41.5165, 41.5165, 41.3170, 41.5165, 41.5165,
        41.5165, 41.3170, 41.3170, 41.5165, 41.3170, 41.3170, 41.5165, 41.5165])
new_beam_scores: tensor([[42.3170, 42.5165, 42.5165, 42.5165, 42.5165, 42.3170, 42.5165, 42.5165,
         42.5165, 42.3170, 42.3170, 42.5165, 42.3170, 42.3170, 42.5165, 42.5165]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[42.3170, 42.5165, 42.5165, 42.5165, 42.5165, 42.3170, 42.5165, 42.5165,
         42.5165, 42.3170, 42.3170, 42.5165, 42.3170, 42.3170, 42.5165, 42.5165]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3,
        2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3,
        2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 2, 1, 3, 2, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 3.1487, -1.6035, -1.4782, -1.6271],
        [ 3.4469, -1.2805, -1.3101, -1.5050],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([704, 4])
Iteration :  43
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 704])
size of new_beam_h_S: torch.Size([1, 704, 4])
size of new_beam_logits: torch.Size([1, 704, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([42.3170, 42.5165, 42.5165, 42.5165, 42.5165, 42.3170, 42.5165, 42.5165,
        42.5165, 42.3170, 42.3170, 42.5165, 42.3170, 42.3170, 42.5165, 42.5165])
new_beam_scores: tensor([[43.3170, 43.5165, 43.5165, 43.5165, 43.5165, 43.3170, 43.5165, 43.5165,
         43.5165, 43.3170, 43.3170, 43.5165, 43.3170, 43.3170, 43.5165, 43.5165]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 704, 4])
new_beam_h_S size: torch.Size([1, 704, 4])
sorted_scores: tensor([[43.3170, 43.5165, 43.5165, 43.5165, 43.5165, 43.3170, 43.5165, 43.5165,
         43.5165, 43.3170, 43.3170, 43.5165, 43.3170, 43.3170, 43.5165, 43.5165]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 704])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2,
        2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0,
        3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2,
        1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1,
        1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2,
        2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
        1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0,
        3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1,
        0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0, 3, 1, 0, 1,
        1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1,
        3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0,
        2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2,
        0, 2, 1, 3, 2, 0, 0, 2], dtype=torch.int32)
logits: tensor([[-1.5842, -0.0685,  1.2389,  0.2225],
        [-0.8678,  0.3781,  0.9602,  0.1504],
        [ 0.0953,  1.0217,  0.0705, -0.3884],
        ...,
        [ 3.1487, -1.6035, -1.4782, -1.6271],
        [ 3.4469, -1.2805, -1.3101, -1.5050],
        [-1.1463,  0.6466,  2.1231, -1.3306]])
h_S size: torch.Size([704, 4])
tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size expanded indices: torch.Size([1, 16, 44])
tensor([[[2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3,
          3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
         [2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3,
          3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
         [2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3,
          3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
         [2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3,
          3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
         [2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3,
          3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
         [2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3,
          3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
         [2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3,
          3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
         [2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3,
          3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
         [2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3,
          3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
         [2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3,
          3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
         [2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3,
          3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
         [2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3,
          3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
         [2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3,
          3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
         [2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3,
          3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
         [2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3,
          3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
         [2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3,
          3, 1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2]]],
       dtype=torch.int32)
final_scores: tensor([43.3170, 43.5165, 43.5165, 43.5165, 43.5165, 43.3170, 43.5165, 43.5165,
        43.5165, 43.3170, 43.3170, 43.5165, 43.3170, 43.3170, 43.5165, 43.5165])
final_seq: tensor([[2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
         1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
        [2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
         1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
        [2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
         1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
        [2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
         1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
        [2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
         1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
        [2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
         1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
        [2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
         1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
        [2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
         1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
        [2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
         1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
        [2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
         1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
        [2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
         1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
        [2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
         1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
        [2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
         1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
        [2, 2, 1, 0, 3, 1, 0, 0, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
         1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
        [2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
         1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2],
        [2, 2, 1, 0, 3, 1, 0, 1, 1, 2, 3, 0, 2, 2, 0, 2, 1, 3, 2, 1, 1, 2, 3, 3,
         1, 0, 3, 1, 0, 0, 1, 1, 3, 0, 1, 2, 0, 2, 1, 3, 2, 0, 0, 2]],
       dtype=torch.int32)
final_logits: tensor([[[-1.5842, -0.0685,  1.2389,  0.2225],
         [-0.8678,  0.3781,  0.9602,  0.1504],
         [ 0.0953,  1.0217,  0.0705, -0.3884],
         ...,
         [ 3.1940, -1.5937, -1.4532, -1.6021],
         [ 3.4905, -1.2681, -1.2793, -1.4736],
         [-1.0553,  0.6949,  2.0165, -1.2752]],

        [[-1.5842, -0.0685,  1.2389,  0.2225],
         [-0.8678,  0.3781,  0.9602,  0.1504],
         [ 0.0953,  1.0217,  0.0705, -0.3884],
         ...,
         [ 3.1487, -1.6035, -1.4782, -1.6271],
         [ 3.4469, -1.2805, -1.3101, -1.5050],
         [-1.1463,  0.6466,  2.1231, -1.3306]],

        [[-1.5842, -0.0685,  1.2389,  0.2225],
         [-0.8678,  0.3781,  0.9602,  0.1504],
         [ 0.0953,  1.0217,  0.0705, -0.3884],
         ...,
         [ 3.1487, -1.6035, -1.4782, -1.6271],
         [ 3.4469, -1.2805, -1.3101, -1.5050],
         [-1.1463,  0.6466,  2.1231, -1.3306]],

        ...,

        [[-1.5842, -0.0685,  1.2389,  0.2225],
         [-0.8678,  0.3781,  0.9602,  0.1504],
         [ 0.0953,  1.0217,  0.0705, -0.3884],
         ...,
         [ 3.1940, -1.5937, -1.4532, -1.6021],
         [ 3.4905, -1.2681, -1.2793, -1.4736],
         [-1.0553,  0.6949,  2.0165, -1.2752]],

        [[-1.5842, -0.0685,  1.2389,  0.2225],
         [-0.8678,  0.3781,  0.9602,  0.1504],
         [ 0.0953,  1.0217,  0.0705, -0.3884],
         ...,
         [ 3.1487, -1.6035, -1.4782, -1.6271],
         [ 3.4469, -1.2805, -1.3101, -1.5050],
         [-1.1463,  0.6466,  2.1231, -1.3306]],

        [[-1.5842, -0.0685,  1.2389,  0.2225],
         [-0.8678,  0.3781,  0.9602,  0.1504],
         [ 0.0953,  1.0217,  0.0705, -0.3884],
         ...,
         [ 3.1487, -1.6035, -1.4782, -1.6271],
         [ 3.4469, -1.2805, -1.3101, -1.5050],
         [-1.1463,  0.6466,  2.1231, -1.3306]]])
Coords: 19
Sequence: ACCGUCAGAGGACACGGUU
Len sequence: 19
Detected base pairs: [[  0 364]
 [ 18 341]
 [ 38 318]
 [ 58 298]
 [ 81 276]
 [121 143]]
Secondary structure: '(((((.().....))))).'
Sequence length: 19
Number of residues: 19
Chain IDs: ['A']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
(((((.().....))))).
Batch size:  (18, 18)
Number of nodes:  18
edge_index: tensor([[[ 0,  0,  0,  ..., 17, 17, 17],
         [ 1,  2,  3,  ..., 14, 15, 16]],

        [[ 0,  0,  0,  ..., 17, 17, 17],
         [ 1,  2,  3,  ..., 14, 15, 16]],

        [[ 0,  0,  0,  ..., 17, 17, 17],
         [ 1,  2,  3,  ..., 14, 15, 16]],

        ...,

        [[ 0,  0,  0,  ..., 17, 17, 17],
         [ 1,  2,  3,  ..., 14, 15, 16]],

        [[ 0,  0,  0,  ..., 17, 17, 17],
         [ 1,  2,  3,  ..., 14, 15, 16]],

        [[ 0,  0,  0,  ..., 17, 17, 17],
         [ 1,  2,  3,  ..., 14, 15, 16]]])
offset size: torch.Size([16, 1, 1])
offset: tensor([[[  0]],

        [[ 18]],

        [[ 36]],

        [[ 54]],

        [[ 72]],

        [[ 90]],

        [[108]],

        [[126]],

        [[144]],

        [[162]],

        [[180]],

        [[198]],

        [[216]],

        [[234]],

        [[252]],

        [[270]]])
Iteration :  0
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [1],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [1],
        [1],
        [1],
        [0],
        [2],
        [0],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 288])
size of new_beam_h_S: torch.Size([1, 288, 4])
size of new_beam_logits: torch.Size([1, 288, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.6955, 0.6955, 0.2654, 0.6955, 0.6955, 0.6955, 0.6955, 0.6955, 0.6955,
         0.2654, 0.2654, 0.2654, 0.0391, 0.6955, 0.0391, 0.2654]])
scores: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
new_beam_scores: tensor([[0.6955, 0.6955, 0.2654, 0.6955, 0.6955, 0.6955, 0.6955, 0.6955, 0.6955,
         0.2654, 0.2654, 0.2654, 0.0391, 0.6955, 0.0391, 0.2654]])
new_beam seq: tensor([[2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 2, 0, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 288, 4])
new_beam_h_S size: torch.Size([1, 288, 4])
sorted_scores: tensor([[0.6955, 0.6955, 0.2654, 0.6955, 0.6955, 0.6955, 0.6955, 0.6955, 0.6955,
         0.2654, 0.2654, 0.2654, 0.0391, 0.6955, 0.0391, 0.2654]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 288])
new_beam_seq_sorted reshaped: tensor([2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 2, 0, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 0.2800,  0.4716,  0.5679, -0.9794],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([288, 4])
Iteration :  1
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 288])
size of new_beam_h_S: torch.Size([1, 288, 4])
size of new_beam_logits: torch.Size([1, 288, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 0.8792, 1.0000, 0.8792, 1.0000]])
scores: tensor([0.6955, 0.6955, 0.2654, 0.6955, 0.6955, 0.6955, 0.6955, 0.6955, 0.6955,
        0.2654, 0.2654, 0.2654, 0.0391, 0.6955, 0.0391, 0.2654])
new_beam_scores: tensor([[1.6955, 1.6955, 1.2654, 1.6955, 1.6955, 1.6955, 1.6955, 1.6955, 1.6955,
         1.2654, 1.2654, 1.2654, 0.9183, 1.6955, 0.9183, 1.2654]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 288, 4])
new_beam_h_S size: torch.Size([1, 288, 4])
sorted_scores: tensor([[1.6955, 1.6955, 1.2654, 1.6955, 1.6955, 1.6955, 1.6955, 1.6955, 1.6955,
         1.2654, 1.2654, 1.2654, 0.9183, 1.6955, 0.9183, 1.2654]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 288])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 0.2800,  0.4716,  0.5679, -0.9794],
        [-1.6655, -0.9039,  1.9112, -0.2528],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([288, 4])
Iteration :  2
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 288])
size of new_beam_h_S: torch.Size([1, 288, 4])
size of new_beam_logits: torch.Size([1, 288, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999,
         0.9999, 0.9999, 0.9999, 1.0000, 0.9999, 1.0000, 0.9999]])
scores: tensor([1.6955, 1.6955, 1.2654, 1.6955, 1.6955, 1.6955, 1.6955, 1.6955, 1.6955,
        1.2654, 1.2654, 1.2654, 0.9183, 1.6955, 0.9183, 1.2654])
new_beam_scores: tensor([[2.6954, 2.6954, 2.2653, 2.6954, 2.6954, 2.6954, 2.6954, 2.6954, 2.6954,
         2.2653, 2.2653, 2.2653, 1.9182, 2.6954, 1.9182, 2.2653]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 288, 4])
new_beam_h_S size: torch.Size([1, 288, 4])
sorted_scores: tensor([[2.6954, 2.6954, 2.2653, 2.6954, 2.6954, 2.6954, 2.6954, 2.6954, 2.6954,
         2.2653, 2.2653, 2.2653, 1.9182, 2.6954, 1.9182, 2.2653]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 288])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 0.2800,  0.4716,  0.5679, -0.9794],
        [-1.6655, -0.9039,  1.9112, -0.2528],
        [-0.3462, -1.0009, -0.2575,  0.6879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([288, 4])
Iteration :  3
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 288])
size of new_beam_h_S: torch.Size([1, 288, 4])
size of new_beam_logits: torch.Size([1, 288, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([2.6954, 2.6954, 2.2653, 2.6954, 2.6954, 2.6954, 2.6954, 2.6954, 2.6954,
        2.2653, 2.2653, 2.2653, 1.9182, 2.6954, 1.9182, 2.2653])
new_beam_scores: tensor([[3.6954, 3.6954, 3.2653, 3.6954, 3.6954, 3.6954, 3.6954, 3.6954, 3.6954,
         3.2653, 3.2653, 3.2653, 2.9182, 3.6954, 2.9182, 3.2653]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 288, 4])
new_beam_h_S size: torch.Size([1, 288, 4])
sorted_scores: tensor([[3.6954, 3.6954, 3.2653, 3.6954, 3.6954, 3.6954, 3.6954, 3.6954, 3.6954,
         3.2653, 3.2653, 3.2653, 2.9182, 3.6954, 2.9182, 3.2653]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 288])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 0.2800,  0.4716,  0.5679, -0.9794],
        [-1.6655, -0.9039,  1.9112, -0.2528],
        [-0.3462, -1.0009, -0.2575,  0.6879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([288, 4])
Iteration :  4
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [3],
        [3],
        [2],
        [2],
        [3],
        [2],
        [2],
        [3],
        [2],
        [3],
        [3],
        [3],
        [2],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 288])
size of new_beam_h_S: torch.Size([1, 288, 4])
size of new_beam_logits: torch.Size([1, 288, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.6801, 0.3199, 0.7498, 0.6801, 0.6801, 0.3199, 0.6801, 0.6801, 0.3199,
         0.2502, 0.7498, 0.7498, 0.9835, 0.6801, 0.9835, 0.7498]])
scores: tensor([3.6954, 3.6954, 3.2653, 3.6954, 3.6954, 3.6954, 3.6954, 3.6954, 3.6954,
        3.2653, 3.2653, 3.2653, 2.9182, 3.6954, 2.9182, 3.2653])
new_beam_scores: tensor([[4.3755, 4.0153, 4.0151, 4.3755, 4.3755, 4.0153, 4.3755, 4.3755, 4.0153,
         3.5155, 4.0151, 4.0151, 3.9018, 4.3755, 3.9018, 4.0151]])
new_beam seq: tensor([[2, 3, 3, 2, 2, 3, 2, 2, 3, 2, 3, 3, 3, 2, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 288, 4])
new_beam_h_S size: torch.Size([1, 288, 4])
sorted_scores: tensor([[4.3755, 4.0153, 4.0151, 4.3755, 4.3755, 4.0153, 4.3755, 4.3755, 4.0153,
         3.5155, 4.0151, 4.0151, 3.9018, 4.3755, 3.9018, 4.0151]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 288])
new_beam_seq_sorted reshaped: tensor([2, 3, 3, 2, 2, 3, 2, 2, 3, 2, 3, 3, 3, 2, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 3, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 3, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 0.2800,  0.4716,  0.5679, -0.9794],
        [-1.6655, -0.9039,  1.9112, -0.2528],
        [-0.3462, -1.0009, -0.2575,  0.6879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([288, 4])
Iteration :  5
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 288])
size of new_beam_h_S: torch.Size([1, 288, 4])
size of new_beam_logits: torch.Size([1, 288, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([4.3755, 4.0153, 4.0151, 4.3755, 4.3755, 4.0153, 4.3755, 4.3755, 4.0153,
        3.5155, 4.0151, 4.0151, 3.9018, 4.3755, 3.9018, 4.0151])
new_beam_scores: tensor([[5.3755, 5.0153, 5.0151, 5.3755, 5.3755, 5.0153, 5.3755, 5.3755, 5.0153,
         4.5155, 5.0151, 5.0151, 4.9018, 5.3755, 4.9018, 5.0151]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 288, 4])
new_beam_h_S size: torch.Size([1, 288, 4])
sorted_scores: tensor([[5.3755, 5.0153, 5.0151, 5.3755, 5.3755, 5.0153, 5.3755, 5.3755, 5.0153,
         4.5155, 5.0151, 5.0151, 4.9018, 5.3755, 4.9018, 5.0151]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 288])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 3, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 3, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 3, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 3, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 0.2800,  0.4716,  0.5679, -0.9794],
        [-1.6655, -0.9039,  1.9112, -0.2528],
        [-0.3462, -1.0009, -0.2575,  0.6879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([288, 4])
Iteration :  6
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [0],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 288])
size of new_beam_h_S: torch.Size([1, 288, 4])
size of new_beam_logits: torch.Size([1, 288, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 0.9988, 0.9915, 1.0000, 1.0000, 0.9988, 1.0000, 1.0000, 0.9988,
         0.9999, 0.9915, 0.9915, 0.3500, 1.0000, 0.6424, 0.9915]])
scores: tensor([5.3755, 5.0153, 5.0151, 5.3755, 5.3755, 5.0153, 5.3755, 5.3755, 5.0153,
        4.5155, 5.0151, 5.0151, 4.9018, 5.3755, 4.9018, 5.0151])
new_beam_scores: tensor([[6.3755, 6.0141, 6.0065, 6.3755, 6.3755, 6.0141, 6.3755, 6.3755, 6.0141,
         5.5153, 6.0065, 6.0065, 5.2517, 6.3755, 5.5441, 6.0065]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 288, 4])
new_beam_h_S size: torch.Size([1, 288, 4])
sorted_scores: tensor([[6.3755, 6.0141, 6.0065, 6.3755, 6.3755, 6.0141, 6.3755, 6.3755, 6.0141,
         5.5153, 6.0065, 6.0065, 5.2517, 6.3755, 5.5441, 6.0065]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 288])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 3, 3, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 3, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 3, 3, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 3, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 3, 3, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 2, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 3, 3, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 0.2800,  0.4716,  0.5679, -0.9794],
        [-1.6655, -0.9039,  1.9112, -0.2528],
        [-0.3462, -1.0009, -0.2575,  0.6879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([288, 4])
Iteration :  7
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [2],
        [0],
        [0],
        [2],
        [0],
        [0],
        [0],
        [0],
        [0],
        [2],
        [2],
        [0],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 288])
size of new_beam_h_S: torch.Size([1, 288, 4])
size of new_beam_logits: torch.Size([1, 288, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9975, 0.8480, 0.7680, 0.9975, 0.9975, 0.1504, 0.9975, 0.9975, 0.8480,
         0.9917, 0.2240, 0.7680, 0.9156, 0.9975, 0.2869, 0.7680]])
scores: tensor([6.3755, 6.0141, 6.0065, 6.3755, 6.3755, 6.0141, 6.3755, 6.3755, 6.0141,
        5.5153, 6.0065, 6.0065, 5.2517, 6.3755, 5.5441, 6.0065])
new_beam_scores: tensor([[7.3730, 6.8620, 6.7745, 7.3730, 7.3730, 6.1645, 7.3730, 7.3730, 6.8620,
         6.5071, 6.2305, 6.7745, 6.1673, 7.3730, 5.8311, 6.7745]])
new_beam seq: tensor([[0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 2, 2, 0, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 288, 4])
new_beam_h_S size: torch.Size([1, 288, 4])
sorted_scores: tensor([[7.3730, 6.8620, 6.7745, 7.3730, 7.3730, 6.1645, 7.3730, 7.3730, 6.8620,
         6.5071, 6.2305, 6.7745, 6.1673, 7.3730, 5.8311, 6.7745]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 288])
new_beam_seq_sorted reshaped: tensor([0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 2, 2, 0, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 3, 3, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 3, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 3, 3, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 3, 1,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 3, 3, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 2, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 3, 3, 3, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 1, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 0.2800,  0.4716,  0.5679, -0.9794],
        [-1.6655, -0.9039,  1.9112, -0.2528],
        [-0.3462, -1.0009, -0.2575,  0.6879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([288, 4])
Iteration :  8
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [0],
        [0],
        [1],
        [1],
        [0],
        [1],
        [1],
        [0],
        [1],
        [0],
        [0],
        [0],
        [1],
        [2],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 288])
size of new_beam_h_S: torch.Size([1, 288, 4])
size of new_beam_logits: torch.Size([1, 288, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9047, 0.9844, 0.9989, 0.9047, 0.9047, 0.9940, 0.9047, 0.9047, 0.9844,
         0.5343, 0.9953, 0.9989, 0.9709, 0.9047, 0.9956, 0.9989]])
scores: tensor([7.3730, 6.8620, 6.7745, 7.3730, 7.3730, 6.1645, 7.3730, 7.3730, 6.8620,
        6.5071, 6.2305, 6.7745, 6.1673, 7.3730, 5.8311, 6.7745])
new_beam_scores: tensor([[8.2776, 7.8465, 7.7734, 8.2776, 8.2776, 7.1585, 8.2776, 8.2776, 7.8465,
         7.0413, 7.2258, 7.7734, 7.1382, 8.2776, 6.8267, 7.7734]])
new_beam seq: tensor([[1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 2, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 288, 4])
new_beam_h_S size: torch.Size([1, 288, 4])
sorted_scores: tensor([[8.2776, 7.8465, 7.7734, 8.2776, 8.2776, 7.1585, 8.2776, 8.2776, 7.8465,
         7.0413, 7.2258, 7.7734, 7.1382, 8.2776, 6.8267, 7.7734]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 288])
new_beam_seq_sorted reshaped: tensor([1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 2, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 3, 3, 2, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 3, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 3, 3, 2, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 3, 1,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 3, 3, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 2, 1,
        2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 3, 3, 3, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1,
        2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 1, 0, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 0.2800,  0.4716,  0.5679, -0.9794],
        [-1.6655, -0.9039,  1.9112, -0.2528],
        [-0.3462, -1.0009, -0.2575,  0.6879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([288, 4])
Iteration :  9
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 288])
size of new_beam_h_S: torch.Size([1, 288, 4])
size of new_beam_logits: torch.Size([1, 288, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000]])
scores: tensor([8.2776, 7.8465, 7.7734, 8.2776, 8.2776, 7.1585, 8.2776, 8.2776, 7.8465,
        7.0413, 7.2258, 7.7734, 7.1382, 8.2776, 6.8267, 7.7734])
new_beam_scores: tensor([[9.2776, 8.8465, 8.7734, 9.2776, 9.2776, 8.1585, 9.2776, 9.2776, 8.8465,
         8.0413, 8.2258, 8.7734, 8.1382, 9.2776, 7.8266, 8.7734]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 288, 4])
new_beam_h_S size: torch.Size([1, 288, 4])
sorted_scores: tensor([[9.2776, 8.8465, 8.7734, 9.2776, 9.2776, 8.1585, 9.2776, 9.2776, 8.8465,
         8.0413, 8.2258, 8.7734, 8.1382, 9.2776, 7.8266, 8.7734]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 288])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 3, 1,
        2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 3, 1,
        2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 2, 1,
        2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1,
        2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 1, 0, 2, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 0.2800,  0.4716,  0.5679, -0.9794],
        [-1.6655, -0.9039,  1.9112, -0.2528],
        [-0.3462, -1.0009, -0.2575,  0.6879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([288, 4])
Iteration :  10
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 288])
size of new_beam_h_S: torch.Size([1, 288, 4])
size of new_beam_logits: torch.Size([1, 288, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([9.2776, 8.8465, 8.7734, 9.2776, 9.2776, 8.1585, 9.2776, 9.2776, 8.8465,
        8.0413, 8.2258, 8.7734, 8.1382, 9.2776, 7.8266, 8.7734])
new_beam_scores: tensor([[10.2776,  9.8465,  9.7734, 10.2776, 10.2776,  9.1585, 10.2776, 10.2776,
          9.8465,  9.0413,  9.2258,  9.7734,  9.1382, 10.2776,  8.8266,  9.7734]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 288, 4])
new_beam_h_S size: torch.Size([1, 288, 4])
sorted_scores: tensor([[10.2776,  9.8465,  9.7734, 10.2776, 10.2776,  9.1585, 10.2776, 10.2776,
          9.8465,  9.0413,  9.2258,  9.7734,  9.1382, 10.2776,  8.8266,  9.7734]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 288])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 3, 1,
        2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 3, 1,
        2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 2, 1,
        2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1,
        2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 1, 0, 2, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 0.2800,  0.4716,  0.5679, -0.9794],
        [-1.6655, -0.9039,  1.9112, -0.2528],
        [-0.3462, -1.0009, -0.2575,  0.6879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([288, 4])
Iteration :  11
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [3],
        [3],
        [0],
        [3],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 288])
size of new_beam_h_S: torch.Size([1, 288, 4])
size of new_beam_logits: torch.Size([1, 288, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9970, 0.9682, 0.7034, 0.9970, 0.9970, 0.9519, 0.9970, 0.9970, 0.9682,
         0.9555, 0.8331, 0.2966, 0.9286, 0.9970, 0.9908, 0.7034]])
scores: tensor([10.2776,  9.8465,  9.7734, 10.2776, 10.2776,  9.1585, 10.2776, 10.2776,
         9.8465,  9.0413,  9.2258,  9.7734,  9.1382, 10.2776,  8.8266,  9.7734])
new_beam_scores: tensor([[11.2746, 10.8147, 10.4768, 11.2746, 11.2746, 10.1104, 11.2746, 11.2746,
         10.8147,  9.9968, 10.0589, 10.0700, 10.0668, 11.2746,  9.8174, 10.4768]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 3, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 288, 4])
new_beam_h_S size: torch.Size([1, 288, 4])
sorted_scores: tensor([[11.2746, 10.8147, 10.4768, 11.2746, 11.2746, 10.1104, 11.2746, 11.2746,
         10.8147,  9.9968, 10.0589, 10.0700, 10.0668, 11.2746,  9.8174, 10.4768]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 288])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 3, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 3, 1,
        2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 3, 1,
        2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 2, 1,
        2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 3, 0, 0, 0, 0, 0, 0,
        0, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 3, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1,
        2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 1, 0, 2, 2, 1, 0, 3,
        0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 0.2800,  0.4716,  0.5679, -0.9794],
        [-1.6655, -0.9039,  1.9112, -0.2528],
        [-0.3462, -1.0009, -0.2575,  0.6879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([288, 4])
Iteration :  12
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [3],
        [2],
        [3],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 288])
size of new_beam_h_S: torch.Size([1, 288, 4])
size of new_beam_logits: torch.Size([1, 288, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 0.9999, 0.9900, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 0.9999,
         0.9996, 0.9810, 0.9824, 0.8339, 1.0000, 0.9691, 0.9900]])
scores: tensor([11.2746, 10.8147, 10.4768, 11.2746, 11.2746, 10.1104, 11.2746, 11.2746,
        10.8147,  9.9968, 10.0589, 10.0700, 10.0668, 11.2746,  9.8174, 10.4768])
new_beam_scores: tensor([[12.2746, 11.8146, 11.4669, 12.2746, 12.2746, 11.1103, 12.2746, 12.2746,
         11.8146, 10.9964, 11.0399, 11.0525, 10.9007, 12.2746, 10.7865, 11.4669]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 288, 4])
new_beam_h_S size: torch.Size([1, 288, 4])
sorted_scores: tensor([[12.2746, 11.8146, 11.4669, 12.2746, 12.2746, 11.1103, 12.2746, 12.2746,
         11.8146, 10.9964, 11.0399, 11.0525, 10.9007, 12.2746, 10.7865, 11.4669]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 288])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 2, 2, 3, 3, 3, 1,
        2, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0,
        2, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0,
        2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 2, 2, 3, 3, 3, 1,
        2, 2, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0,
        2, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0,
        2, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 1, 2, 3, 3, 2, 1,
        2, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0,
        2, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 3, 2, 0, 0, 0, 0, 0,
        0, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 3, 3, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1,
        2, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 1, 0, 2, 2, 1, 0, 3,
        3, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 0.2800,  0.4716,  0.5679, -0.9794],
        [-1.6655, -0.9039,  1.9112, -0.2528],
        [-0.3462, -1.0009, -0.2575,  0.6879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([288, 4])
Iteration :  13
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 288])
size of new_beam_h_S: torch.Size([1, 288, 4])
size of new_beam_logits: torch.Size([1, 288, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([12.2746, 11.8146, 11.4669, 12.2746, 12.2746, 11.1103, 12.2746, 12.2746,
        11.8146, 10.9964, 11.0399, 11.0525, 10.9007, 12.2746, 10.7865, 11.4669])
new_beam_scores: tensor([[13.2746, 12.8146, 12.4669, 13.2746, 13.2746, 12.1103, 13.2746, 13.2746,
         12.8146, 11.9964, 12.0399, 12.0525, 11.9007, 13.2746, 11.7865, 12.4669]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 288, 4])
new_beam_h_S size: torch.Size([1, 288, 4])
sorted_scores: tensor([[13.2746, 12.8146, 12.4669, 13.2746, 13.2746, 12.1103, 13.2746, 13.2746,
         12.8146, 11.9964, 12.0399, 12.0525, 11.9007, 13.2746, 11.7865, 12.4669]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 288])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 2, 2, 3, 3, 3, 1,
        2, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0,
        2, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0,
        2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 2, 2, 3, 3, 3, 1,
        2, 2, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0,
        2, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0,
        2, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 1, 2, 3, 3, 2, 1,
        2, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0,
        2, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 3, 2, 0, 0, 0, 0, 0,
        0, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 3, 3, 0, 0, 0, 0, 0, 2, 2, 3, 3, 2, 1,
        2, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 1, 0, 2, 2, 1, 0, 3,
        3, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 0.2800,  0.4716,  0.5679, -0.9794],
        [-1.6655, -0.9039,  1.9112, -0.2528],
        [-0.3462, -1.0009, -0.2575,  0.6879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([288, 4])
Iteration :  14
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 288])
size of new_beam_h_S: torch.Size([1, 288, 4])
size of new_beam_logits: torch.Size([1, 288, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([13.2746, 12.8146, 12.4669, 13.2746, 13.2746, 12.1103, 13.2746, 13.2746,
        12.8146, 11.9964, 12.0399, 12.0525, 11.9007, 13.2746, 11.7865, 12.4669])
new_beam_scores: tensor([[14.2746, 13.8146, 13.4669, 14.2746, 14.2746, 13.1103, 14.2746, 14.2746,
         13.8146, 12.9964, 13.0399, 13.0525, 12.9007, 14.2746, 12.7865, 13.4669]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 288, 4])
new_beam_h_S size: torch.Size([1, 288, 4])
sorted_scores: tensor([[14.2746, 13.8146, 13.4669, 14.2746, 14.2746, 13.1103, 14.2746, 14.2746,
         13.8146, 12.9964, 13.0399, 13.0525, 12.9007, 14.2746, 12.7865, 13.4669]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 288])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0, 2, 2, 3, 3, 3, 1,
        2, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0,
        2, 0, 1, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0,
        2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0, 2, 2, 3, 3, 3, 1,
        2, 2, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0,
        2, 0, 1, 0, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0,
        2, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0, 1, 2, 3, 3, 2, 1,
        2, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0,
        2, 0, 1, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 3, 2, 0, 1, 0, 0, 0,
        0, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 3, 3, 0, 1, 0, 0, 0, 2, 2, 3, 3, 2, 1,
        2, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0, 0, 2, 3, 3, 3, 1, 0, 2, 2, 1, 0, 3,
        3, 0, 1, 0, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 0.2800,  0.4716,  0.5679, -0.9794],
        [-1.6655, -0.9039,  1.9112, -0.2528],
        [-0.3462, -1.0009, -0.2575,  0.6879],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([288, 4])
Iteration :  15
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [2],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [2],
        [2],
        [2],
        [3],
        [1],
        [3],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 288])
size of new_beam_h_S: torch.Size([1, 288, 4])
size of new_beam_logits: torch.Size([1, 288, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([14.2746, 13.8146, 13.4669, 14.2746, 14.2746, 13.1103, 14.2746, 14.2746,
        13.8146, 12.9964, 13.0399, 13.0525, 12.9007, 14.2746, 12.7865, 13.4669])
new_beam_scores: tensor([[15.2746, 14.8146, 14.4669, 15.2746, 15.2746, 14.1103, 15.2746, 15.2746,
         14.8146, 13.9964, 14.0399, 14.0525, 13.9007, 15.2746, 13.7865, 14.4669]])
new_beam seq: tensor([[1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 1, 3, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 288, 4])
new_beam_h_S size: torch.Size([1, 288, 4])
sorted_scores: tensor([[15.2746, 14.8146, 14.4669, 15.2746, 15.2746, 14.1103, 15.2746, 15.2746,
         14.8146, 13.9964, 14.0399, 14.0525, 13.9007, 15.2746, 13.7865, 14.4669]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 288])
new_beam_seq_sorted reshaped: tensor([1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 1, 3, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 0, 0, 2, 2, 3, 3, 3, 1,
        2, 0, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0,
        2, 0, 1, 2, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 0, 0,
        2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 0, 0, 2, 2, 3, 3, 3, 1,
        2, 2, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0,
        2, 0, 1, 1, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 0, 0,
        2, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0, 1, 2, 3, 3, 2, 1,
        2, 0, 1, 1, 0, 0, 2, 0, 1, 2, 0, 0, 1, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0,
        2, 0, 1, 2, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 3, 2, 0, 1, 2, 0, 0,
        0, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 3, 3, 0, 1, 3, 0, 0, 2, 2, 3, 3, 2, 1,
        2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 0, 0, 0, 2, 3, 3, 3, 1, 0, 2, 2, 1, 0, 3,
        3, 0, 1, 3, 0, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 0.2800,  0.4716,  0.5679, -0.9794],
        [-1.6655, -0.9039,  1.9112, -0.2528],
        [-0.3462, -1.0009, -0.2575,  0.6879],
        ...,
        [-1.2992, -0.9348,  3.8085, -0.9015],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([288, 4])
Iteration :  16
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 288])
size of new_beam_h_S: torch.Size([1, 288, 4])
size of new_beam_logits: torch.Size([1, 288, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([15.2746, 14.8146, 14.4669, 15.2746, 15.2746, 14.1103, 15.2746, 15.2746,
        14.8146, 13.9964, 14.0399, 14.0525, 13.9007, 15.2746, 13.7865, 14.4669])
new_beam_scores: tensor([[16.2746, 15.8146, 15.4669, 16.2746, 16.2746, 15.1103, 16.2746, 16.2746,
         15.8146, 14.9964, 15.0399, 15.0525, 14.9007, 16.2746, 14.7865, 15.4669]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 288, 4])
new_beam_h_S size: torch.Size([1, 288, 4])
sorted_scores: tensor([[16.2746, 15.8146, 15.4669, 16.2746, 16.2746, 15.1103, 16.2746, 16.2746,
         15.8146, 14.9964, 15.0399, 15.0525, 14.9007, 16.2746, 14.7865, 15.4669]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 288])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 2, 0, 2, 2, 3, 3, 3, 1,
        2, 0, 0, 1, 0, 0, 2, 0, 1, 1, 2, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0,
        2, 0, 1, 2, 2, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 2, 0,
        2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 2, 0, 2, 2, 3, 3, 3, 1,
        2, 2, 0, 1, 0, 0, 2, 0, 1, 1, 2, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0,
        2, 0, 1, 1, 2, 0, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 2, 0,
        2, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0, 2, 0, 1, 1, 2, 0, 1, 2, 3, 3, 2, 1,
        2, 0, 1, 1, 0, 0, 2, 0, 1, 2, 2, 0, 1, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0,
        2, 0, 1, 2, 2, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 3, 2, 0, 1, 2, 2, 0,
        0, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 3, 3, 0, 1, 3, 2, 0, 2, 2, 3, 3, 2, 1,
        2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 2, 0, 0, 2, 3, 3, 3, 1, 0, 2, 2, 1, 0, 3,
        3, 0, 1, 3, 2, 0, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0, 2, 0, 1, 2, 2, 0],
       dtype=torch.int32)
logits: tensor([[ 0.2800,  0.4716,  0.5679, -0.9794],
        [-1.6655, -0.9039,  1.9112, -0.2528],
        [-0.3462, -1.0009, -0.2575,  0.6879],
        ...,
        [-1.2992, -0.9348,  3.8085, -0.9015],
        [-0.8509, -1.1674,  3.1115, -0.8634],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([288, 4])
Iteration :  17
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 288])
size of new_beam_h_S: torch.Size([1, 288, 4])
size of new_beam_logits: torch.Size([1, 288, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([16.2746, 15.8146, 15.4669, 16.2746, 16.2746, 15.1103, 16.2746, 16.2746,
        15.8146, 14.9964, 15.0399, 15.0525, 14.9007, 16.2746, 14.7865, 15.4669])
new_beam_scores: tensor([[17.2746, 16.8146, 16.4669, 17.2746, 17.2746, 16.1103, 17.2746, 17.2746,
         16.8146, 15.9964, 16.0399, 16.0525, 15.9007, 17.2746, 15.7865, 16.4669]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 288, 4])
new_beam_h_S size: torch.Size([1, 288, 4])
sorted_scores: tensor([[17.2746, 16.8146, 16.4669, 17.2746, 17.2746, 16.1103, 17.2746, 17.2746,
         16.8146, 15.9964, 16.0399, 16.0525, 15.9007, 17.2746, 15.7865, 16.4669]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 288])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 2, 1, 2, 2, 3, 3, 3, 1,
        2, 0, 0, 1, 0, 0, 2, 0, 1, 1, 2, 1, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0,
        2, 0, 1, 2, 2, 1, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 2, 1,
        2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 2, 1, 2, 2, 3, 3, 3, 1,
        2, 2, 0, 1, 0, 0, 2, 0, 1, 1, 2, 1, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0,
        2, 0, 1, 1, 2, 1, 2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 2, 1,
        2, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0, 2, 0, 1, 1, 2, 1, 1, 2, 3, 3, 2, 1,
        2, 0, 1, 1, 0, 0, 2, 0, 1, 2, 2, 1, 1, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0,
        2, 0, 1, 2, 2, 1, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 3, 2, 0, 1, 2, 2, 1,
        0, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 3, 3, 0, 1, 3, 2, 1, 2, 2, 3, 3, 2, 1,
        2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 2, 1, 0, 2, 3, 3, 3, 1, 0, 2, 2, 1, 0, 3,
        3, 0, 1, 3, 2, 1, 1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0, 2, 0, 1, 2, 2, 1],
       dtype=torch.int32)
logits: tensor([[ 0.2800,  0.4716,  0.5679, -0.9794],
        [-1.6655, -0.9039,  1.9112, -0.2528],
        [-0.3462, -1.0009, -0.2575,  0.6879],
        ...,
        [-1.2992, -0.9348,  3.8085, -0.9015],
        [-0.8509, -1.1674,  3.1115, -0.8634],
        [-0.6670,  2.6545,  0.1364, -1.2337]])
h_S size: torch.Size([288, 4])
tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size expanded indices: torch.Size([1, 16, 18])
tensor([[[2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 2, 1],
         [2, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0, 2, 0, 1, 1, 2, 1],
         [1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0, 2, 0, 1, 2, 2, 1],
         [2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 2, 1],
         [2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 2, 1],
         [2, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0, 2, 0, 1, 1, 2, 1],
         [2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 2, 1],
         [2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 2, 1],
         [2, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0, 2, 0, 1, 1, 2, 1],
         [1, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 2, 2, 1],
         [1, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0, 2, 0, 1, 2, 2, 1],
         [1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 3, 2, 0, 1, 2, 2, 1],
         [0, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 3, 3, 0, 1, 3, 2, 1],
         [2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 2, 1],
         [0, 2, 3, 3, 3, 1, 0, 2, 2, 1, 0, 3, 3, 0, 1, 3, 2, 1],
         [1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0, 2, 0, 1, 2, 2, 1]]],
       dtype=torch.int32)
final_scores: tensor([17.2746, 16.8146, 16.4669, 17.2746, 17.2746, 16.1103, 17.2746, 17.2746,
        16.8146, 15.9964, 16.0399, 16.0525, 15.9007, 17.2746, 15.7865, 16.4669])
final_seq: tensor([[2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 2, 1],
        [2, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0, 2, 0, 1, 1, 2, 1],
        [1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0, 2, 0, 1, 2, 2, 1],
        [2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 2, 1],
        [2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 2, 1],
        [2, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0, 2, 0, 1, 1, 2, 1],
        [2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 2, 1],
        [2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 2, 1],
        [2, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0, 2, 0, 1, 1, 2, 1],
        [1, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 2, 2, 1],
        [1, 2, 3, 3, 3, 1, 2, 0, 0, 1, 0, 0, 2, 0, 1, 2, 2, 1],
        [1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 3, 2, 0, 1, 2, 2, 1],
        [0, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 3, 3, 0, 1, 3, 2, 1],
        [2, 2, 3, 3, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 2, 1],
        [0, 2, 3, 3, 3, 1, 0, 2, 2, 1, 0, 3, 3, 0, 1, 3, 2, 1],
        [1, 2, 3, 3, 3, 1, 2, 2, 0, 1, 0, 0, 2, 0, 1, 2, 2, 1]],
       dtype=torch.int32)
final_logits: tensor([[[ 0.2800,  0.4716,  0.5679, -0.9794],
         [-1.6655, -0.9039,  1.9112, -0.2528],
         [-0.3462, -1.0009, -0.2575,  0.6879],
         ...,
         [-1.1514,  3.8122, -0.8721, -1.0854],
         [-0.6143, -0.6738,  2.3706, -1.1825],
         [-0.6319,  2.5450,  0.1094, -1.3226]],

        [[ 0.2800,  0.4716,  0.5679, -0.9794],
         [-1.6655, -0.9039,  1.9112, -0.2528],
         [-0.3462, -1.0009, -0.2575,  0.6879],
         ...,
         [-1.0238,  4.0175, -0.7315, -0.9869],
         [-0.3581, -0.6941,  2.3040, -0.9465],
         [-0.5493,  2.9028, -0.0112, -1.2418]],

        [[ 0.2800,  0.4716,  0.5679, -0.9794],
         [-1.5115, -0.4558,  1.2618, -0.1368],
         [-0.4426, -1.0603, -0.1285,  0.7617],
         ...,
         [-1.2992, -0.9348,  3.8085, -0.9015],
         [-0.8509, -1.1674,  3.1115, -0.8634],
         [-0.6670,  2.6545,  0.1364, -1.2337]],

        ...,

        [[ 0.2800,  0.4716,  0.5679, -0.9794],
         [-1.6655, -0.9039,  1.9112, -0.2528],
         [-0.3462, -1.0009, -0.2575,  0.6879],
         ...,
         [-1.1514,  3.8122, -0.8721, -1.0854],
         [-0.6143, -0.6738,  2.3706, -1.1825],
         [-0.6319,  2.5450,  0.1094, -1.3226]],

        [[ 0.2800,  0.4716,  0.5679, -0.9794],
         [-1.2345, -0.4602,  0.5677,  0.3692],
         [-0.2242, -1.0849, -0.2721,  0.9794],
         ...,
         [-1.7463, -1.7211, -1.3638,  3.0780],
         [-0.5816, -0.9050,  2.5656, -0.2958],
         [-0.6197,  2.0282,  0.5020, -0.9189]],

        [[ 0.2800,  0.4716,  0.5679, -0.9794],
         [-1.5115, -0.4558,  1.2618, -0.1368],
         [-0.4426, -1.0603, -0.1285,  0.7617],
         ...,
         [-1.2992, -0.9348,  3.8085, -0.9015],
         [-0.8509, -1.1674,  3.1115, -0.8634],
         [-0.6670,  2.6545,  0.1364, -1.2337]]])
Coords: 35
Sequence: GGAACCGGUGCGCAUAACCACCUCAGUGCGAGCAA
Len sequence: 35
Detected base pairs: [[131 451]
 [154 431]
 [177 409]
 [220 619]
 [240 687]
 [263 664]
 [305 556]
 [369 576]
 [389 533]]
Secondary structure: '......[[[.{((.{..((]]]...)}).}.))..'
Sequence length: 35
Number of residues: 35
Chain IDs: ['A']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'OP3' 'P']
...........((....((......).)...))..
Batch size:  (35, 35)
Number of nodes:  35
edge_index: tensor([[[ 0,  0,  0,  ..., 34, 34, 34],
         [ 1,  2,  3,  ..., 31, 32, 33]],

        [[ 0,  0,  0,  ..., 34, 34, 34],
         [ 1,  2,  3,  ..., 31, 32, 33]],

        [[ 0,  0,  0,  ..., 34, 34, 34],
         [ 1,  2,  3,  ..., 31, 32, 33]],

        ...,

        [[ 0,  0,  0,  ..., 34, 34, 34],
         [ 1,  2,  3,  ..., 31, 32, 33]],

        [[ 0,  0,  0,  ..., 34, 34, 34],
         [ 1,  2,  3,  ..., 31, 32, 33]],

        [[ 0,  0,  0,  ..., 34, 34, 34],
         [ 1,  2,  3,  ..., 31, 32, 33]]])
offset size: torch.Size([16, 1, 1])
offset: tensor([[[  0]],

        [[ 35]],

        [[ 70]],

        [[105]],

        [[140]],

        [[175]],

        [[210]],

        [[245]],

        [[280]],

        [[315]],

        [[350]],

        [[385]],

        [[420]],

        [[455]],

        [[490]],

        [[525]]])
Iteration :  0
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [1],
        [0],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.8512, 0.8512, 0.8512, 0.8512, 0.8512, 0.8512, 0.8512, 0.8512, 0.8512,
         0.8512, 0.8512, 0.8512, 0.1483, 0.8512, 0.1483, 0.8512]])
scores: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
new_beam_scores: tensor([[0.8512, 0.8512, 0.8512, 0.8512, 0.8512, 0.8512, 0.8512, 0.8512, 0.8512,
         0.8512, 0.8512, 0.8512, 0.1483, 0.8512, 0.1483, 0.8512]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[0.8512, 0.8512, 0.8512, 0.8512, 0.8512, 0.8512, 0.8512, 0.8512, 0.8512,
         0.8512, 0.8512, 0.8512, 0.1483, 0.8512, 0.1483, 0.8512]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  1
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [0],
        [0],
        [3],
        [0],
        [3],
        [3],
        [0],
        [3],
        [3],
        [3],
        [0],
        [0],
        [0],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.3674, 0.3674, 0.5922, 0.5922, 0.3674, 0.5922, 0.3674, 0.3674, 0.5922,
         0.3674, 0.3674, 0.3674, 0.8026, 0.5922, 0.8026, 0.3674]])
scores: tensor([0.8512, 0.8512, 0.8512, 0.8512, 0.8512, 0.8512, 0.8512, 0.8512, 0.8512,
        0.8512, 0.8512, 0.8512, 0.1483, 0.8512, 0.1483, 0.8512])
new_beam_scores: tensor([[1.2186, 1.2186, 1.4434, 1.4434, 1.2186, 1.4434, 1.2186, 1.2186, 1.4434,
         1.2186, 1.2186, 1.2186, 0.9509, 1.4434, 0.9509, 1.2186]])
new_beam seq: tensor([[3, 3, 0, 0, 3, 0, 3, 3, 0, 3, 3, 3, 0, 0, 0, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[1.2186, 1.2186, 1.4434, 1.4434, 1.2186, 1.4434, 1.2186, 1.2186, 1.4434,
         1.2186, 1.2186, 1.2186, 0.9509, 1.4434, 0.9509, 1.2186]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([3, 3, 0, 0, 3, 0, 3, 3, 0, 3, 3, 3, 0, 0, 0, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  2
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [0],
        [0],
        [2],
        [0],
        [2],
        [2],
        [0],
        [0],
        [2],
        [2],
        [2],
        [0],
        [0],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.7328, 0.7328, 0.9731, 0.9731, 0.7328, 0.9731, 0.7328, 0.7328, 0.9731,
         0.1869, 0.7328, 0.7328, 0.0155, 0.9731, 0.9839, 0.0650]])
scores: tensor([1.2186, 1.2186, 1.4434, 1.4434, 1.2186, 1.4434, 1.2186, 1.2186, 1.4434,
        1.2186, 1.2186, 1.2186, 0.9509, 1.4434, 0.9509, 1.2186])
new_beam_scores: tensor([[1.9514, 1.9514, 2.4165, 2.4165, 1.9514, 2.4165, 1.9514, 1.9514, 2.4165,
         1.4055, 1.9514, 1.9514, 0.9664, 2.4165, 1.9348, 1.2836]])
new_beam seq: tensor([[2, 2, 0, 0, 2, 0, 2, 2, 0, 0, 2, 2, 2, 0, 0, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[1.9514, 1.9514, 2.4165, 2.4165, 1.9514, 2.4165, 1.9514, 1.9514, 2.4165,
         1.4055, 1.9514, 1.9514, 0.9664, 2.4165, 1.9348, 1.2836]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([2, 2, 0, 0, 2, 0, 2, 2, 0, 0, 2, 2, 2, 0, 0, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  3
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9956, 0.9956, 0.9996, 0.9996, 0.9956, 0.9996, 0.9956, 0.9956, 0.9996,
         0.9723, 0.9956, 0.9956, 1.0000, 0.9996, 1.0000, 0.5272]])
scores: tensor([1.9514, 1.9514, 2.4165, 2.4165, 1.9514, 2.4165, 1.9514, 1.9514, 2.4165,
        1.4055, 1.9514, 1.9514, 0.9664, 2.4165, 1.9348, 1.2836])
new_beam_scores: tensor([[2.9470, 2.9470, 3.4162, 3.4162, 2.9470, 3.4162, 2.9470, 2.9470, 3.4162,
         2.3778, 2.9470, 2.9470, 1.9664, 3.4162, 2.9348, 1.8108]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[2.9470, 2.9470, 3.4162, 3.4162, 2.9470, 3.4162, 2.9470, 2.9470, 3.4162,
         2.3778, 2.9470, 2.9470, 1.9664, 3.4162, 2.9348, 1.8108]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  4
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.0475, 0.9481, 1.0000, 1.0000, 0.9481, 1.0000, 0.0475, 0.9481, 1.0000,
         0.9997, 0.9481, 0.9481, 0.9994, 1.0000, 1.0000, 0.9569]])
scores: tensor([2.9470, 2.9470, 3.4162, 3.4162, 2.9470, 3.4162, 2.9470, 2.9470, 3.4162,
        2.3778, 2.9470, 2.9470, 1.9664, 3.4162, 2.9348, 1.8108])
new_beam_scores: tensor([[2.9945, 3.8951, 4.4161, 4.4161, 3.8951, 4.4161, 2.9945, 3.8951, 4.4161,
         3.3775, 3.8951, 3.8951, 2.9658, 4.4161, 3.9348, 2.7676]])
new_beam seq: tensor([[1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[2.9945, 3.8951, 4.4161, 4.4161, 3.8951, 4.4161, 2.9945, 3.8951, 4.4161,
         3.3775, 3.8951, 3.8951, 2.9658, 4.4161, 3.9348, 2.7676]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  5
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9838, 0.9992, 0.9995, 0.9995, 0.9992, 0.9995, 0.9838, 0.9992, 0.9995,
         0.9999, 0.9992, 0.9992, 0.9975, 0.9995, 0.9992, 0.9999]])
scores: tensor([2.9945, 3.8951, 4.4161, 4.4161, 3.8951, 4.4161, 2.9945, 3.8951, 4.4161,
        3.3775, 3.8951, 3.8951, 2.9658, 4.4161, 3.9348, 2.7676])
new_beam_scores: tensor([[3.9783, 4.8943, 5.4156, 5.4156, 4.8943, 5.4156, 3.9783, 4.8943, 5.4156,
         4.3774, 4.8943, 4.8943, 3.9633, 5.4156, 4.9340, 3.7675]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[3.9783, 4.8943, 5.4156, 5.4156, 4.8943, 5.4156, 3.9783, 4.8943, 5.4156,
         4.3774, 4.8943, 4.8943, 3.9633, 5.4156, 4.9340, 3.7675]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  6
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([3.9783, 4.8943, 5.4156, 5.4156, 4.8943, 5.4156, 3.9783, 4.8943, 5.4156,
        4.3774, 4.8943, 4.8943, 3.9633, 5.4156, 4.9340, 3.7675])
new_beam_scores: tensor([[4.9783, 5.8943, 6.4156, 6.4156, 5.8943, 6.4156, 4.9783, 5.8943, 6.4156,
         5.3774, 5.8943, 5.8943, 4.9633, 6.4156, 5.9340, 4.7675]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[4.9783, 5.8943, 6.4156, 6.4156, 5.8943, 6.4156, 4.9783, 5.8943, 6.4156,
         5.3774, 5.8943, 5.8943, 4.9633, 6.4156, 5.9340, 4.7675]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  7
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([4.9783, 5.8943, 6.4156, 6.4156, 5.8943, 6.4156, 4.9783, 5.8943, 6.4156,
        5.3774, 5.8943, 5.8943, 4.9633, 6.4156, 5.9340, 4.7675])
new_beam_scores: tensor([[5.9783, 6.8943, 7.4156, 7.4156, 6.8943, 7.4156, 5.9783, 6.8943, 7.4156,
         6.3774, 6.8943, 6.8943, 5.9633, 7.4156, 6.9340, 5.7675]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[5.9783, 6.8943, 7.4156, 7.4156, 6.8943, 7.4156, 5.9783, 6.8943, 7.4156,
         6.3774, 6.8943, 6.8943, 5.9633, 7.4156, 6.9340, 5.7675]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  8
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [2],
        [2],
        [2],
        [2],
        [1],
        [1],
        [1],
        [2],
        [1],
        [1],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9996, 0.9084, 0.8014, 0.8014, 0.0916, 0.8014, 0.9996, 0.9084, 0.1986,
         0.8881, 0.9084, 0.9084, 0.9075, 0.8014, 0.9973, 0.9517]])
scores: tensor([5.9783, 6.8943, 7.4156, 7.4156, 6.8943, 7.4156, 5.9783, 6.8943, 7.4156,
        6.3774, 6.8943, 6.8943, 5.9633, 7.4156, 6.9340, 5.7675])
new_beam_scores: tensor([[6.9779, 7.8026, 8.2170, 8.2170, 6.9859, 8.2170, 6.9779, 7.8026, 7.6142,
         7.2655, 7.8026, 7.8026, 6.8709, 8.2170, 7.9313, 6.7193]])
new_beam seq: tensor([[1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[6.9779, 7.8026, 8.2170, 8.2170, 6.9859, 8.2170, 6.9779, 7.8026, 7.6142,
         7.2655, 7.8026, 7.8026, 6.8709, 8.2170, 7.9313, 6.7193]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  9
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [1],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9999, 1.0000, 1.0000, 1.0000, 0.9992, 1.0000, 0.9999, 1.0000, 0.9998,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999]])
scores: tensor([6.9779, 7.8026, 8.2170, 8.2170, 6.9859, 8.2170, 6.9779, 7.8026, 7.6142,
        7.2655, 7.8026, 7.8026, 6.8709, 8.2170, 7.9313, 6.7193])
new_beam_scores: tensor([[7.9778, 8.8026, 9.2170, 9.2170, 7.9851, 9.2170, 7.9778, 8.8026, 8.6139,
         8.2655, 8.8026, 8.8026, 7.8708, 9.2170, 8.9313, 7.7192]])
new_beam seq: tensor([[0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[7.9778, 8.8026, 9.2170, 9.2170, 7.9851, 9.2170, 7.9778, 8.8026, 8.6139,
         8.2655, 8.8026, 8.8026, 7.8708, 9.2170, 8.9313, 7.7192]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  10
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([7.9778, 8.8026, 9.2170, 9.2170, 7.9851, 9.2170, 7.9778, 8.8026, 8.6139,
        8.2655, 8.8026, 8.8026, 7.8708, 9.2170, 8.9313, 7.7192])
new_beam_scores: tensor([[ 8.9778,  9.8026, 10.2170, 10.2170,  8.9851, 10.2170,  8.9778,  9.8026,
          9.6139,  9.2655,  9.8026,  9.8026,  8.8708, 10.2170,  9.9313,  8.7192]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[ 8.9778,  9.8026, 10.2170, 10.2170,  8.9851, 10.2170,  8.9778,  9.8026,
          9.6139,  9.2655,  9.8026,  9.8026,  8.8708, 10.2170,  9.9313,  8.7192]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  11
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([ 8.9778,  9.8026, 10.2170, 10.2170,  8.9851, 10.2170,  8.9778,  9.8026,
         9.6139,  9.2655,  9.8026,  9.8026,  8.8708, 10.2170,  9.9313,  8.7192])
new_beam_scores: tensor([[ 9.9778, 10.8026, 11.2170, 11.2170,  9.9851, 11.2170,  9.9778, 10.8026,
         10.6139, 10.2655, 10.8026, 10.8026,  9.8708, 11.2170, 10.9313,  9.7192]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[ 9.9778, 10.8026, 11.2170, 11.2170,  9.9851, 11.2170,  9.9778, 10.8026,
         10.6139, 10.2655, 10.8026, 10.8026,  9.8708, 11.2170, 10.9313,  9.7192]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  12
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([ 9.9778, 10.8026, 11.2170, 11.2170,  9.9851, 11.2170,  9.9778, 10.8026,
        10.6139, 10.2655, 10.8026, 10.8026,  9.8708, 11.2170, 10.9313,  9.7192])
new_beam_scores: tensor([[10.9778, 11.8026, 12.2170, 12.2170, 10.9851, 12.2170, 10.9778, 11.8026,
         11.6139, 11.2655, 11.8026, 11.8026, 10.8708, 12.2170, 11.9313, 10.7192]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[10.9778, 11.8026, 12.2170, 12.2170, 10.9851, 12.2170, 10.9778, 11.8026,
         11.6139, 11.2655, 11.8026, 11.8026, 10.8708, 12.2170, 11.9313, 10.7192]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  13
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([10.9778, 11.8026, 12.2170, 12.2170, 10.9851, 12.2170, 10.9778, 11.8026,
        11.6139, 11.2655, 11.8026, 11.8026, 10.8708, 12.2170, 11.9313, 10.7192])
new_beam_scores: tensor([[11.9778, 12.8026, 13.2170, 13.2170, 11.9851, 13.2170, 11.9778, 12.8026,
         12.6139, 12.2655, 12.8026, 12.8026, 11.8708, 13.2170, 12.9313, 11.7192]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[11.9778, 12.8026, 13.2170, 13.2170, 11.9851, 13.2170, 11.9778, 12.8026,
         12.6139, 12.2655, 12.8026, 12.8026, 11.8708, 13.2170, 12.9313, 11.7192]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  14
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([11.9778, 12.8026, 13.2170, 13.2170, 11.9851, 13.2170, 11.9778, 12.8026,
        12.6139, 12.2655, 12.8026, 12.8026, 11.8708, 13.2170, 12.9313, 11.7192])
new_beam_scores: tensor([[12.9778, 13.8026, 14.2170, 14.2170, 12.9851, 14.2170, 12.9778, 13.8026,
         13.6139, 13.2655, 13.8026, 13.8026, 12.8708, 14.2170, 13.9313, 12.7192]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[12.9778, 13.8026, 14.2170, 14.2170, 12.9851, 14.2170, 12.9778, 13.8026,
         13.6139, 13.2655, 13.8026, 13.8026, 12.8708, 14.2170, 13.9313, 12.7192]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  15
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([12.9778, 13.8026, 14.2170, 14.2170, 12.9851, 14.2170, 12.9778, 13.8026,
        13.6139, 13.2655, 13.8026, 13.8026, 12.8708, 14.2170, 13.9313, 12.7192])
new_beam_scores: tensor([[13.9778, 14.8026, 15.2170, 15.2170, 13.9851, 15.2170, 13.9778, 14.8026,
         14.6139, 14.2655, 14.8026, 14.8026, 13.8708, 15.2170, 14.9313, 13.7192]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[13.9778, 14.8026, 15.2170, 15.2170, 13.9851, 15.2170, 13.9778, 14.8026,
         14.6139, 14.2655, 14.8026, 14.8026, 13.8708, 15.2170, 14.9313, 13.7192]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  16
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [1],
        [0],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9962, 0.9971, 0.7659, 0.2341, 0.9887, 0.2341, 0.9962, 0.9971, 0.9406,
         0.9257, 0.9971, 0.9971, 0.9902, 0.7659, 0.9316, 0.9826]])
scores: tensor([13.9778, 14.8026, 15.2170, 15.2170, 13.9851, 15.2170, 13.9778, 14.8026,
        14.6139, 14.2655, 14.8026, 14.8026, 13.8708, 15.2170, 14.9313, 13.7192])
new_beam_scores: tensor([[14.9740, 15.7997, 15.9830, 15.4511, 14.9738, 15.4511, 14.9740, 15.7997,
         15.5545, 15.1912, 15.7997, 15.7997, 14.8610, 15.9830, 15.8629, 14.7017]])
new_beam seq: tensor([[0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[14.9740, 15.7997, 15.9830, 15.4511, 14.9738, 15.4511, 14.9740, 15.7997,
         15.5545, 15.1912, 15.7997, 15.7997, 14.8610, 15.9830, 15.8629, 14.7017]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  17
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([14.9740, 15.7997, 15.9830, 15.4511, 14.9738, 15.4511, 14.9740, 15.7997,
        15.5545, 15.1912, 15.7997, 15.7997, 14.8610, 15.9830, 15.8629, 14.7017])
new_beam_scores: tensor([[15.9740, 16.7997, 16.9830, 16.4511, 15.9738, 16.4511, 15.9740, 16.7997,
         16.5545, 16.1912, 16.7997, 16.7997, 15.8610, 16.9830, 16.8629, 15.7017]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[15.9740, 16.7997, 16.9830, 16.4511, 15.9738, 16.4511, 15.9740, 16.7997,
         16.5545, 16.1912, 16.7997, 16.7997, 15.8610, 16.9830, 16.8629, 15.7017]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0,
        0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1,
        0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  18
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [2],
        [0],
        [0],
        [1],
        [0],
        [1],
        [0],
        [0],
        [0],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.7851, 0.0519, 0.7242, 0.7703, 0.6388, 0.7703, 0.7851, 0.6196, 0.8903,
         0.9490, 0.3285, 0.6196, 0.8151, 0.7242, 0.9911, 0.9914]])
scores: tensor([15.9740, 16.7997, 16.9830, 16.4511, 15.9738, 16.4511, 15.9740, 16.7997,
        16.5545, 16.1912, 16.7997, 16.7997, 15.8610, 16.9830, 16.8629, 15.7017])
new_beam_scores: tensor([[16.7591, 16.8516, 17.7072, 17.2214, 16.6126, 17.2214, 16.7591, 17.4193,
         17.4448, 17.1401, 17.1282, 17.4193, 16.6761, 17.7072, 17.8540, 16.6931]])
new_beam seq: tensor([[1, 2, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[16.7591, 16.8516, 17.7072, 17.2214, 16.6126, 17.2214, 16.7591, 17.4193,
         17.4448, 17.1401, 17.1282, 17.4193, 16.6761, 17.7072, 17.8540, 16.6931]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([1, 2, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0,
        0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1,
        0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  19
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [1],
        [1],
        [1],
        [1],
        [2],
        [2],
        [2],
        [1],
        [2],
        [2],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([16.7591, 16.8516, 17.7072, 17.2214, 16.6126, 17.2214, 16.7591, 17.4193,
        17.4448, 17.1401, 17.1282, 17.4193, 16.6761, 17.7072, 17.8540, 16.6931])
new_beam_scores: tensor([[17.7591, 17.8516, 18.7072, 18.2214, 17.6126, 18.2214, 17.7591, 18.4193,
         18.4448, 18.1401, 18.1282, 18.4193, 17.6761, 18.7072, 18.8540, 17.6931]])
new_beam seq: tensor([[2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[17.7591, 17.8516, 18.7072, 18.2214, 17.6126, 18.2214, 17.7591, 18.4193,
         18.4448, 18.1401, 18.1282, 18.4193, 17.6761, 18.7072, 18.8540, 17.6931]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0,
        0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1,
        1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1,
        0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  20
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([17.7591, 17.8516, 18.7072, 18.2214, 17.6126, 18.2214, 17.7591, 18.4193,
        18.4448, 18.1401, 18.1282, 18.4193, 17.6761, 18.7072, 18.8540, 17.6931])
new_beam_scores: tensor([[18.7591, 18.8516, 19.7072, 19.2214, 18.6126, 19.2214, 18.7591, 19.4193,
         19.4448, 19.1401, 19.1282, 19.4193, 18.6761, 19.7072, 19.8540, 18.6931]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[18.7591, 18.8516, 19.7072, 19.2214, 18.6126, 19.2214, 18.7591, 19.4193,
         19.4448, 19.1401, 19.1282, 19.4193, 18.6761, 19.7072, 19.8540, 18.6931]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0,
        0, 1, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1,
        1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 1, 0, 0, 0, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1,
        0, 0, 0, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  21
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([18.7591, 18.8516, 19.7072, 19.2214, 18.6126, 19.2214, 18.7591, 19.4193,
        19.4448, 19.1401, 19.1282, 19.4193, 18.6761, 19.7072, 19.8540, 18.6931])
new_beam_scores: tensor([[19.7591, 19.8516, 20.7072, 20.2214, 19.6126, 20.2214, 19.7591, 20.4193,
         20.4448, 20.1401, 20.1282, 20.4193, 19.6761, 20.7072, 20.8540, 19.6931]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[19.7591, 19.8516, 20.7072, 20.2214, 19.6126, 20.2214, 19.7591, 20.4193,
         20.4448, 20.1401, 20.1282, 20.4193, 19.6761, 20.7072, 20.8540, 19.6931]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0,
        0, 1, 1, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 1, 1, 2, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1,
        1, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0,
        2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1,
        0, 0, 0, 1, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  22
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [0],
        [0],
        [0],
        [3],
        [3],
        [3],
        [0],
        [3],
        [3],
        [0],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9377, 0.9937, 0.6694, 0.8894, 0.9636, 0.8894, 0.9377, 0.9995, 0.9988,
         0.1866, 0.9892, 0.9995, 0.4251, 0.6694, 0.6867, 0.8774]])
scores: tensor([19.7591, 19.8516, 20.7072, 20.2214, 19.6126, 20.2214, 19.7591, 20.4193,
        20.4448, 20.1401, 20.1282, 20.4193, 19.6761, 20.7072, 20.8540, 19.6931])
new_beam_scores: tensor([[20.6968, 20.8453, 21.3766, 21.1108, 20.5762, 21.1108, 20.6968, 21.4188,
         21.4437, 20.3268, 21.1174, 21.4188, 20.1012, 21.3766, 21.5408, 20.5705]])
new_beam seq: tensor([[3, 3, 3, 0, 0, 0, 3, 3, 3, 0, 3, 3, 0, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[20.6968, 20.8453, 21.3766, 21.1108, 20.5762, 21.1108, 20.6968, 21.4188,
         21.4437, 20.3268, 21.1174, 21.4188, 20.1012, 21.3766, 21.5408, 20.5705]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 0, 0, 0, 3, 3, 3, 0, 3, 3, 0, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 1, 2, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0,
        0, 1, 1, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 1, 1, 2, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1,
        1, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0,
        2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1,
        0, 0, 0, 1, 0, 1, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  23
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9984, 0.9987, 0.9999, 1.0000, 1.0000, 1.0000, 0.9984, 0.9997, 0.9987,
         1.0000, 0.9992, 0.9997, 1.0000, 0.9999, 1.0000, 0.9999]])
scores: tensor([20.6968, 20.8453, 21.3766, 21.1108, 20.5762, 21.1108, 20.6968, 21.4188,
        21.4437, 20.3268, 21.1174, 21.4188, 20.1012, 21.3766, 21.5408, 20.5705])
new_beam_scores: tensor([[21.6952, 21.8440, 22.3764, 22.1108, 21.5762, 22.1108, 21.6952, 22.4184,
         22.4424, 21.3268, 22.1166, 22.4184, 21.1012, 22.3764, 22.5407, 21.5704]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[21.6952, 21.8440, 22.3764, 22.1108, 21.5762, 22.1108, 21.6952, 22.4184,
         22.4424, 21.3268, 22.1166, 22.4184, 21.1012, 22.3764, 22.5407, 21.5704]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 1, 2, 2, 2, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0,
        0, 1, 1, 0, 1, 2, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 1, 1, 2, 1, 0, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1,
        1, 0, 1, 2, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0,
        2, 2, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2,
        1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1,
        0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  24
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([21.6952, 21.8440, 22.3764, 22.1108, 21.5762, 22.1108, 21.6952, 22.4184,
        22.4424, 21.3268, 22.1166, 22.4184, 21.1012, 22.3764, 22.5407, 21.5704])
new_beam_scores: tensor([[22.6952, 22.8440, 23.3764, 23.1108, 22.5762, 23.1108, 22.6952, 23.4184,
         23.4424, 22.3268, 23.1166, 23.4184, 22.1012, 23.3764, 23.5407, 22.5704]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[22.6952, 22.8440, 23.3764, 23.1108, 22.5762, 23.1108, 22.6952, 23.4184,
         23.4424, 22.3268, 23.1166, 23.4184, 22.1012, 23.3764, 23.5407, 22.5704]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 1, 2, 2, 2, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0,
        0, 1, 1, 0, 1, 2, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 1, 1, 2, 1, 0, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1,
        1, 0, 1, 2, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0,
        2, 2, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2,
        1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1,
        0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  25
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 0.9978, 1.0000, 0.9907, 1.0000, 1.0000, 1.0000, 1.0000,
         0.9977, 0.9986, 1.0000, 0.9990, 0.9978, 0.9810, 0.9926]])
scores: tensor([22.6952, 22.8440, 23.3764, 23.1108, 22.5762, 23.1108, 22.6952, 23.4184,
        23.4424, 22.3268, 23.1166, 23.4184, 22.1012, 23.3764, 23.5407, 22.5704])
new_beam_scores: tensor([[23.6952, 23.8440, 24.3742, 24.1108, 23.5669, 24.1108, 23.6952, 24.4184,
         24.4424, 23.3244, 24.1152, 24.4184, 23.1002, 24.3742, 24.5217, 23.5630]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[23.6952, 23.8440, 24.3742, 24.1108, 23.5669, 24.1108, 23.6952, 24.4184,
         24.4424, 23.3244, 24.1152, 24.4184, 23.1002, 24.3742, 24.5217, 23.5630]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 1, 2, 2, 2, 1, 3, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0,
        0, 1, 1, 0, 1, 2, 1, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 1, 1, 2, 1, 0, 3, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1,
        1, 0, 1, 2, 1, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0,
        2, 2, 1, 3, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3, 3, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2,
        1, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3,
        3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1,
        0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  26
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [0],
        [3],
        [0],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9752, 0.9352, 1.0000, 1.0000, 1.0000, 1.0000, 0.9752, 0.9626, 0.1497,
         1.0000, 0.3037, 0.9626, 1.0000, 1.0000, 0.9999, 1.0000]])
scores: tensor([23.6952, 23.8440, 24.3742, 24.1108, 23.5669, 24.1108, 23.6952, 24.4184,
        24.4424, 23.3244, 24.1152, 24.4184, 23.1002, 24.3742, 24.5217, 23.5630])
new_beam_scores: tensor([[24.6703, 24.7792, 25.3742, 25.1108, 24.5669, 25.1108, 24.6703, 25.3810,
         24.5921, 24.3244, 24.4189, 25.3810, 24.1002, 25.3742, 25.5216, 24.5630]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 0, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[24.6703, 24.7792, 25.3742, 25.1108, 24.5669, 25.1108, 24.6703, 25.3810,
         24.5921, 24.3244, 24.4189, 25.3810, 24.1002, 25.3742, 25.5216, 24.5630]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 0, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3,
        0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 1, 2, 2, 2, 1, 3, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0,
        0, 1, 1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 1, 1, 2, 1, 0, 3, 0, 1, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1,
        1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 1, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0,
        2, 2, 1, 3, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3, 3, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2,
        1, 0, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3,
        3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0,
        1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1,
        0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  27
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([24.6703, 24.7792, 25.3742, 25.1108, 24.5669, 25.1108, 24.6703, 25.3810,
        24.5921, 24.3244, 24.4189, 25.3810, 24.1002, 25.3742, 25.5216, 24.5630])
new_beam_scores: tensor([[25.6703, 25.7792, 26.3742, 26.1108, 25.5669, 26.1108, 25.6703, 26.3810,
         25.5921, 25.3244, 25.4189, 26.3810, 25.1002, 26.3742, 26.5216, 25.5630]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[25.6703, 25.7792, 26.3742, 26.1108, 25.5669, 26.1108, 25.6703, 26.3810,
         25.5921, 25.3244, 25.4189, 26.3810, 25.1002, 26.3742, 26.5216, 25.5630]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3,
        0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 1, 2, 2, 2, 1, 3, 3, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1,
        3, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0,
        0, 1, 1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 1, 1, 2, 1, 0, 3, 0, 1, 3, 2,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1,
        1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 1, 3, 2, 0, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0,
        2, 2, 1, 3, 3, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3, 3, 0, 1, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2,
        1, 0, 3, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3,
        3, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0,
        1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1,
        0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  28
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 0.9091, 1.0000, 0.9091, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([25.6703, 25.7792, 26.3742, 26.1108, 25.5669, 26.1108, 25.6703, 26.3810,
        25.5921, 25.3244, 25.4189, 26.3810, 25.1002, 26.3742, 26.5216, 25.5630])
new_beam_scores: tensor([[26.6703, 26.7792, 27.3742, 27.0199, 26.5669, 27.0199, 26.6703, 27.3810,
         26.5921, 26.3244, 26.4189, 27.3810, 26.1002, 27.3742, 27.5216, 26.5630]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[26.6703, 26.7792, 27.3742, 27.0199, 26.5669, 27.0199, 26.6703, 27.3810,
         26.5921, 26.3244, 26.4189, 27.3810, 26.1002, 27.3742, 27.5216, 26.5630]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3,
        0, 1, 3, 2, 2, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 1, 2, 2, 2, 1, 3, 3, 0, 1, 3, 2, 2, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1,
        3, 2, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0,
        0, 1, 1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 2, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 1, 1, 2, 1, 0, 3, 0, 1, 3, 2,
        2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1,
        1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 2, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 1, 3, 2, 2, 0,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0,
        2, 2, 1, 3, 3, 0, 1, 3, 2, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3, 3, 0, 1, 0, 2, 2, 0, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2,
        1, 0, 3, 0, 1, 3, 2, 2, 0, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 1, 0, 2, 2, 0, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3,
        3, 0, 1, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 2, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0,
        1, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1,
        0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1, 3, 2, 2, 0, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1, 3,
        2, 2, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  29
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([26.6703, 26.7792, 27.3742, 27.0199, 26.5669, 27.0199, 26.6703, 27.3810,
        26.5921, 26.3244, 26.4189, 27.3810, 26.1002, 27.3742, 27.5216, 26.5630])
new_beam_scores: tensor([[27.6703, 27.7792, 28.3742, 28.0199, 27.5669, 28.0199, 27.6703, 28.3810,
         27.5921, 27.3244, 27.4189, 28.3810, 27.1002, 28.3742, 28.5216, 27.5630]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[27.6703, 27.7792, 28.3742, 28.0199, 27.5669, 28.0199, 27.6703, 28.3810,
         27.5921, 27.3244, 27.4189, 28.3810, 27.1002, 28.3742, 28.5216, 27.5630]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3,
        0, 1, 3, 2, 2, 2, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 1, 2, 2, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1,
        3, 2, 2, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0,
        0, 1, 1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 1, 1, 2, 1, 0, 3, 0, 1, 3, 2,
        2, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1,
        1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0,
        2, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3, 3, 0, 1, 0, 2, 2, 2, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2,
        1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 1, 0, 2, 2, 2, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3,
        3, 0, 1, 3, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0,
        1, 3, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1,
        0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1, 3,
        2, 2, 2, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  30
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([27.6703, 27.7792, 28.3742, 28.0199, 27.5669, 28.0199, 27.6703, 28.3810,
        27.5921, 27.3244, 27.4189, 28.3810, 27.1002, 28.3742, 28.5216, 27.5630])
new_beam_scores: tensor([[28.6703, 28.7792, 29.3742, 29.0199, 28.5669, 29.0199, 28.6703, 29.3810,
         28.5921, 28.3244, 28.4189, 29.3810, 28.1002, 29.3742, 29.5216, 28.5630]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[28.6703, 28.7792, 29.3742, 29.0199, 28.5669, 29.0199, 28.6703, 29.3810,
         28.5921, 28.3244, 28.4189, 29.3810, 28.1002, 29.3742, 29.5216, 28.5630]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3,
        0, 1, 3, 2, 2, 2, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 1, 2, 2, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1,
        3, 2, 2, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0,
        0, 1, 1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 0, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 1, 1, 2, 1, 0, 3, 0, 1, 3, 2,
        2, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1,
        1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 0, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2,
        0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0,
        2, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3, 3, 0, 1, 0, 2, 2, 2, 0, 0,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2,
        1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 1, 0, 2, 2, 2, 0, 0, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3,
        3, 0, 1, 3, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0,
        1, 3, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1,
        0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2, 0, 0, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1, 3,
        2, 2, 2, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  31
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([28.6703, 28.7792, 29.3742, 29.0199, 28.5669, 29.0199, 28.6703, 29.3810,
        28.5921, 28.3244, 28.4189, 29.3810, 28.1002, 29.3742, 29.5216, 28.5630])
new_beam_scores: tensor([[29.6703, 29.7792, 30.3742, 30.0199, 29.5669, 30.0199, 29.6703, 30.3810,
         29.5921, 29.3244, 29.4189, 30.3810, 29.1002, 30.3742, 30.5216, 29.5630]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[29.6703, 29.7792, 30.3742, 30.0199, 29.5669, 30.0199, 29.6703, 30.3810,
         29.5921, 29.3244, 29.4189, 30.3810, 29.1002, 30.3742, 30.5216, 29.5630]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3,
        0, 1, 3, 2, 2, 2, 0, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 1, 2, 2, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2, 0, 1, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1,
        3, 2, 2, 2, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0,
        0, 1, 1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 1, 0, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 1, 1, 2, 1, 0, 3, 0, 1, 3, 2,
        2, 2, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1,
        1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 1, 0, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2,
        0, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0,
        2, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3, 3, 0, 1, 0, 2, 2, 2, 0, 1,
        0, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2,
        1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 1, 0, 2, 2, 2, 0, 1, 0, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3,
        3, 0, 1, 3, 2, 2, 2, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 1, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0,
        1, 3, 2, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1,
        0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2, 0, 1, 0, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1, 3,
        2, 2, 2, 0, 1, 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  32
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([29.6703, 29.7792, 30.3742, 30.0199, 29.5669, 30.0199, 29.6703, 30.3810,
        29.5921, 29.3244, 29.4189, 30.3810, 29.1002, 30.3742, 30.5216, 29.5630])
new_beam_scores: tensor([[30.6703, 30.7792, 31.3742, 31.0199, 30.5669, 31.0199, 30.6703, 31.3810,
         30.5921, 30.3244, 30.4189, 31.3810, 30.1002, 31.3742, 31.5216, 30.5630]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[30.6703, 30.7792, 31.3742, 31.0199, 30.5669, 31.0199, 30.6703, 31.3810,
         30.5921, 30.3244, 30.4189, 31.3810, 30.1002, 31.3742, 31.5216, 30.5630]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3,
        0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 1, 2, 2, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1,
        3, 2, 2, 2, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0,
        0, 1, 1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 1, 1, 2, 1, 0, 3, 0, 1, 3, 2,
        2, 2, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1,
        1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2,
        0, 1, 1, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0,
        2, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3, 3, 0, 1, 0, 2, 2, 2, 0, 1,
        1, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2,
        1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 1, 0, 2, 2, 2, 0, 1, 1, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3,
        3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0,
        1, 3, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1,
        0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1, 3,
        2, 2, 2, 0, 1, 1, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [-0.8354,  3.8526, -0.6864, -0.8295],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  33
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([30.6703, 30.7792, 31.3742, 31.0199, 30.5669, 31.0199, 30.6703, 31.3810,
        30.5921, 30.3244, 30.4189, 31.3810, 30.1002, 31.3742, 31.5216, 30.5630])
new_beam_scores: tensor([[31.6703, 31.7792, 32.3742, 32.0199, 31.5669, 32.0199, 31.6703, 32.3810,
         31.5921, 31.3244, 31.4189, 32.3810, 31.1002, 32.3742, 32.5216, 31.5630]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[31.6703, 31.7792, 32.3742, 32.0199, 31.5669, 32.0199, 31.6703, 32.3810,
         31.5921, 31.3244, 31.4189, 32.3810, 31.1002, 32.3742, 32.5216, 31.5630]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3,
        0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 1, 2, 2, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 0, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1,
        3, 2, 2, 2, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0,
        0, 1, 1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 0, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 1, 1, 2, 1, 0, 3, 0, 1, 3, 2,
        2, 2, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1,
        1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 0, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2,
        0, 1, 1, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0,
        2, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3, 3, 0, 1, 0, 2, 2, 2, 0, 1,
        1, 0, 0, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2,
        1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 1, 0, 2, 2, 2, 0, 1, 1, 0,
        0, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3,
        3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 0, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0,
        1, 3, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1,
        0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 0, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1, 3,
        2, 2, 2, 0, 1, 1, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [-0.8354,  3.8526, -0.6864, -0.8295],
        [ 2.0922, -0.2298, -0.2766, -0.8498],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([560, 4])
Iteration :  34
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 560])
size of new_beam_h_S: torch.Size([1, 560, 4])
size of new_beam_logits: torch.Size([1, 560, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.8625, 0.5624, 0.9953, 0.9961, 0.9912, 0.9961, 0.8625, 0.9061, 0.9803,
         0.9984, 0.8736, 0.9061, 0.9828, 0.9953, 0.9896, 0.9800]])
scores: tensor([31.6703, 31.7792, 32.3742, 32.0199, 31.5669, 32.0199, 31.6703, 32.3810,
        31.5921, 31.3244, 31.4189, 32.3810, 31.1002, 32.3742, 32.5216, 31.5630])
new_beam_scores: tensor([[32.5329, 32.3416, 33.3696, 33.0160, 32.5581, 33.0160, 32.5329, 33.2871,
         32.5724, 32.3228, 32.2925, 33.2871, 32.0830, 33.3696, 33.5112, 32.5429]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 560, 4])
new_beam_h_S size: torch.Size([1, 560, 4])
sorted_scores: tensor([[32.5329, 32.3416, 33.3696, 33.0160, 32.5581, 33.0160, 32.5329, 33.2871,
         32.5724, 32.3228, 32.2925, 33.2871, 32.0830, 33.3696, 33.5112, 32.5429]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 560])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3,
        0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 1, 2, 2, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1, 1, 0,
        0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1,
        3, 2, 2, 2, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0,
        0, 1, 1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 0,
        0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 1, 1, 2, 1, 0, 3, 0, 1, 3, 2,
        2, 2, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1,
        1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 0, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2,
        0, 1, 1, 0, 1, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0,
        2, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 2, 1,
        1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3, 3, 0, 1, 0, 2, 2, 2, 0, 1,
        1, 0, 1, 1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2,
        1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0,
        1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3, 0, 1, 0, 2, 2, 2, 0, 1, 1, 0,
        1, 1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3,
        3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1, 0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2,
        2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0, 3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1, 1,
        0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0,
        1, 3, 2, 2, 2, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1,
        0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 3,
        0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 0, 1, 3,
        2, 2, 2, 0, 1, 1, 0, 1], dtype=torch.int32)
logits: tensor([[ 0.2966,  0.4714, -0.2716, -0.5588],
        [ 0.4573,  0.1269,  0.1114,  0.4096],
        [ 0.3305,  0.0801,  0.4672,  0.2249],
        ...,
        [-0.8354,  3.8526, -0.6864, -0.8295],
        [ 2.0922, -0.2298, -0.2766, -0.8498],
        [-0.3486,  0.7194,  0.3302, -0.9396]])
h_S size: torch.Size([560, 4])
tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size expanded indices: torch.Size([1, 16, 35])
tensor([[[1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3,
          3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
         [1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 2, 2, 2, 1, 3,
          3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
         [1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3,
          3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
         [1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1, 1, 0, 1, 2, 1, 0,
          3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
         [1, 3, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 1, 1, 2, 1, 0,
          3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
         [1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1, 1, 0, 1, 2, 1, 0,
          3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
         [1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3,
          3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
         [1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3,
          3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
         [1, 0, 0, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3,
          3, 0, 1, 0, 2, 2, 2, 0, 1, 1, 0, 1],
         [1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0,
          3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
         [1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3,
          3, 0, 1, 0, 2, 2, 2, 0, 1, 1, 0, 1],
         [1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3,
          3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
         [0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0,
          3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
         [1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3,
          3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
         [0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3,
          3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
         [1, 3, 3, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3,
          3, 0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1]]], dtype=torch.int32)
final_scores: tensor([32.5329, 32.3416, 33.3696, 33.0160, 32.5581, 33.0160, 32.5329, 33.2871,
        32.5724, 32.3228, 32.2925, 33.2871, 32.0830, 33.3696, 33.5112, 32.5429])
final_seq: tensor([[1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3,
         0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
        [1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 2, 2, 2, 1, 3, 3,
         0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
        [1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3,
         0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
        [1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1, 1, 0, 1, 2, 1, 0, 3,
         0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
        [1, 3, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 1, 1, 2, 1, 0, 3,
         0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
        [1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 1, 1, 0, 1, 2, 1, 0, 3,
         0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
        [1, 3, 2, 0, 1, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3,
         0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
        [1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3, 3,
         0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
        [1, 0, 0, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3, 3,
         0, 1, 0, 2, 2, 2, 0, 1, 1, 0, 1],
        [1, 3, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0, 3,
         0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
        [1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 1, 2, 2, 1, 3, 3,
         0, 1, 0, 2, 2, 2, 0, 1, 1, 0, 1],
        [1, 3, 2, 0, 0, 0, 2, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 0, 2, 2, 1, 3, 3,
         0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
        [0, 0, 2, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0, 3,
         0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
        [1, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3,
         0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
        [0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3,
         0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1],
        [1, 3, 3, 0, 0, 0, 2, 1, 2, 1, 1, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3,
         0, 1, 3, 2, 2, 2, 0, 1, 1, 0, 1]], dtype=torch.int32)
final_logits: tensor([[[ 0.2966,  0.4714, -0.2716, -0.5588],
         [ 0.4573,  0.1269,  0.1114,  0.4096],
         [ 0.3305,  0.0801,  0.4672,  0.2249],
         ...,
         [-0.9814,  3.7188, -0.7630, -0.8917],
         [ 2.1014, -0.3425, -0.3410, -1.0215],
         [-0.2867,  0.4539,  0.2699, -1.0712]],

        [[ 0.2966,  0.4714, -0.2716, -0.5588],
         [ 0.4573,  0.1269,  0.1114,  0.4096],
         [ 0.3305,  0.0801,  0.4672,  0.2249],
         ...,
         [-0.9185,  3.7738, -0.7366, -0.8558],
         [ 2.1394, -0.3890, -0.2849, -0.9214],
         [-0.2956,  0.4049,  0.3797, -0.9817]],

        [[ 0.2966,  0.4714, -0.2716, -0.5588],
         [ 0.4573,  0.1269,  0.1114,  0.4096],
         [ 0.7026, -0.1007,  0.3411, -0.0756],
         ...,
         [-0.8632,  3.8342, -0.6876, -0.8552],
         [ 2.1232, -0.1979, -0.3397, -0.8922],
         [-0.3780,  0.8143,  0.2776, -0.9812]],

        ...,

        [[ 0.2966,  0.4714, -0.2716, -0.5588],
         [ 0.4573,  0.1269,  0.1114,  0.4096],
         [ 0.7026, -0.1007,  0.3411, -0.0756],
         ...,
         [-0.8632,  3.8342, -0.6876, -0.8552],
         [ 2.1232, -0.1979, -0.3397, -0.8922],
         [-0.3780,  0.8143,  0.2776, -0.9812]],

        [[ 0.2966,  0.4714, -0.2716, -0.5588],
         [ 0.5487,  0.3423,  0.1521,  0.3186],
         [ 0.7812, -0.2538,  0.3662,  0.0264],
         ...,
         [-0.7965,  3.8906, -0.6506, -0.8383],
         [ 2.0762, -0.2602, -0.2880, -0.7652],
         [-0.3580,  0.7508,  0.2955, -0.8875]],

        [[ 0.2966,  0.4714, -0.2716, -0.5588],
         [ 0.4573,  0.1269,  0.1114,  0.4096],
         [ 0.3305,  0.0801,  0.4672,  0.2249],
         ...,
         [-0.8354,  3.8526, -0.6864, -0.8295],
         [ 2.0922, -0.2298, -0.2766, -0.8498],
         [-0.3486,  0.7194,  0.3302, -0.9396]]])
Coords: 28
Sequence: AACGGGCGCAGAAUCUGACGGUACGUUU
Len sequence: 28
Detected base pairs: [[  0 555]
 [ 19 535]
 [ 41 512]
 [ 61 492]
 [ 84 470]
 [130 404]
 [150 384]
 [173 339]
 [193 319]
 [215 299]
 [238 282]]
Secondary structure: '(((((.((((((.)))).))..))))).'
Sequence length: 28
Number of residues: 28
Chain IDs: ['A' 'B']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
(((((.((((((.)))).))..))))).
Batch size:  (26, 26)
Number of nodes:  26
edge_index: tensor([[[ 0,  0,  0,  ..., 25, 25, 25],
         [ 1,  2,  3,  ..., 22, 23, 24]],

        [[ 0,  0,  0,  ..., 25, 25, 25],
         [ 1,  2,  3,  ..., 22, 23, 24]],

        [[ 0,  0,  0,  ..., 25, 25, 25],
         [ 1,  2,  3,  ..., 22, 23, 24]],

        ...,

        [[ 0,  0,  0,  ..., 25, 25, 25],
         [ 1,  2,  3,  ..., 22, 23, 24]],

        [[ 0,  0,  0,  ..., 25, 25, 25],
         [ 1,  2,  3,  ..., 22, 23, 24]],

        [[ 0,  0,  0,  ..., 25, 25, 25],
         [ 1,  2,  3,  ..., 22, 23, 24]]])
offset size: torch.Size([16, 1, 1])
offset: tensor([[[  0]],

        [[ 26]],

        [[ 52]],

        [[ 78]],

        [[104]],

        [[130]],

        [[156]],

        [[182]],

        [[208]],

        [[234]],

        [[260]],

        [[286]],

        [[312]],

        [[338]],

        [[364]],

        [[390]]])
Iteration :  0
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839,
         0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839]])
scores: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
new_beam_scores: tensor([[0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839,
         0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839,
         0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  1
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839,
        0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839, 0.9839])
new_beam_scores: tensor([[1.9839, 1.9839, 1.9839, 1.9839, 1.9839, 1.9839, 1.9839, 1.9839, 1.9839,
         1.9839, 1.9839, 1.9839, 1.9839, 1.9839, 1.9839, 1.9839]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[1.9839, 1.9839, 1.9839, 1.9839, 1.9839, 1.9839, 1.9839, 1.9839, 1.9839,
         1.9839, 1.9839, 1.9839, 1.9839, 1.9839, 1.9839, 1.9839]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  2
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([1.9839, 1.9839, 1.9839, 1.9839, 1.9839, 1.9839, 1.9839, 1.9839, 1.9839,
        1.9839, 1.9839, 1.9839, 1.9839, 1.9839, 1.9839, 1.9839])
new_beam_scores: tensor([[2.9839, 2.9839, 2.9839, 2.9839, 2.9839, 2.9839, 2.9839, 2.9839, 2.9839,
         2.9839, 2.9839, 2.9839, 2.9839, 2.9839, 2.9839, 2.9839]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[2.9839, 2.9839, 2.9839, 2.9839, 2.9839, 2.9839, 2.9839, 2.9839, 2.9839,
         2.9839, 2.9839, 2.9839, 2.9839, 2.9839, 2.9839, 2.9839]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  3
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([2.9839, 2.9839, 2.9839, 2.9839, 2.9839, 2.9839, 2.9839, 2.9839, 2.9839,
        2.9839, 2.9839, 2.9839, 2.9839, 2.9839, 2.9839, 2.9839])
new_beam_scores: tensor([[3.9839, 3.9839, 3.9839, 3.9839, 3.9839, 3.9839, 3.9839, 3.9839, 3.9839,
         3.9839, 3.9839, 3.9839, 3.9839, 3.9839, 3.9839, 3.9839]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[3.9839, 3.9839, 3.9839, 3.9839, 3.9839, 3.9839, 3.9839, 3.9839, 3.9839,
         3.9839, 3.9839, 3.9839, 3.9839, 3.9839, 3.9839, 3.9839]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  4
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([3.9839, 3.9839, 3.9839, 3.9839, 3.9839, 3.9839, 3.9839, 3.9839, 3.9839,
        3.9839, 3.9839, 3.9839, 3.9839, 3.9839, 3.9839, 3.9839])
new_beam_scores: tensor([[4.9839, 4.9839, 4.9839, 4.9839, 4.9839, 4.9839, 4.9839, 4.9839, 4.9839,
         4.9839, 4.9839, 4.9839, 4.9839, 4.9839, 4.9839, 4.9839]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[4.9839, 4.9839, 4.9839, 4.9839, 4.9839, 4.9839, 4.9839, 4.9839, 4.9839,
         4.9839, 4.9839, 4.9839, 4.9839, 4.9839, 4.9839, 4.9839]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1,
        1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        3, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  5
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9947, 0.9947, 0.9947, 0.9947, 0.9947, 0.9947, 0.9947, 0.9947, 0.9947,
         0.9947, 0.9947, 0.9947, 0.9947, 0.9947, 0.9947, 0.9947]])
scores: tensor([4.9839, 4.9839, 4.9839, 4.9839, 4.9839, 4.9839, 4.9839, 4.9839, 4.9839,
        4.9839, 4.9839, 4.9839, 4.9839, 4.9839, 4.9839, 4.9839])
new_beam_scores: tensor([[5.9785, 5.9785, 5.9785, 5.9785, 5.9785, 5.9785, 5.9785, 5.9785, 5.9785,
         5.9785, 5.9785, 5.9785, 5.9785, 5.9785, 5.9785, 5.9785]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[5.9785, 5.9785, 5.9785, 5.9785, 5.9785, 5.9785, 5.9785, 5.9785, 5.9785,
         5.9785, 5.9785, 5.9785, 5.9785, 5.9785, 5.9785, 5.9785]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1,
        1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        3, 1, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  6
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([5.9785, 5.9785, 5.9785, 5.9785, 5.9785, 5.9785, 5.9785, 5.9785, 5.9785,
        5.9785, 5.9785, 5.9785, 5.9785, 5.9785, 5.9785, 5.9785])
new_beam_scores: tensor([[6.9785, 6.9785, 6.9785, 6.9785, 6.9785, 6.9785, 6.9785, 6.9785, 6.9785,
         6.9785, 6.9785, 6.9785, 6.9785, 6.9785, 6.9785, 6.9785]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[6.9785, 6.9785, 6.9785, 6.9785, 6.9785, 6.9785, 6.9785, 6.9785, 6.9785,
         6.9785, 6.9785, 6.9785, 6.9785, 6.9785, 6.9785, 6.9785]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0,
        2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1,
        1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        3, 1, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  7
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([6.9785, 6.9785, 6.9785, 6.9785, 6.9785, 6.9785, 6.9785, 6.9785, 6.9785,
        6.9785, 6.9785, 6.9785, 6.9785, 6.9785, 6.9785, 6.9785])
new_beam_scores: tensor([[7.9785, 7.9785, 7.9785, 7.9785, 7.9785, 7.9785, 7.9785, 7.9785, 7.9785,
         7.9785, 7.9785, 7.9785, 7.9785, 7.9785, 7.9785, 7.9785]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[7.9785, 7.9785, 7.9785, 7.9785, 7.9785, 7.9785, 7.9785, 7.9785, 7.9785,
         7.9785, 7.9785, 7.9785, 7.9785, 7.9785, 7.9785, 7.9785]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2,
        1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0,
        2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1,
        1, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  8
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([7.9785, 7.9785, 7.9785, 7.9785, 7.9785, 7.9785, 7.9785, 7.9785, 7.9785,
        7.9785, 7.9785, 7.9785, 7.9785, 7.9785, 7.9785, 7.9785])
new_beam_scores: tensor([[8.9785, 8.9785, 8.9785, 8.9785, 8.9785, 8.9785, 8.9785, 8.9785, 8.9785,
         8.9785, 8.9785, 8.9785, 8.9785, 8.9785, 8.9785, 8.9785]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[8.9785, 8.9785, 8.9785, 8.9785, 8.9785, 8.9785, 8.9785, 8.9785, 8.9785,
         8.9785, 8.9785, 8.9785, 8.9785, 8.9785, 8.9785, 8.9785]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2,
        1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0,
        2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1,
        1, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  9
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([8.9785, 8.9785, 8.9785, 8.9785, 8.9785, 8.9785, 8.9785, 8.9785, 8.9785,
        8.9785, 8.9785, 8.9785, 8.9785, 8.9785, 8.9785, 8.9785])
new_beam_scores: tensor([[9.9785, 9.9785, 9.9785, 9.9785, 9.9785, 9.9785, 9.9785, 9.9785, 9.9785,
         9.9785, 9.9785, 9.9785, 9.9785, 9.9785, 9.9785, 9.9785]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[9.9785, 9.9785, 9.9785, 9.9785, 9.9785, 9.9785, 9.9785, 9.9785, 9.9785,
         9.9785, 9.9785, 9.9785, 9.9785, 9.9785, 9.9785, 9.9785]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2,
        0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2,
        1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0,
        2, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1,
        1, 0, 2, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  10
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([9.9785, 9.9785, 9.9785, 9.9785, 9.9785, 9.9785, 9.9785, 9.9785, 9.9785,
        9.9785, 9.9785, 9.9785, 9.9785, 9.9785, 9.9785, 9.9785])
new_beam_scores: tensor([[10.9785, 10.9785, 10.9785, 10.9785, 10.9785, 10.9785, 10.9785, 10.9785,
         10.9785, 10.9785, 10.9785, 10.9785, 10.9785, 10.9785, 10.9785, 10.9785]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[10.9785, 10.9785, 10.9785, 10.9785, 10.9785, 10.9785, 10.9785, 10.9785,
         10.9785, 10.9785, 10.9785, 10.9785, 10.9785, 10.9785, 10.9785, 10.9785]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2,
        0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2,
        1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0,
        2, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1,
        1, 0, 2, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  11
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [1],
        [1],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.7256, 0.7256, 0.7256, 0.7256, 0.7256, 0.7256, 0.7256, 0.7256, 0.7256,
         0.2743, 0.2743, 0.7256, 0.7256, 0.7256, 0.7256, 0.7256]])
scores: tensor([10.9785, 10.9785, 10.9785, 10.9785, 10.9785, 10.9785, 10.9785, 10.9785,
        10.9785, 10.9785, 10.9785, 10.9785, 10.9785, 10.9785, 10.9785, 10.9785])
new_beam_scores: tensor([[11.7041, 11.7041, 11.7041, 11.7041, 11.7041, 11.7041, 11.7041, 11.7041,
         11.7041, 11.2528, 11.2528, 11.7041, 11.7041, 11.7041, 11.7041, 11.7041]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[11.7041, 11.7041, 11.7041, 11.7041, 11.7041, 11.7041, 11.7041, 11.7041,
         11.7041, 11.2528, 11.2528, 11.7041, 11.7041, 11.7041, 11.7041, 11.7041]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2,
        0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2,
        0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2,
        1, 2, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0,
        2, 2, 1, 2, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1,
        1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  12
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([11.7041, 11.7041, 11.7041, 11.7041, 11.7041, 11.7041, 11.7041, 11.7041,
        11.7041, 11.2528, 11.2528, 11.7041, 11.7041, 11.7041, 11.7041, 11.7041])
new_beam_scores: tensor([[12.7041, 12.7041, 12.7041, 12.7041, 12.7041, 12.7041, 12.7041, 12.7041,
         12.7041, 12.2528, 12.2528, 12.7041, 12.7041, 12.7041, 12.7041, 12.7041]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[12.7041, 12.7041, 12.7041, 12.7041, 12.7041, 12.7041, 12.7041, 12.7041,
         12.7041, 12.2528, 12.2528, 12.7041, 12.7041, 12.7041, 12.7041, 12.7041]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2,
        0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2,
        0, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2,
        1, 2, 0, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0,
        2, 2, 1, 2, 0, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1,
        1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  13
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([12.7041, 12.7041, 12.7041, 12.7041, 12.7041, 12.7041, 12.7041, 12.7041,
        12.7041, 12.2528, 12.2528, 12.7041, 12.7041, 12.7041, 12.7041, 12.7041])
new_beam_scores: tensor([[13.7041, 13.7041, 13.7041, 13.7041, 13.7041, 13.7041, 13.7041, 13.7041,
         13.7041, 13.2528, 13.2528, 13.7041, 13.7041, 13.7041, 13.7041, 13.7041]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[13.7041, 13.7041, 13.7041, 13.7041, 13.7041, 13.7041, 13.7041, 13.7041,
         13.7041, 13.2528, 13.2528, 13.7041, 13.7041, 13.7041, 13.7041, 13.7041]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2,
        1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2,
        0, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2,
        0, 2, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2,
        1, 2, 0, 2, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0,
        2, 2, 1, 2, 0, 2, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1,
        1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  14
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([13.7041, 13.7041, 13.7041, 13.7041, 13.7041, 13.7041, 13.7041, 13.7041,
        13.7041, 13.2528, 13.2528, 13.7041, 13.7041, 13.7041, 13.7041, 13.7041])
new_beam_scores: tensor([[14.7041, 14.7041, 14.7041, 14.7041, 14.7041, 14.7041, 14.7041, 14.7041,
         14.7041, 14.2528, 14.2528, 14.7041, 14.7041, 14.7041, 14.7041, 14.7041]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[14.7041, 14.7041, 14.7041, 14.7041, 14.7041, 14.7041, 14.7041, 14.7041,
         14.7041, 14.2528, 14.2528, 14.7041, 14.7041, 14.7041, 14.7041, 14.7041]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2,
        1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2,
        0, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2,
        0, 2, 0, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2,
        1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0,
        2, 2, 1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1,
        1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  15
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([14.7041, 14.7041, 14.7041, 14.7041, 14.7041, 14.7041, 14.7041, 14.7041,
        14.7041, 14.2528, 14.2528, 14.7041, 14.7041, 14.7041, 14.7041, 14.7041])
new_beam_scores: tensor([[15.7041, 15.7041, 15.7041, 15.7041, 15.7041, 15.7041, 15.7041, 15.7041,
         15.7041, 15.2528, 15.2528, 15.7041, 15.7041, 15.7041, 15.7041, 15.7041]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[15.7041, 15.7041, 15.7041, 15.7041, 15.7041, 15.7041, 15.7041, 15.7041,
         15.7041, 15.2528, 15.2528, 15.7041, 15.7041, 15.7041, 15.7041, 15.7041]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2,
        1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2,
        0, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2,
        0, 2, 0, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2,
        1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0,
        2, 2, 1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1,
        1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  16
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([15.7041, 15.7041, 15.7041, 15.7041, 15.7041, 15.7041, 15.7041, 15.7041,
        15.7041, 15.2528, 15.2528, 15.7041, 15.7041, 15.7041, 15.7041, 15.7041])
new_beam_scores: tensor([[16.7041, 16.7041, 16.7041, 16.7041, 16.7041, 16.7041, 16.7041, 16.7041,
         16.7041, 16.2528, 16.2528, 16.7041, 16.7041, 16.7041, 16.7041, 16.7041]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[16.7041, 16.7041, 16.7041, 16.7041, 16.7041, 16.7041, 16.7041, 16.7041,
         16.7041, 16.2528, 16.2528, 16.7041, 16.7041, 16.7041, 16.7041, 16.7041]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3,
        1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2,
        1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2,
        0, 2, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2,
        0, 2, 0, 2, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2,
        1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0,
        2, 2, 1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1,
        1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  17
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([16.7041, 16.7041, 16.7041, 16.7041, 16.7041, 16.7041, 16.7041, 16.7041,
        16.7041, 16.2528, 16.2528, 16.7041, 16.7041, 16.7041, 16.7041, 16.7041])
new_beam_scores: tensor([[17.7041, 17.7041, 17.7041, 17.7041, 17.7041, 17.7041, 17.7041, 17.7041,
         17.7041, 17.2528, 17.2528, 17.7041, 17.7041, 17.7041, 17.7041, 17.7041]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[17.7041, 17.7041, 17.7041, 17.7041, 17.7041, 17.7041, 17.7041, 17.7041,
         17.7041, 17.2528, 17.2528, 17.7041, 17.7041, 17.7041, 17.7041, 17.7041]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0,
        2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3,
        1, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2,
        1, 3, 1, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2,
        0, 2, 1, 3, 1, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2,
        0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2,
        1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0,
        2, 2, 1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1,
        1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  18
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([17.7041, 17.7041, 17.7041, 17.7041, 17.7041, 17.7041, 17.7041, 17.7041,
        17.7041, 17.2528, 17.2528, 17.7041, 17.7041, 17.7041, 17.7041, 17.7041])
new_beam_scores: tensor([[18.7041, 18.7041, 18.7041, 18.7041, 18.7041, 18.7041, 18.7041, 18.7041,
         18.7041, 18.2528, 18.2528, 18.7041, 18.7041, 18.7041, 18.7041, 18.7041]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[18.7041, 18.7041, 18.7041, 18.7041, 18.7041, 18.7041, 18.7041, 18.7041,
         18.7041, 18.2528, 18.2528, 18.7041, 18.7041, 18.7041, 18.7041, 18.7041]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0,
        2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3,
        1, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2,
        1, 3, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2,
        0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2,
        0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2,
        1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0,
        2, 2, 1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1,
        1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1,
        1, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  19
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9584, 0.9584, 0.9584, 0.9584, 0.9584, 0.9584, 0.9584, 0.9584, 0.9584,
         0.9979, 0.9979, 0.9584, 0.9584, 0.9584, 0.9584, 0.9584]])
scores: tensor([18.7041, 18.7041, 18.7041, 18.7041, 18.7041, 18.7041, 18.7041, 18.7041,
        18.7041, 18.2528, 18.2528, 18.7041, 18.7041, 18.7041, 18.7041, 18.7041])
new_beam_scores: tensor([[19.6625, 19.6625, 19.6625, 19.6625, 19.6625, 19.6625, 19.6625, 19.6625,
         19.6625, 19.2507, 19.2507, 19.6625, 19.6625, 19.6625, 19.6625, 19.6625]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[19.6625, 19.6625, 19.6625, 19.6625, 19.6625, 19.6625, 19.6625, 19.6625,
         19.6625, 19.2507, 19.2507, 19.6625, 19.6625, 19.6625, 19.6625, 19.6625]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0,
        2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3,
        1, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2,
        1, 3, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2,
        0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2,
        0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2,
        1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 0,
        2, 2, 1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1,
        1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1,
        1, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  20
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([19.6625, 19.6625, 19.6625, 19.6625, 19.6625, 19.6625, 19.6625, 19.6625,
        19.6625, 19.2507, 19.2507, 19.6625, 19.6625, 19.6625, 19.6625, 19.6625])
new_beam_scores: tensor([[20.6625, 20.6625, 20.6625, 20.6625, 20.6625, 20.6625, 20.6625, 20.6625,
         20.6625, 20.2507, 20.2507, 20.6625, 20.6625, 20.6625, 20.6625, 20.6625]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[20.6625, 20.6625, 20.6625, 20.6625, 20.6625, 20.6625, 20.6625, 20.6625,
         20.6625, 20.2507, 20.2507, 20.6625, 20.6625, 20.6625, 20.6625, 20.6625]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0,
        1, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1,
        1, 0, 1, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0,
        2, 1, 1, 0, 1, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3,
        1, 0, 2, 1, 1, 0, 1, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2,
        1, 3, 1, 0, 2, 1, 1, 0, 1, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2,
        0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2,
        0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2,
        1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 1, 1, 0, 1, 0, 0, 0, 0, 0, 3, 1, 1, 0,
        2, 2, 1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 1, 1, 0, 1, 0, 0, 0, 0, 0, 3, 1,
        1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 0, 0, 0, 0, 0,
        3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 0, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 0,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0,
        1, 0, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1,
        1, 0, 1, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  21
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([20.6625, 20.6625, 20.6625, 20.6625, 20.6625, 20.6625, 20.6625, 20.6625,
        20.6625, 20.2507, 20.2507, 20.6625, 20.6625, 20.6625, 20.6625, 20.6625])
new_beam_scores: tensor([[21.6625, 21.6625, 21.6625, 21.6625, 21.6625, 21.6625, 21.6625, 21.6625,
         21.6625, 21.2507, 21.2507, 21.6625, 21.6625, 21.6625, 21.6625, 21.6625]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[21.6625, 21.6625, 21.6625, 21.6625, 21.6625, 21.6625, 21.6625, 21.6625,
         21.6625, 21.2507, 21.2507, 21.6625, 21.6625, 21.6625, 21.6625, 21.6625]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0,
        1, 2, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1,
        1, 0, 1, 2, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0,
        2, 1, 1, 0, 1, 2, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3,
        1, 0, 2, 1, 1, 0, 1, 2, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2,
        1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2,
        0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2,
        0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2,
        1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 0, 0, 0, 0, 3, 1, 1, 0,
        2, 2, 1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 0, 0, 0, 0, 3, 1,
        1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 0, 0, 0, 0,
        3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 0, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2,
        0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0,
        1, 2, 0, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1,
        1, 0, 1, 2, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  22
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([21.6625, 21.6625, 21.6625, 21.6625, 21.6625, 21.6625, 21.6625, 21.6625,
        21.6625, 21.2507, 21.2507, 21.6625, 21.6625, 21.6625, 21.6625, 21.6625])
new_beam_scores: tensor([[22.6625, 22.6625, 22.6625, 22.6625, 22.6625, 22.6625, 22.6625, 22.6625,
         22.6625, 22.2507, 22.2507, 22.6625, 22.6625, 22.6625, 22.6625, 22.6625]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[22.6625, 22.6625, 22.6625, 22.6625, 22.6625, 22.6625, 22.6625, 22.6625,
         22.6625, 22.2507, 22.2507, 22.6625, 22.6625, 22.6625, 22.6625, 22.6625]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2,
        2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0,
        1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1,
        1, 0, 1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3,
        1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2,
        1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2,
        0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2,
        0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2,
        1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 3, 1, 1, 0,
        2, 2, 1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 3, 1,
        1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0,
        3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2,
        2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0,
        1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1,
        1, 0, 1, 2, 2, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  23
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([22.6625, 22.6625, 22.6625, 22.6625, 22.6625, 22.6625, 22.6625, 22.6625,
        22.6625, 22.2507, 22.2507, 22.6625, 22.6625, 22.6625, 22.6625, 22.6625])
new_beam_scores: tensor([[23.6625, 23.6625, 23.6625, 23.6625, 23.6625, 23.6625, 23.6625, 23.6625,
         23.6625, 23.2507, 23.2507, 23.6625, 23.6625, 23.6625, 23.6625, 23.6625]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[23.6625, 23.6625, 23.6625, 23.6625, 23.6625, 23.6625, 23.6625, 23.6625,
         23.6625, 23.2507, 23.2507, 23.6625, 23.6625, 23.6625, 23.6625, 23.6625]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2,
        2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0,
        1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1,
        1, 0, 1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3,
        1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2,
        1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2,
        0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2,
        0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2,
        1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 3, 1, 1, 0,
        2, 2, 1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 3, 1,
        1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0,
        3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2,
        2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0,
        1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1,
        1, 0, 1, 2, 2, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 3.0252, -1.1057, -1.0857, -1.3878],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  24
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([23.6625, 23.6625, 23.6625, 23.6625, 23.6625, 23.6625, 23.6625, 23.6625,
        23.6625, 23.2507, 23.2507, 23.6625, 23.6625, 23.6625, 23.6625, 23.6625])
new_beam_scores: tensor([[24.6625, 24.6625, 24.6625, 24.6625, 24.6625, 24.6625, 24.6625, 24.6625,
         24.6625, 24.2507, 24.2507, 24.6625, 24.6625, 24.6625, 24.6625, 24.6625]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[24.6625, 24.6625, 24.6625, 24.6625, 24.6625, 24.6625, 24.6625, 24.6625,
         24.6625, 24.2507, 24.2507, 24.6625, 24.6625, 24.6625, 24.6625, 24.6625]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2,
        2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0,
        1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1,
        1, 0, 1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3,
        1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2,
        1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2,
        0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2,
        0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2,
        1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 3, 1, 1, 0,
        2, 2, 1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0, 3, 1,
        1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 0,
        3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
        0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2,
        2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0,
        1, 2, 2, 0, 0, 0, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1,
        1, 0, 1, 2, 2, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 3.0252, -1.1057, -1.0857, -1.3878],
        [ 1.3883, -0.2833,  0.0218, -0.6340],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([416, 4])
Iteration :  25
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [2],
        [1],
        [2],
        [1],
        [2],
        [1],
        [1],
        [1],
        [2],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 416])
size of new_beam_h_S: torch.Size([1, 416, 4])
size of new_beam_logits: torch.Size([1, 416, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.6145, 0.6145, 0.3855, 0.6145, 0.3855, 0.6145, 0.3855, 0.6145, 0.6145,
         0.9660, 0.0340, 0.6145, 0.6145, 0.6145, 0.6145, 0.6145]])
scores: tensor([24.6625, 24.6625, 24.6625, 24.6625, 24.6625, 24.6625, 24.6625, 24.6625,
        24.6625, 24.2507, 24.2507, 24.6625, 24.6625, 24.6625, 24.6625, 24.6625])
new_beam_scores: tensor([[25.2771, 25.2771, 25.0480, 25.2771, 25.0480, 25.2771, 25.0480, 25.2771,
         25.2771, 25.2168, 24.2847, 25.2771, 25.2771, 25.2771, 25.2771, 25.2771]])
new_beam seq: tensor([[1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 416, 4])
new_beam_h_S size: torch.Size([1, 416, 4])
sorted_scores: tensor([[25.2771, 25.2771, 25.0480, 25.2771, 25.0480, 25.2771, 25.0480, 25.2771,
         25.2771, 25.2168, 24.2847, 25.2771, 25.2771, 25.2771, 25.2771, 25.2771]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 416])
new_beam_seq_sorted reshaped: tensor([1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
        0, 1, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2,
        2, 0, 0, 1, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0,
        1, 2, 2, 0, 0, 2, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1,
        1, 0, 1, 2, 2, 0, 0, 1, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0,
        2, 1, 1, 0, 1, 2, 2, 0, 0, 2, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3,
        1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 1, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2,
        1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 2, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2,
        0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 1, 3, 1, 1, 0, 2, 2, 1, 2,
        0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 1, 3, 1, 1, 0, 2, 2,
        1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 1, 3, 1, 1, 0,
        2, 2, 1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 2, 3, 1,
        1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0, 0, 1,
        3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
        0, 1, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2,
        2, 0, 0, 1, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0,
        1, 2, 2, 0, 0, 1, 3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1,
        1, 0, 1, 2, 2, 0, 0, 1], dtype=torch.int32)
logits: tensor([[-0.1846, -0.4239, -0.2703,  0.2683],
        [ 0.4029,  2.0786,  0.3180, -0.9953],
        [ 0.2202,  2.8726,  0.3320, -1.0244],
        ...,
        [ 3.0252, -1.1057, -1.0857, -1.3878],
        [ 1.3883, -0.2833,  0.0218, -0.6340],
        [-0.7200,  0.6302,  0.5835, -0.9373]])
h_S size: torch.Size([416, 4])
tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size expanded indices: torch.Size([1, 16, 26])
tensor([[[3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2,
          0, 0, 1],
         [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2,
          0, 0, 1],
         [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2,
          0, 0, 2],
         [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2,
          0, 0, 1],
         [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2,
          0, 0, 2],
         [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2,
          0, 0, 1],
         [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2,
          0, 0, 2],
         [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2,
          0, 0, 1],
         [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2,
          0, 0, 1],
         [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2,
          0, 0, 1],
         [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2,
          0, 0, 2],
         [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2,
          0, 0, 1],
         [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2,
          0, 0, 1],
         [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2,
          0, 0, 1],
         [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2,
          0, 0, 1],
         [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2,
          0, 0, 1]]], dtype=torch.int32)
final_scores: tensor([25.2771, 25.2771, 25.0480, 25.2771, 25.0480, 25.2771, 25.0480, 25.2771,
        25.2771, 25.2168, 24.2847, 25.2771, 25.2771, 25.2771, 25.2771, 25.2771])
final_seq: tensor([[3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
         0, 1],
        [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
         0, 1],
        [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
         0, 2],
        [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
         0, 1],
        [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
         0, 2],
        [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
         0, 1],
        [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
         0, 2],
        [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
         0, 1],
        [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
         0, 1],
        [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
         0, 1],
        [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 1, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
         0, 2],
        [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
         0, 1],
        [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
         0, 1],
        [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
         0, 1],
        [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
         0, 1],
        [3, 1, 1, 0, 2, 2, 1, 2, 0, 2, 0, 2, 1, 3, 1, 0, 2, 1, 1, 0, 1, 2, 2, 0,
         0, 1]], dtype=torch.int32)
final_logits: tensor([[[-0.1846, -0.4239, -0.2703,  0.2683],
         [ 0.4029,  2.0786,  0.3180, -0.9953],
         [ 0.2202,  2.8726,  0.3320, -1.0244],
         ...,
         [ 3.0252, -1.1057, -1.0857, -1.3878],
         [ 1.3883, -0.2833,  0.0218, -0.6340],
         [-0.7200,  0.6302,  0.5835, -0.9373]],

        [[-0.1846, -0.4239, -0.2703,  0.2683],
         [ 0.4029,  2.0786,  0.3180, -0.9953],
         [ 0.2202,  2.8726,  0.3320, -1.0244],
         ...,
         [ 3.0252, -1.1057, -1.0857, -1.3878],
         [ 1.3883, -0.2833,  0.0218, -0.6340],
         [-0.7200,  0.6302,  0.5835, -0.9373]],

        [[-0.1846, -0.4239, -0.2703,  0.2683],
         [ 0.4029,  2.0786,  0.3180, -0.9953],
         [ 0.2202,  2.8726,  0.3320, -1.0244],
         ...,
         [ 3.0252, -1.1057, -1.0857, -1.3878],
         [ 1.3883, -0.2833,  0.0218, -0.6340],
         [-0.7200,  0.6302,  0.5835, -0.9373]],

        ...,

        [[-0.1846, -0.4239, -0.2703,  0.2683],
         [ 0.4029,  2.0786,  0.3180, -0.9953],
         [ 0.2202,  2.8726,  0.3320, -1.0244],
         ...,
         [ 3.0252, -1.1057, -1.0857, -1.3878],
         [ 1.3883, -0.2833,  0.0218, -0.6340],
         [-0.7200,  0.6302,  0.5835, -0.9373]],

        [[-0.1846, -0.4239, -0.2703,  0.2683],
         [ 0.4029,  2.0786,  0.3180, -0.9953],
         [ 0.2202,  2.8726,  0.3320, -1.0244],
         ...,
         [ 3.0252, -1.1057, -1.0857, -1.3878],
         [ 1.3883, -0.2833,  0.0218, -0.6340],
         [-0.7200,  0.6302,  0.5835, -0.9373]],

        [[-0.1846, -0.4239, -0.2703,  0.2683],
         [ 0.4029,  2.0786,  0.3180, -0.9953],
         [ 0.2202,  2.8726,  0.3320, -1.0244],
         ...,
         [ 3.0252, -1.1057, -1.0857, -1.3878],
         [ 1.3883, -0.2833,  0.0218, -0.6340],
         [-0.7200,  0.6302,  0.5835, -0.9373]]])
Coords: 67
Sequence: GGACAUAUAAUCGCGUGGAUAUGGCACGCAAGUUUCUACCGGGCACCGUAAAUGUCCGACUAUGUCC
Len sequence: 67
Detected base pairs: [[   0 1402]
 [  20 1382]
 [  43 1362]
 [  65 1339]
 [  85 1319]
 [ 107 1297]
 [ 127  687]
 [ 149  787]
 [ 213  642]
 [ 233  620]
 [ 253  600]
 [ 276  577]
 [ 296  557]
 [ 319  535]
 [ 339  515]
 [ 407 1065]
 [ 427 1043]
 [ 469  980]
 [ 492  960]
 [ 664  809]
 [ 829 1212]
 [ 849 1192]
 [ 872 1172]
 [ 895 1152]
 [ 918 1129]
 [ 938 1109]]
Secondary structure: '(((((({<..(((((((..[[.[[)))))))(}....>)((((((]]..]].))))))...))))))'
Sequence length: 67
Number of residues: 67
Chain IDs: ['B']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
((((((....(((((((.......)))))))(......)((((((.......))))))...))))))
Batch size:  (66, 66)
Number of nodes:  66
edge_index: tensor([[[ 0,  0,  0,  ..., 65, 65, 65],
         [ 1,  2,  3,  ..., 62, 63, 64]],

        [[ 0,  0,  0,  ..., 65, 65, 65],
         [ 1,  2,  3,  ..., 62, 63, 64]],

        [[ 0,  0,  0,  ..., 65, 65, 65],
         [ 1,  2,  3,  ..., 62, 63, 64]],

        ...,

        [[ 0,  0,  0,  ..., 65, 65, 65],
         [ 1,  2,  3,  ..., 62, 63, 64]],

        [[ 0,  0,  0,  ..., 65, 65, 65],
         [ 1,  2,  3,  ..., 62, 63, 64]],

        [[ 0,  0,  0,  ..., 65, 65, 65],
         [ 1,  2,  3,  ..., 62, 63, 64]]])
offset size: torch.Size([16, 1, 1])
offset: tensor([[[  0]],

        [[ 66]],

        [[132]],

        [[198]],

        [[264]],

        [[330]],

        [[396]],

        [[462]],

        [[528]],

        [[594]],

        [[660]],

        [[726]],

        [[792]],

        [[858]],

        [[924]],

        [[990]]])
Iteration :  0
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
new_beam_scores: tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 0, 0,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  1
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9711, 0.9711, 0.9711, 0.9711, 0.9711, 0.9711, 0.9711, 0.9711, 0.9711,
         0.9711, 0.9711, 0.9711, 0.9711, 0.9711, 0.9711, 0.9711]])
scores: tensor([1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000])
new_beam_scores: tensor([[1.9711, 1.9711, 1.9711, 1.9711, 1.9711, 1.9711, 1.9711, 1.9711, 1.9711,
         1.9711, 1.9711, 1.9711, 1.9711, 1.9711, 1.9711, 1.9711]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[1.9711, 1.9711, 1.9711, 1.9711, 1.9711, 1.9711, 1.9711, 1.9711, 1.9711,
         1.9711, 1.9711, 1.9711, 1.9711, 1.9711, 1.9711, 1.9711]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 0,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  2
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [1],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9745, 0.9745, 0.9745, 0.9745, 0.9745, 0.9745, 0.9745, 0.9745, 0.9745,
         0.0255, 0.9745, 0.9745, 0.9745, 0.9745, 0.9745, 0.9745]])
scores: tensor([1.9711, 1.9711, 1.9711, 1.9711, 1.9711, 1.9711, 1.9711, 1.9711, 1.9711,
        1.9711, 1.9711, 1.9711, 1.9711, 1.9711, 1.9711, 1.9711])
new_beam_scores: tensor([[2.9456, 2.9456, 2.9456, 2.9456, 2.9456, 2.9456, 2.9456, 2.9456, 2.9456,
         1.9965, 2.9456, 2.9456, 2.9456, 2.9456, 2.9456, 2.9456]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[2.9456, 2.9456, 2.9456, 2.9456, 2.9456, 2.9456, 2.9456, 2.9456, 2.9456,
         1.9965, 2.9456, 2.9456, 2.9456, 2.9456, 2.9456, 2.9456]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  3
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [3],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9913, 0.9913, 0.9913, 0.9913, 0.9913, 0.9913, 0.9913, 0.9913, 0.9913,
         0.9232, 0.9913, 0.9913, 0.9913, 0.9913, 0.9913, 0.9913]])
scores: tensor([2.9456, 2.9456, 2.9456, 2.9456, 2.9456, 2.9456, 2.9456, 2.9456, 2.9456,
        1.9965, 2.9456, 2.9456, 2.9456, 2.9456, 2.9456, 2.9456])
new_beam_scores: tensor([[3.9369, 3.9369, 3.9369, 3.9369, 3.9369, 3.9369, 3.9369, 3.9369, 3.9369,
         2.9197, 3.9369, 3.9369, 3.9369, 3.9369, 3.9369, 3.9369]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[3.9369, 3.9369, 3.9369, 3.9369, 3.9369, 3.9369, 3.9369, 3.9369, 3.9369,
         2.9197, 3.9369, 3.9369, 3.9369, 3.9369, 3.9369, 3.9369]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  4
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [3],
        [0],
        [0],
        [0],
        [0],
        [3],
        [3],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.8312, 0.8312, 0.8312, 0.8312, 0.8312, 0.8312, 0.1501, 0.8312, 0.8312,
         0.9837, 0.8312, 0.1501, 0.1501, 0.8312, 0.8312, 0.8312]])
scores: tensor([3.9369, 3.9369, 3.9369, 3.9369, 3.9369, 3.9369, 3.9369, 3.9369, 3.9369,
        2.9197, 3.9369, 3.9369, 3.9369, 3.9369, 3.9369, 3.9369])
new_beam_scores: tensor([[4.7681, 4.7681, 4.7681, 4.7681, 4.7681, 4.7681, 4.0870, 4.7681, 4.7681,
         3.9033, 4.7681, 4.0870, 4.0870, 4.7681, 4.7681, 4.7681]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 3, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[4.7681, 4.7681, 4.7681, 4.7681, 4.7681, 4.7681, 4.0870, 4.7681, 4.7681,
         3.9033, 4.7681, 4.0870, 4.0870, 4.7681, 4.7681, 4.7681]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 3, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  5
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([4.7681, 4.7681, 4.7681, 4.7681, 4.7681, 4.7681, 4.0870, 4.7681, 4.7681,
        3.9033, 4.7681, 4.0870, 4.0870, 4.7681, 4.7681, 4.7681])
new_beam_scores: tensor([[5.7681, 5.7681, 5.7681, 5.7681, 5.7681, 5.7681, 5.0870, 5.7681, 5.7681,
         4.9033, 5.7681, 5.0870, 5.0870, 5.7681, 5.7681, 5.7681]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[5.7681, 5.7681, 5.7681, 5.7681, 5.7681, 5.7681, 5.0870, 5.7681, 5.7681,
         4.9033, 5.7681, 5.0870, 5.0870, 5.7681, 5.7681, 5.7681]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  6
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([5.7681, 5.7681, 5.7681, 5.7681, 5.7681, 5.7681, 5.0870, 5.7681, 5.7681,
        4.9033, 5.7681, 5.0870, 5.0870, 5.7681, 5.7681, 5.7681])
new_beam_scores: tensor([[6.7681, 6.7681, 6.7681, 6.7681, 6.7681, 6.7681, 6.0870, 6.7681, 6.7681,
         5.9033, 6.7681, 6.0870, 6.0870, 6.7681, 6.7681, 6.7681]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[6.7681, 6.7681, 6.7681, 6.7681, 6.7681, 6.7681, 6.0870, 6.7681, 6.7681,
         5.9033, 6.7681, 6.0870, 6.0870, 6.7681, 6.7681, 6.7681]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  7
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([6.7681, 6.7681, 6.7681, 6.7681, 6.7681, 6.7681, 6.0870, 6.7681, 6.7681,
        5.9033, 6.7681, 6.0870, 6.0870, 6.7681, 6.7681, 6.7681])
new_beam_scores: tensor([[7.7681, 7.7681, 7.7681, 7.7681, 7.7681, 7.7681, 7.0870, 7.7681, 7.7681,
         6.9033, 7.7681, 7.0870, 7.0870, 7.7681, 7.7681, 7.7681]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[7.7681, 7.7681, 7.7681, 7.7681, 7.7681, 7.7681, 7.0870, 7.7681, 7.7681,
         6.9033, 7.7681, 7.0870, 7.0870, 7.7681, 7.7681, 7.7681]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  8
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([7.7681, 7.7681, 7.7681, 7.7681, 7.7681, 7.7681, 7.0870, 7.7681, 7.7681,
        6.9033, 7.7681, 7.0870, 7.0870, 7.7681, 7.7681, 7.7681])
new_beam_scores: tensor([[8.7681, 8.7681, 8.7681, 8.7681, 8.7681, 8.7681, 8.0870, 8.7681, 8.7681,
         7.9033, 8.7681, 8.0870, 8.0870, 8.7681, 8.7681, 8.7681]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[8.7681, 8.7681, 8.7681, 8.7681, 8.7681, 8.7681, 8.0870, 8.7681, 8.7681,
         7.9033, 8.7681, 8.0870, 8.0870, 8.7681, 8.7681, 8.7681]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  9
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([8.7681, 8.7681, 8.7681, 8.7681, 8.7681, 8.7681, 8.0870, 8.7681, 8.7681,
        7.9033, 8.7681, 8.0870, 8.0870, 8.7681, 8.7681, 8.7681])
new_beam_scores: tensor([[9.7681, 9.7681, 9.7681, 9.7681, 9.7681, 9.7681, 9.0870, 9.7681, 9.7681,
         8.9033, 9.7681, 9.0870, 9.0870, 9.7681, 9.7681, 9.7681]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[9.7681, 9.7681, 9.7681, 9.7681, 9.7681, 9.7681, 9.0870, 9.7681, 9.7681,
         8.9033, 9.7681, 9.0870, 9.0870, 9.7681, 9.7681, 9.7681]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  10
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [2],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [2],
        [1],
        [2],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.7095, 0.2905, 0.7095, 0.7095, 0.7095, 0.7095, 0.4984, 0.7095, 0.7095,
         0.7200, 0.2905, 0.4984, 0.5016, 0.7095, 0.7095, 0.7095]])
scores: tensor([9.7681, 9.7681, 9.7681, 9.7681, 9.7681, 9.7681, 9.0870, 9.7681, 9.7681,
        8.9033, 9.7681, 9.0870, 9.0870, 9.7681, 9.7681, 9.7681])
new_beam_scores: tensor([[10.4776, 10.0585, 10.4776, 10.4776, 10.4776, 10.4776,  9.5855, 10.4776,
         10.4776,  9.6234, 10.0585,  9.5855,  9.5886, 10.4776, 10.4776, 10.4776]])
new_beam seq: tensor([[1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[10.4776, 10.0585, 10.4776, 10.4776, 10.4776, 10.4776,  9.5855, 10.4776,
         10.4776,  9.6234, 10.0585,  9.5855,  9.5886, 10.4776, 10.4776, 10.4776]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  11
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([10.4776, 10.0585, 10.4776, 10.4776, 10.4776, 10.4776,  9.5855, 10.4776,
        10.4776,  9.6234, 10.0585,  9.5855,  9.5886, 10.4776, 10.4776, 10.4776])
new_beam_scores: tensor([[11.4776, 11.0585, 11.4776, 11.4776, 11.4776, 11.4776, 10.5855, 11.4776,
         11.4776, 10.6234, 11.0585, 10.5855, 10.5886, 11.4776, 11.4776, 11.4776]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[11.4776, 11.0585, 11.4776, 11.4776, 11.4776, 11.4776, 10.5855, 11.4776,
         11.4776, 10.6234, 11.0585, 10.5855, 10.5886, 11.4776, 11.4776, 11.4776]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  12
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([11.4776, 11.0585, 11.4776, 11.4776, 11.4776, 11.4776, 10.5855, 11.4776,
        11.4776, 10.6234, 11.0585, 10.5855, 10.5886, 11.4776, 11.4776, 11.4776])
new_beam_scores: tensor([[12.4776, 12.0585, 12.4776, 12.4776, 12.4776, 12.4776, 11.5855, 12.4776,
         12.4776, 11.6234, 12.0585, 11.5855, 11.5886, 12.4776, 12.4776, 12.4776]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[12.4776, 12.0585, 12.4776, 12.4776, 12.4776, 12.4776, 11.5855, 12.4776,
         12.4776, 11.6234, 12.0585, 11.5855, 11.5886, 12.4776, 12.4776, 12.4776]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  13
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9981, 0.8700, 0.9981, 0.9981, 0.9981, 0.9981, 0.9985, 0.9981, 0.9981,
         0.9984, 0.8700, 0.9985, 0.8854, 0.9981, 0.9981, 0.9981]])
scores: tensor([12.4776, 12.0585, 12.4776, 12.4776, 12.4776, 12.4776, 11.5855, 12.4776,
        12.4776, 11.6234, 12.0585, 11.5855, 11.5886, 12.4776, 12.4776, 12.4776])
new_beam_scores: tensor([[13.4757, 12.9286, 13.4757, 13.4757, 13.4757, 13.4757, 12.5839, 13.4757,
         13.4757, 12.6217, 12.9286, 12.5839, 12.4740, 13.4757, 13.4757, 13.4757]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[13.4757, 12.9286, 13.4757, 13.4757, 13.4757, 13.4757, 12.5839, 13.4757,
         13.4757, 12.6217, 12.9286, 12.5839, 12.4740, 13.4757, 13.4757, 13.4757]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  14
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9994, 0.9998, 0.9994, 0.9994, 0.9994, 0.9994, 0.9994, 0.9994, 0.9994,
         0.9994, 0.9998, 0.9994, 0.9999, 0.9994, 0.9994, 0.9994]])
scores: tensor([13.4757, 12.9286, 13.4757, 13.4757, 13.4757, 13.4757, 12.5839, 13.4757,
        13.4757, 12.6217, 12.9286, 12.5839, 12.4740, 13.4757, 13.4757, 13.4757])
new_beam_scores: tensor([[14.4751, 13.9284, 14.4751, 14.4751, 14.4751, 14.4751, 13.5833, 14.4751,
         14.4751, 13.6211, 13.9284, 13.5833, 13.4739, 14.4751, 14.4751, 14.4751]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[14.4751, 13.9284, 14.4751, 14.4751, 14.4751, 14.4751, 13.5833, 14.4751,
         14.4751, 13.6211, 13.9284, 13.5833, 13.4739, 14.4751, 14.4751, 14.4751]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  15
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([14.4751, 13.9284, 14.4751, 14.4751, 14.4751, 14.4751, 13.5833, 14.4751,
        14.4751, 13.6211, 13.9284, 13.5833, 13.4739, 14.4751, 14.4751, 14.4751])
new_beam_scores: tensor([[15.4751, 14.9284, 15.4751, 15.4751, 15.4751, 15.4751, 14.5833, 15.4751,
         15.4751, 14.6211, 14.9284, 14.5833, 14.4739, 15.4751, 15.4751, 15.4751]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[15.4751, 14.9284, 15.4751, 15.4751, 15.4751, 15.4751, 14.5833, 15.4751,
         15.4751, 14.6211, 14.9284, 14.5833, 14.4739, 15.4751, 15.4751, 15.4751]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  16
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([15.4751, 14.9284, 15.4751, 15.4751, 15.4751, 15.4751, 14.5833, 15.4751,
        15.4751, 14.6211, 14.9284, 14.5833, 14.4739, 15.4751, 15.4751, 15.4751])
new_beam_scores: tensor([[16.4751, 15.9284, 16.4751, 16.4751, 16.4751, 16.4751, 15.5833, 16.4751,
         16.4751, 15.6211, 15.9284, 15.5833, 15.4739, 16.4751, 16.4751, 16.4751]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[16.4751, 15.9284, 16.4751, 16.4751, 16.4751, 16.4751, 15.5833, 16.4751,
         16.4751, 15.6211, 15.9284, 15.5833, 15.4739, 16.4751, 16.4751, 16.4751]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  17
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([16.4751, 15.9284, 16.4751, 16.4751, 16.4751, 16.4751, 15.5833, 16.4751,
        16.4751, 15.6211, 15.9284, 15.5833, 15.4739, 16.4751, 16.4751, 16.4751])
new_beam_scores: tensor([[17.4750, 16.9284, 17.4750, 17.4750, 17.4750, 17.4750, 16.5833, 17.4750,
         17.4750, 16.6211, 16.9284, 16.5833, 16.4739, 17.4750, 17.4750, 17.4750]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[17.4750, 16.9284, 17.4750, 17.4750, 17.4750, 17.4750, 16.5833, 17.4750,
         17.4750, 16.6211, 16.9284, 16.5833, 16.4739, 17.4750, 17.4750, 17.4750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  18
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([17.4750, 16.9284, 17.4750, 17.4750, 17.4750, 17.4750, 16.5833, 17.4750,
        17.4750, 16.6211, 16.9284, 16.5833, 16.4739, 17.4750, 17.4750, 17.4750])
new_beam_scores: tensor([[18.4750, 17.9284, 18.4750, 18.4750, 18.4750, 18.4750, 17.5833, 18.4750,
         18.4750, 17.6211, 17.9284, 17.5833, 17.4739, 18.4750, 18.4750, 18.4750]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[18.4750, 17.9284, 18.4750, 18.4750, 18.4750, 18.4750, 17.5833, 18.4750,
         18.4750, 17.6211, 17.9284, 17.5833, 17.4739, 18.4750, 18.4750, 18.4750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  19
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([18.4750, 17.9284, 18.4750, 18.4750, 18.4750, 18.4750, 17.5833, 18.4750,
        18.4750, 17.6211, 17.9284, 17.5833, 17.4739, 18.4750, 18.4750, 18.4750])
new_beam_scores: tensor([[19.4750, 18.9284, 19.4750, 19.4750, 19.4750, 19.4750, 18.5833, 19.4750,
         19.4750, 18.6211, 18.9284, 18.5833, 18.4739, 19.4750, 19.4750, 19.4750]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[19.4750, 18.9284, 19.4750, 19.4750, 19.4750, 19.4750, 18.5833, 19.4750,
         19.4750, 18.6211, 18.9284, 18.5833, 18.4739, 19.4750, 19.4750, 19.4750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  20
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([19.4750, 18.9284, 19.4750, 19.4750, 19.4750, 19.4750, 18.5833, 19.4750,
        19.4750, 18.6211, 18.9284, 18.5833, 18.4739, 19.4750, 19.4750, 19.4750])
new_beam_scores: tensor([[20.4750, 19.9284, 20.4750, 20.4750, 20.4750, 20.4750, 19.5833, 20.4750,
         20.4750, 19.6211, 19.9284, 19.5833, 19.4738, 20.4750, 20.4750, 20.4750]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[20.4750, 19.9284, 20.4750, 20.4750, 20.4750, 20.4750, 19.5833, 20.4750,
         20.4750, 19.6211, 19.9284, 19.5833, 19.4738, 20.4750, 20.4750, 20.4750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  21
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([20.4750, 19.9284, 20.4750, 20.4750, 20.4750, 20.4750, 19.5833, 20.4750,
        20.4750, 19.6211, 19.9284, 19.5833, 19.4738, 20.4750, 20.4750, 20.4750])
new_beam_scores: tensor([[21.4750, 20.9284, 21.4750, 21.4750, 21.4750, 21.4750, 20.5833, 21.4750,
         21.4750, 20.6211, 20.9284, 20.5833, 20.4738, 21.4750, 21.4750, 21.4750]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[21.4750, 20.9284, 21.4750, 21.4750, 21.4750, 21.4750, 20.5833, 21.4750,
         21.4750, 20.6211, 20.9284, 20.5833, 20.4738, 21.4750, 21.4750, 21.4750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  22
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([21.4750, 20.9284, 21.4750, 21.4750, 21.4750, 21.4750, 20.5833, 21.4750,
        21.4750, 20.6211, 20.9284, 20.5833, 20.4738, 21.4750, 21.4750, 21.4750])
new_beam_scores: tensor([[22.4750, 21.9284, 22.4750, 22.4750, 22.4750, 22.4750, 21.5833, 22.4750,
         22.4750, 21.6211, 21.9284, 21.5833, 21.4738, 22.4750, 22.4750, 22.4750]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[22.4750, 21.9284, 22.4750, 22.4750, 22.4750, 22.4750, 21.5833, 22.4750,
         22.4750, 21.6211, 21.9284, 21.5833, 21.4738, 22.4750, 22.4750, 22.4750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  23
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([22.4750, 21.9284, 22.4750, 22.4750, 22.4750, 22.4750, 21.5833, 22.4750,
        22.4750, 21.6211, 21.9284, 21.5833, 21.4738, 22.4750, 22.4750, 22.4750])
new_beam_scores: tensor([[23.4750, 22.9284, 23.4750, 23.4750, 23.4750, 23.4750, 22.5833, 23.4750,
         23.4750, 22.6211, 22.9284, 22.5833, 22.4738, 23.4750, 23.4750, 23.4750]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[23.4750, 22.9284, 23.4750, 23.4750, 23.4750, 23.4750, 22.5833, 23.4750,
         23.4750, 22.6211, 22.9284, 22.5833, 22.4738, 23.4750, 23.4750, 23.4750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  24
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([23.4750, 22.9284, 23.4750, 23.4750, 23.4750, 23.4750, 22.5833, 23.4750,
        23.4750, 22.6211, 22.9284, 22.5833, 22.4738, 23.4750, 23.4750, 23.4750])
new_beam_scores: tensor([[24.4750, 23.9284, 24.4750, 24.4750, 24.4750, 24.4750, 23.5833, 24.4750,
         24.4750, 23.6211, 23.9284, 23.5833, 23.4738, 24.4750, 24.4750, 24.4750]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[24.4750, 23.9284, 24.4750, 24.4750, 24.4750, 24.4750, 23.5833, 24.4750,
         24.4750, 23.6211, 23.9284, 23.5833, 23.4738, 24.4750, 24.4750, 24.4750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  25
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([24.4750, 23.9284, 24.4750, 24.4750, 24.4750, 24.4750, 23.5833, 24.4750,
        24.4750, 23.6211, 23.9284, 23.5833, 23.4738, 24.4750, 24.4750, 24.4750])
new_beam_scores: tensor([[25.4750, 24.9284, 25.4750, 25.4750, 25.4750, 25.4750, 24.5833, 25.4750,
         25.4750, 24.6211, 24.9284, 24.5833, 24.4738, 25.4750, 25.4750, 25.4750]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[25.4750, 24.9284, 25.4750, 25.4750, 25.4750, 25.4750, 24.5833, 25.4750,
         25.4750, 24.6211, 24.9284, 24.5833, 24.4738, 25.4750, 25.4750, 25.4750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  26
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([25.4750, 24.9284, 25.4750, 25.4750, 25.4750, 25.4750, 24.5833, 25.4750,
        25.4750, 24.6211, 24.9284, 24.5833, 24.4738, 25.4750, 25.4750, 25.4750])
new_beam_scores: tensor([[26.4750, 25.9284, 26.4750, 26.4750, 26.4750, 26.4750, 25.5833, 26.4750,
         26.4750, 25.6211, 25.9284, 25.5833, 25.4738, 26.4750, 26.4750, 26.4750]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[26.4750, 25.9284, 26.4750, 26.4750, 26.4750, 26.4750, 25.5833, 26.4750,
         26.4750, 25.6211, 25.9284, 25.5833, 25.4738, 26.4750, 26.4750, 26.4750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  27
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([26.4750, 25.9284, 26.4750, 26.4750, 26.4750, 26.4750, 25.5833, 26.4750,
        26.4750, 25.6211, 25.9284, 25.5833, 25.4738, 26.4750, 26.4750, 26.4750])
new_beam_scores: tensor([[27.4750, 26.9284, 27.4750, 27.4750, 27.4750, 27.4750, 26.5833, 27.4750,
         27.4750, 26.6211, 26.9284, 26.5833, 26.4738, 27.4750, 27.4750, 27.4750]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[27.4750, 26.9284, 27.4750, 27.4750, 27.4750, 27.4750, 26.5833, 27.4750,
         27.4750, 26.6211, 26.9284, 26.5833, 26.4738, 27.4750, 27.4750, 27.4750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  28
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [1],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [1],
        [3],
        [1],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9994, 1.0000, 0.9994, 0.9994, 0.9994, 0.9994, 0.9993, 0.9994, 0.9994,
         0.9993, 1.0000, 0.9993, 1.0000, 0.9994, 0.9994, 0.9994]])
scores: tensor([27.4750, 26.9284, 27.4750, 27.4750, 27.4750, 27.4750, 26.5833, 27.4750,
        27.4750, 26.6211, 26.9284, 26.5833, 26.4738, 27.4750, 27.4750, 27.4750])
new_beam_scores: tensor([[28.4744, 27.9284, 28.4744, 28.4744, 28.4744, 28.4744, 27.5826, 28.4744,
         28.4744, 27.6204, 27.9284, 27.5826, 27.4738, 28.4744, 28.4744, 28.4744]])
new_beam seq: tensor([[3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 1, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[28.4744, 27.9284, 28.4744, 28.4744, 28.4744, 28.4744, 27.5826, 28.4744,
         28.4744, 27.6204, 27.9284, 27.5826, 27.4738, 28.4744, 28.4744, 28.4744]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 1, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  29
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([28.4744, 27.9284, 28.4744, 28.4744, 28.4744, 28.4744, 27.5826, 28.4744,
        28.4744, 27.6204, 27.9284, 27.5826, 27.4738, 28.4744, 28.4744, 28.4744])
new_beam_scores: tensor([[29.4744, 28.9284, 29.4744, 29.4744, 29.4744, 29.4744, 28.5826, 29.4744,
         29.4744, 28.6204, 28.9284, 28.5826, 28.4738, 29.4744, 29.4744, 29.4744]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[29.4744, 28.9284, 29.4744, 29.4744, 29.4744, 29.4744, 28.5826, 29.4744,
         29.4744, 28.6204, 28.9284, 28.5826, 28.4738, 29.4744, 29.4744, 29.4744]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  30
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 0.9997, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         0.9999, 0.9997, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([29.4744, 28.9284, 29.4744, 29.4744, 29.4744, 29.4744, 28.5826, 29.4744,
        29.4744, 28.6204, 28.9284, 28.5826, 28.4738, 29.4744, 29.4744, 29.4744])
new_beam_scores: tensor([[30.4744, 29.9281, 30.4744, 30.4744, 30.4744, 30.4744, 29.5826, 30.4744,
         30.4744, 29.6203, 29.9281, 29.5826, 29.4738, 30.4744, 30.4744, 30.4744]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[30.4744, 29.9281, 30.4744, 30.4744, 30.4744, 30.4744, 29.5826, 30.4744,
         30.4744, 29.6203, 29.9281, 29.5826, 29.4738, 30.4744, 30.4744, 30.4744]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  31
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 0.9970, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 0.9970, 1.0000, 0.9950, 1.0000, 1.0000, 1.0000]])
scores: tensor([30.4744, 29.9281, 30.4744, 30.4744, 30.4744, 30.4744, 29.5826, 30.4744,
        30.4744, 29.6203, 29.9281, 29.5826, 29.4738, 30.4744, 30.4744, 30.4744])
new_beam_scores: tensor([[31.4744, 30.9251, 31.4744, 31.4744, 31.4744, 31.4744, 30.5826, 31.4744,
         31.4744, 30.6203, 30.9251, 30.5826, 30.4688, 31.4744, 31.4744, 31.4744]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[31.4744, 30.9251, 31.4744, 31.4744, 31.4744, 31.4744, 30.5826, 31.4744,
         31.4744, 30.6203, 30.9251, 30.5826, 30.4688, 31.4744, 31.4744, 31.4744]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  32
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9993, 1.0000, 0.9993, 0.9993, 0.9993, 0.9993, 0.9984, 0.9993, 0.9993,
         0.9927, 1.0000, 0.9984, 0.9999, 0.9993, 0.9993, 0.9993]])
scores: tensor([31.4744, 30.9251, 31.4744, 31.4744, 31.4744, 31.4744, 30.5826, 31.4744,
        31.4744, 30.6203, 30.9251, 30.5826, 30.4688, 31.4744, 31.4744, 31.4744])
new_beam_scores: tensor([[32.4737, 31.9250, 32.4737, 32.4737, 32.4737, 32.4737, 31.5809, 32.4737,
         32.4737, 31.6130, 31.9250, 31.5809, 31.4687, 32.4737, 32.4737, 32.4737]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[32.4737, 31.9250, 32.4737, 32.4737, 32.4737, 32.4737, 31.5809, 32.4737,
         32.4737, 31.6130, 31.9250, 31.5809, 31.4687, 32.4737, 32.4737, 32.4737]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  33
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9999, 0.9996, 0.9999, 0.9999, 0.9999, 0.9999, 0.9997, 0.9999, 0.9999,
         0.9999, 0.9996, 0.9997, 0.9981, 0.9999, 0.9999, 0.9999]])
scores: tensor([32.4737, 31.9250, 32.4737, 32.4737, 32.4737, 32.4737, 31.5809, 32.4737,
        32.4737, 31.6130, 31.9250, 31.5809, 31.4687, 32.4737, 32.4737, 32.4737])
new_beam_scores: tensor([[33.4736, 32.9246, 33.4736, 33.4736, 33.4736, 33.4736, 32.5807, 33.4736,
         33.4736, 32.6130, 32.9246, 32.5807, 32.4669, 33.4736, 33.4736, 33.4736]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[33.4736, 32.9246, 33.4736, 33.4736, 33.4736, 33.4736, 32.5807, 33.4736,
         33.4736, 32.6130, 32.9246, 32.5807, 32.4669, 33.4736, 33.4736, 33.4736]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  34
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([33.4736, 32.9246, 33.4736, 33.4736, 33.4736, 33.4736, 32.5807, 33.4736,
        33.4736, 32.6130, 32.9246, 32.5807, 32.4669, 33.4736, 33.4736, 33.4736])
new_beam_scores: tensor([[34.4736, 33.9246, 34.4736, 34.4736, 34.4736, 34.4736, 33.5807, 34.4736,
         34.4736, 33.6130, 33.9246, 33.5807, 33.4669, 34.4736, 34.4736, 34.4736]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[34.4736, 33.9246, 34.4736, 34.4736, 34.4736, 34.4736, 33.5807, 34.4736,
         34.4736, 33.6130, 33.9246, 33.5807, 33.4669, 34.4736, 34.4736, 34.4736]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  35
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([34.4736, 33.9246, 34.4736, 34.4736, 34.4736, 34.4736, 33.5807, 34.4736,
        34.4736, 33.6130, 33.9246, 33.5807, 33.4669, 34.4736, 34.4736, 34.4736])
new_beam_scores: tensor([[35.4736, 34.9246, 35.4736, 35.4736, 35.4736, 35.4736, 34.5807, 35.4736,
         35.4736, 34.6130, 34.9246, 34.5807, 34.4669, 35.4736, 35.4736, 35.4736]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[35.4736, 34.9246, 35.4736, 35.4736, 35.4736, 35.4736, 34.5807, 35.4736,
         35.4736, 34.6130, 34.9246, 34.5807, 34.4669, 35.4736, 35.4736, 35.4736]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  36
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9833, 0.9993, 0.9833, 0.9833, 0.9833, 0.9833, 0.9650, 0.9833, 0.9833,
         0.0061, 0.9993, 0.9650, 0.9988, 0.9833, 0.9833, 0.9833]])
scores: tensor([35.4736, 34.9246, 35.4736, 35.4736, 35.4736, 35.4736, 34.5807, 35.4736,
        35.4736, 34.6130, 34.9246, 34.5807, 34.4669, 35.4736, 35.4736, 35.4736])
new_beam_scores: tensor([[36.4569, 35.9240, 36.4569, 36.4569, 36.4569, 36.4569, 35.5456, 36.4569,
         36.4569, 34.6191, 35.9240, 35.5456, 35.4656, 36.4569, 36.4569, 36.4569]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[36.4569, 35.9240, 36.4569, 36.4569, 36.4569, 36.4569, 35.5456, 36.4569,
         36.4569, 34.6191, 35.9240, 35.5456, 35.4656, 36.4569, 36.4569, 36.4569]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  37
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([36.4569, 35.9240, 36.4569, 36.4569, 36.4569, 36.4569, 35.5456, 36.4569,
        36.4569, 34.6191, 35.9240, 35.5456, 35.4656, 36.4569, 36.4569, 36.4569])
new_beam_scores: tensor([[37.4569, 36.9240, 37.4569, 37.4569, 37.4569, 37.4569, 36.5456, 37.4569,
         37.4569, 35.6191, 36.9240, 36.5456, 36.4656, 37.4569, 37.4569, 37.4569]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[37.4569, 36.9240, 37.4569, 37.4569, 37.4569, 37.4569, 36.5456, 37.4569,
         37.4569, 35.6191, 36.9240, 36.5456, 36.4656, 37.4569, 37.4569, 37.4569]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  38
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([37.4569, 36.9240, 37.4569, 37.4569, 37.4569, 37.4569, 36.5456, 37.4569,
        37.4569, 35.6191, 36.9240, 36.5456, 36.4656, 37.4569, 37.4569, 37.4569])
new_beam_scores: tensor([[38.4569, 37.9240, 38.4569, 38.4569, 38.4569, 38.4569, 37.5456, 38.4569,
         38.4569, 36.6191, 37.9240, 37.5456, 37.4656, 38.4569, 38.4569, 38.4569]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[38.4569, 37.9240, 38.4569, 38.4569, 38.4569, 38.4569, 37.5456, 38.4569,
         38.4569, 36.6191, 37.9240, 37.5456, 37.4656, 38.4569, 38.4569, 38.4569]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  39
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9782, 0.9968, 0.9782, 0.9782, 0.9782, 0.9782, 0.9757, 0.9782, 0.9782,
         0.9812, 0.9968, 0.9757, 0.9965, 0.9782, 0.9782, 0.9782]])
scores: tensor([38.4569, 37.9240, 38.4569, 38.4569, 38.4569, 38.4569, 37.5456, 38.4569,
        38.4569, 36.6191, 37.9240, 37.5456, 37.4656, 38.4569, 38.4569, 38.4569])
new_beam_scores: tensor([[39.4351, 38.9207, 39.4351, 39.4351, 39.4351, 39.4351, 38.5213, 39.4351,
         39.4351, 37.6002, 38.9207, 38.5213, 38.4621, 39.4351, 39.4351, 39.4351]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[39.4351, 38.9207, 39.4351, 39.4351, 39.4351, 39.4351, 38.5213, 39.4351,
         39.4351, 37.6002, 38.9207, 38.5213, 38.4621, 39.4351, 39.4351, 39.4351]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  40
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([39.4351, 38.9207, 39.4351, 39.4351, 39.4351, 39.4351, 38.5213, 39.4351,
        39.4351, 37.6002, 38.9207, 38.5213, 38.4621, 39.4351, 39.4351, 39.4351])
new_beam_scores: tensor([[40.4351, 39.9207, 40.4351, 40.4351, 40.4351, 40.4351, 39.5213, 40.4351,
         40.4351, 38.6002, 39.9207, 39.5213, 39.4621, 40.4351, 40.4351, 40.4351]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[40.4351, 39.9207, 40.4351, 40.4351, 40.4351, 40.4351, 39.5213, 40.4351,
         40.4351, 38.6002, 39.9207, 39.5213, 39.4621, 40.4351, 40.4351, 40.4351]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  41
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([40.4351, 39.9207, 40.4351, 40.4351, 40.4351, 40.4351, 39.5213, 40.4351,
        40.4351, 38.6002, 39.9207, 39.5213, 39.4621, 40.4351, 40.4351, 40.4351])
new_beam_scores: tensor([[41.4351, 40.9207, 41.4351, 41.4351, 41.4351, 41.4351, 40.5213, 41.4351,
         41.4351, 39.6002, 40.9207, 40.5213, 40.4621, 41.4351, 41.4351, 41.4351]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[41.4351, 40.9207, 41.4351, 41.4351, 41.4351, 41.4351, 40.5213, 41.4351,
         41.4351, 39.6002, 40.9207, 40.5213, 40.4621, 41.4351, 41.4351, 41.4351]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  42
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9977, 0.9921, 0.9977, 0.9977, 0.9977, 0.9977, 0.9975, 0.9977, 0.9977,
         0.9989, 0.9921, 0.9975, 0.9913, 0.9977, 0.9977, 0.9977]])
scores: tensor([41.4351, 40.9207, 41.4351, 41.4351, 41.4351, 41.4351, 40.5213, 41.4351,
        41.4351, 39.6002, 40.9207, 40.5213, 40.4621, 41.4351, 41.4351, 41.4351])
new_beam_scores: tensor([[42.4329, 41.9128, 42.4329, 42.4329, 42.4329, 42.4329, 41.5188, 42.4329,
         42.4329, 40.5992, 41.9128, 41.5188, 41.4534, 42.4329, 42.4329, 42.4329]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[42.4329, 41.9128, 42.4329, 42.4329, 42.4329, 42.4329, 41.5188, 42.4329,
         42.4329, 40.5992, 41.9128, 41.5188, 41.4534, 42.4329, 42.4329, 42.4329]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  43
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([42.4329, 41.9128, 42.4329, 42.4329, 42.4329, 42.4329, 41.5188, 42.4329,
        42.4329, 40.5992, 41.9128, 41.5188, 41.4534, 42.4329, 42.4329, 42.4329])
new_beam_scores: tensor([[43.4329, 42.9128, 43.4329, 43.4329, 43.4329, 43.4329, 42.5188, 43.4329,
         43.4329, 41.5992, 42.9128, 42.5188, 42.4534, 43.4329, 43.4329, 43.4329]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[43.4329, 42.9128, 43.4329, 43.4329, 43.4329, 43.4329, 42.5188, 43.4329,
         43.4329, 41.5992, 42.9128, 42.5188, 42.4534, 43.4329, 43.4329, 43.4329]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  44
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([43.4329, 42.9128, 43.4329, 43.4329, 43.4329, 43.4329, 42.5188, 43.4329,
        43.4329, 41.5992, 42.9128, 42.5188, 42.4534, 43.4329, 43.4329, 43.4329])
new_beam_scores: tensor([[44.4329, 43.9128, 44.4329, 44.4329, 44.4329, 44.4329, 43.5188, 44.4329,
         44.4329, 42.5992, 43.9128, 43.5188, 43.4534, 44.4329, 44.4329, 44.4329]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[44.4329, 43.9128, 44.4329, 44.4329, 44.4329, 44.4329, 43.5188, 44.4329,
         44.4329, 42.5992, 43.9128, 43.5188, 43.4534, 44.4329, 44.4329, 44.4329]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  45
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([44.4329, 43.9128, 44.4329, 44.4329, 44.4329, 44.4329, 43.5188, 44.4329,
        44.4329, 42.5992, 43.9128, 43.5188, 43.4534, 44.4329, 44.4329, 44.4329])
new_beam_scores: tensor([[45.4329, 44.9128, 45.4329, 45.4329, 45.4329, 45.4329, 44.5188, 45.4329,
         45.4329, 43.5992, 44.9128, 44.5188, 44.4534, 45.4329, 45.4329, 45.4329]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[45.4329, 44.9128, 45.4329, 45.4329, 45.4329, 45.4329, 44.5188, 45.4329,
         45.4329, 43.5992, 44.9128, 44.5188, 44.4534, 45.4329, 45.4329, 45.4329]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  46
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([45.4329, 44.9128, 45.4329, 45.4329, 45.4329, 45.4329, 44.5188, 45.4329,
        45.4329, 43.5992, 44.9128, 44.5188, 44.4534, 45.4329, 45.4329, 45.4329])
new_beam_scores: tensor([[46.4329, 45.9128, 46.4329, 46.4329, 46.4329, 46.4329, 45.5187, 46.4329,
         46.4329, 44.5992, 45.9128, 45.5187, 45.4534, 46.4329, 46.4329, 46.4329]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[46.4329, 45.9128, 46.4329, 46.4329, 46.4329, 46.4329, 45.5187, 46.4329,
         46.4329, 44.5992, 45.9128, 45.5187, 45.4534, 46.4329, 46.4329, 46.4329]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  47
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([46.4329, 45.9128, 46.4329, 46.4329, 46.4329, 46.4329, 45.5187, 46.4329,
        46.4329, 44.5992, 45.9128, 45.5187, 45.4534, 46.4329, 46.4329, 46.4329])
new_beam_scores: tensor([[47.4329, 46.9128, 47.4329, 47.4329, 47.4329, 47.4329, 46.5187, 47.4329,
         47.4329, 45.5992, 46.9128, 46.5187, 46.4534, 47.4329, 47.4329, 47.4329]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[47.4329, 46.9128, 47.4329, 47.4329, 47.4329, 47.4329, 46.5187, 47.4329,
         47.4329, 45.5992, 46.9128, 46.5187, 46.4534, 47.4329, 47.4329, 47.4329]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  48
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([47.4329, 46.9128, 47.4329, 47.4329, 47.4329, 47.4329, 46.5187, 47.4329,
        47.4329, 45.5992, 46.9128, 46.5187, 46.4534, 47.4329, 47.4329, 47.4329])
new_beam_scores: tensor([[48.4328, 47.9128, 48.4328, 48.4328, 48.4328, 48.4328, 47.5187, 48.4328,
         48.4328, 46.5992, 47.9128, 47.5187, 47.4534, 48.4328, 48.4328, 48.4328]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[48.4328, 47.9128, 48.4328, 48.4328, 48.4328, 48.4328, 47.5187, 48.4328,
         48.4328, 46.5992, 47.9128, 47.5187, 47.4534, 48.4328, 48.4328, 48.4328]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  49
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([48.4328, 47.9128, 48.4328, 48.4328, 48.4328, 48.4328, 47.5187, 48.4328,
        48.4328, 46.5992, 47.9128, 47.5187, 47.4534, 48.4328, 48.4328, 48.4328])
new_beam_scores: tensor([[49.4328, 48.9128, 49.4328, 49.4328, 49.4328, 49.4328, 48.5187, 49.4328,
         49.4328, 47.5992, 48.9128, 48.5187, 48.4534, 49.4328, 49.4328, 49.4328]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[49.4328, 48.9128, 49.4328, 49.4328, 49.4328, 49.4328, 48.5187, 49.4328,
         49.4328, 47.5992, 48.9128, 48.5187, 48.4534, 49.4328, 49.4328, 49.4328]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  50
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([49.4328, 48.9128, 49.4328, 49.4328, 49.4328, 49.4328, 48.5187, 49.4328,
        49.4328, 47.5992, 48.9128, 48.5187, 48.4534, 49.4328, 49.4328, 49.4328])
new_beam_scores: tensor([[50.4328, 49.9128, 50.4328, 50.4328, 50.4328, 50.4328, 49.5187, 50.4328,
         50.4328, 48.5992, 49.9128, 49.5187, 49.4534, 50.4328, 50.4328, 50.4328]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[50.4328, 49.9128, 50.4328, 50.4328, 50.4328, 50.4328, 49.5187, 50.4328,
         50.4328, 48.5992, 49.9128, 49.5187, 49.4534, 50.4328, 50.4328, 50.4328]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  51
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([50.4328, 49.9128, 50.4328, 50.4328, 50.4328, 50.4328, 49.5187, 50.4328,
        50.4328, 48.5992, 49.9128, 49.5187, 49.4534, 50.4328, 50.4328, 50.4328])
new_beam_scores: tensor([[51.4328, 50.9128, 51.4328, 51.4328, 51.4328, 51.4328, 50.5187, 51.4328,
         51.4328, 49.5992, 50.9128, 50.5187, 50.4534, 51.4328, 51.4328, 51.4328]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[51.4328, 50.9128, 51.4328, 51.4328, 51.4328, 51.4328, 50.5187, 51.4328,
         51.4328, 49.5992, 50.9128, 50.5187, 50.4534, 51.4328, 51.4328, 51.4328]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  52
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([51.4328, 50.9128, 51.4328, 51.4328, 51.4328, 51.4328, 50.5187, 51.4328,
        51.4328, 49.5992, 50.9128, 50.5187, 50.4534, 51.4328, 51.4328, 51.4328])
new_beam_scores: tensor([[52.4328, 51.9128, 52.4328, 52.4328, 52.4328, 52.4328, 51.5187, 52.4328,
         52.4328, 50.5992, 51.9128, 51.5187, 51.4534, 52.4328, 52.4328, 52.4328]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[52.4328, 51.9128, 52.4328, 52.4328, 52.4328, 52.4328, 51.5187, 52.4328,
         52.4328, 50.5992, 51.9128, 51.5187, 51.4534, 52.4328, 52.4328, 52.4328]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  53
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([52.4328, 51.9128, 52.4328, 52.4328, 52.4328, 52.4328, 51.5187, 52.4328,
        52.4328, 50.5992, 51.9128, 51.5187, 51.4534, 52.4328, 52.4328, 52.4328])
new_beam_scores: tensor([[53.4328, 52.9128, 53.4328, 53.4328, 53.4328, 53.4328, 52.5187, 53.4328,
         53.4328, 51.5992, 52.9128, 52.5187, 52.4534, 53.4328, 53.4328, 53.4328]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[53.4328, 52.9128, 53.4328, 53.4328, 53.4328, 53.4328, 52.5187, 53.4328,
         53.4328, 51.5992, 52.9128, 52.5187, 52.4534, 53.4328, 53.4328, 53.4328]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  54
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([53.4328, 52.9128, 53.4328, 53.4328, 53.4328, 53.4328, 52.5187, 53.4328,
        53.4328, 51.5992, 52.9128, 52.5187, 52.4534, 53.4328, 53.4328, 53.4328])
new_beam_scores: tensor([[54.4328, 53.9128, 54.4328, 54.4328, 54.4328, 54.4328, 53.5187, 54.4328,
         54.4328, 52.5992, 53.9128, 53.5187, 53.4534, 54.4328, 54.4328, 54.4328]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[54.4328, 53.9128, 54.4328, 54.4328, 54.4328, 54.4328, 53.5187, 54.4328,
         54.4328, 52.5992, 53.9128, 53.5187, 53.4534, 54.4328, 54.4328, 54.4328]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  55
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([54.4328, 53.9128, 54.4328, 54.4328, 54.4328, 54.4328, 53.5187, 54.4328,
        54.4328, 52.5992, 53.9128, 53.5187, 53.4534, 54.4328, 54.4328, 54.4328])
new_beam_scores: tensor([[55.4328, 54.9128, 55.4328, 55.4328, 55.4328, 55.4328, 54.5187, 55.4328,
         55.4328, 53.5992, 54.9128, 54.5187, 54.4534, 55.4328, 55.4328, 55.4328]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[55.4328, 54.9128, 55.4328, 55.4328, 55.4328, 55.4328, 54.5187, 55.4328,
         55.4328, 53.5992, 54.9128, 54.5187, 54.4534, 55.4328, 55.4328, 55.4328]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  56
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([55.4328, 54.9128, 55.4328, 55.4328, 55.4328, 55.4328, 54.5187, 55.4328,
        55.4328, 53.5992, 54.9128, 54.5187, 54.4534, 55.4328, 55.4328, 55.4328])
new_beam_scores: tensor([[56.4328, 55.9128, 56.4328, 56.4328, 56.4328, 56.4328, 55.5187, 56.4328,
         56.4328, 54.5992, 55.9128, 55.5187, 55.4534, 56.4328, 56.4328, 56.4328]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[56.4328, 55.9128, 56.4328, 56.4328, 56.4328, 56.4328, 55.5187, 56.4328,
         56.4328, 54.5992, 55.9128, 55.5187, 55.4534, 56.4328, 56.4328, 56.4328]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  57
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([56.4328, 55.9128, 56.4328, 56.4328, 56.4328, 56.4328, 55.5187, 56.4328,
        56.4328, 54.5992, 55.9128, 55.5187, 55.4534, 56.4328, 56.4328, 56.4328])
new_beam_scores: tensor([[57.4328, 56.9128, 57.4328, 57.4328, 57.4328, 57.4328, 56.5187, 57.4328,
         57.4328, 55.5992, 56.9128, 56.5187, 56.4534, 57.4328, 57.4328, 57.4328]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[57.4328, 56.9128, 57.4328, 57.4328, 57.4328, 57.4328, 56.5187, 57.4328,
         57.4328, 55.5992, 56.9128, 56.5187, 56.4534, 57.4328, 57.4328, 57.4328]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  58
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([57.4328, 56.9128, 57.4328, 57.4328, 57.4328, 57.4328, 56.5187, 57.4328,
        57.4328, 55.5992, 56.9128, 56.5187, 56.4534, 57.4328, 57.4328, 57.4328])
new_beam_scores: tensor([[58.4328, 57.9128, 58.4328, 58.4328, 58.4328, 58.4328, 57.5187, 58.4328,
         58.4328, 56.5992, 57.9128, 57.5187, 57.4534, 58.4328, 58.4328, 58.4328]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[58.4328, 57.9128, 58.4328, 58.4328, 58.4328, 58.4328, 57.5187, 58.4328,
         58.4328, 56.5992, 57.9128, 57.5187, 57.4534, 58.4328, 58.4328, 58.4328]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  59
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([58.4328, 57.9128, 58.4328, 58.4328, 58.4328, 58.4328, 57.5187, 58.4328,
        58.4328, 56.5992, 57.9128, 57.5187, 57.4534, 58.4328, 58.4328, 58.4328])
new_beam_scores: tensor([[59.4328, 58.9128, 59.4328, 59.4328, 59.4328, 59.4328, 58.5187, 59.4328,
         59.4328, 57.5992, 58.9128, 58.5187, 58.4534, 59.4328, 59.4328, 59.4328]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[59.4328, 58.9128, 59.4328, 59.4328, 59.4328, 59.4328, 58.5187, 59.4328,
         59.4328, 57.5992, 58.9128, 58.5187, 58.4534, 59.4328, 59.4328, 59.4328]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  60
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [0],
        [3],
        [3],
        [3],
        [3],
        [0],
        [0],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([59.4328, 58.9128, 59.4328, 59.4328, 59.4328, 59.4328, 58.5187, 59.4328,
        59.4328, 57.5992, 58.9128, 58.5187, 58.4534, 59.4328, 59.4328, 59.4328])
new_beam_scores: tensor([[60.4328, 59.9128, 60.4328, 60.4328, 60.4328, 60.4328, 59.5187, 60.4328,
         60.4328, 58.5992, 59.9128, 59.5187, 59.4534, 60.4328, 60.4328, 60.4328]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 0, 0, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[60.4328, 59.9128, 60.4328, 60.4328, 60.4328, 60.4328, 59.5187, 60.4328,
         60.4328, 58.5992, 59.9128, 59.5187, 59.4534, 60.4328, 60.4328, 60.4328]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 0, 0, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  61
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [0],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([60.4328, 59.9128, 60.4328, 60.4328, 60.4328, 60.4328, 59.5187, 60.4328,
        60.4328, 58.5992, 59.9128, 59.5187, 59.4534, 60.4328, 60.4328, 60.4328])
new_beam_scores: tensor([[61.4328, 60.9128, 61.4328, 61.4328, 61.4328, 61.4328, 60.5187, 61.4328,
         61.4328, 59.5992, 60.9128, 60.5187, 60.4534, 61.4328, 61.4328, 61.4328]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[61.4328, 60.9128, 61.4328, 61.4328, 61.4328, 61.4328, 60.5187, 61.4328,
         61.4328, 59.5992, 60.9128, 60.5187, 60.4534, 61.4328, 61.4328, 61.4328]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  62
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [2],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([61.4328, 60.9128, 61.4328, 61.4328, 61.4328, 61.4328, 60.5187, 61.4328,
        61.4328, 59.5992, 60.9128, 60.5187, 60.4534, 61.4328, 61.4328, 61.4328])
new_beam_scores: tensor([[62.4328, 61.9128, 62.4328, 62.4328, 62.4328, 62.4328, 61.5187, 62.4328,
         62.4328, 60.5992, 61.9128, 61.5187, 61.4534, 62.4328, 62.4328, 62.4328]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[62.4328, 61.9128, 62.4328, 62.4328, 62.4328, 62.4328, 61.5187, 62.4328,
         62.4328, 60.5992, 61.9128, 61.5187, 61.4534, 62.4328, 62.4328, 62.4328]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  63
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([62.4328, 61.9128, 62.4328, 62.4328, 62.4328, 62.4328, 61.5187, 62.4328,
        62.4328, 60.5992, 61.9128, 61.5187, 61.4534, 62.4328, 62.4328, 62.4328])
new_beam_scores: tensor([[63.4328, 62.9128, 63.4328, 63.4328, 63.4328, 63.4328, 62.5187, 63.4328,
         63.4328, 61.5992, 62.9128, 62.5187, 62.4534, 63.4328, 63.4328, 63.4328]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[63.4328, 62.9128, 63.4328, 63.4328, 63.4328, 63.4328, 62.5187, 63.4328,
         63.4328, 61.5992, 62.9128, 62.5187, 62.4534, 63.4328, 63.4328, 63.4328]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 2, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [-1.1930, -1.1434,  3.4195, -0.9199],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  64
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([63.4328, 62.9128, 63.4328, 63.4328, 63.4328, 63.4328, 62.5187, 63.4328,
        63.4328, 61.5992, 62.9128, 62.5187, 62.4534, 63.4328, 63.4328, 63.4328])
new_beam_scores: tensor([[64.4328, 63.9128, 64.4328, 64.4328, 64.4328, 64.4328, 63.5187, 64.4328,
         64.4328, 62.5992, 63.9128, 63.5187, 63.4534, 64.4328, 64.4328, 64.4328]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[64.4328, 63.9128, 64.4328, 64.4328, 64.4328, 64.4328, 63.5187, 64.4328,
         64.4328, 62.5992, 63.9128, 63.5187, 63.4534, 64.4328, 64.4328, 64.4328]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 2, 2, 0], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [-1.1930, -1.1434,  3.4195, -0.9199],
        [-1.0978, -1.2065,  3.3430, -0.7000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1056, 4])
Iteration :  65
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1056])
size of new_beam_h_S: torch.Size([1, 1056, 4])
size of new_beam_logits: torch.Size([1, 1056, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         0.9999, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([64.4328, 63.9128, 64.4328, 64.4328, 64.4328, 64.4328, 63.5187, 64.4328,
        64.4328, 62.5992, 63.9128, 63.5187, 63.4534, 64.4328, 64.4328, 64.4328])
new_beam_scores: tensor([[65.4328, 64.9128, 65.4328, 65.4328, 65.4328, 65.4328, 64.5187, 65.4328,
         65.4328, 63.5991, 64.9128, 64.5187, 64.4534, 65.4328, 65.4328, 65.4328]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1056, 4])
new_beam_h_S size: torch.Size([1, 1056, 4])
sorted_scores: tensor([[65.4328, 64.9128, 65.4328, 65.4328, 65.4328, 65.4328, 64.5187, 65.4328,
         65.4328, 63.5991, 64.9128, 64.5187, 64.4534, 65.4328, 65.4328, 65.4328]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1056])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 2, 2, 2], dtype=torch.int32)
logits: tensor([[ 0.2248,  1.5734, -0.0130, -1.1496],
        [ 0.1636,  1.2655,  0.9141, -1.0465],
        [-0.4031,  0.9812,  1.3457, -0.6685],
        ...,
        [-1.1930, -1.1434,  3.4195, -0.9199],
        [-1.0978, -1.2065,  3.3430, -0.7000],
        [-1.1052, -0.4471,  1.1845, -0.2149]])
h_S size: torch.Size([1056, 4])
tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size expanded indices: torch.Size([1, 16, 66])
tensor([[[1, 1, 2,  ..., 2, 2, 2],
         [1, 1, 2,  ..., 2, 2, 2],
         [1, 1, 2,  ..., 2, 2, 2],
         ...,
         [1, 1, 2,  ..., 2, 2, 2],
         [1, 1, 2,  ..., 2, 2, 2],
         [1, 1, 2,  ..., 2, 2, 2]]], dtype=torch.int32)
final_scores: tensor([65.4328, 64.9128, 65.4328, 65.4328, 65.4328, 65.4328, 64.5187, 65.4328,
        65.4328, 63.5991, 64.9128, 64.5187, 64.4534, 65.4328, 65.4328, 65.4328])
final_seq: tensor([[1, 1, 2,  ..., 2, 2, 2],
        [1, 1, 2,  ..., 2, 2, 2],
        [1, 1, 2,  ..., 2, 2, 2],
        ...,
        [1, 1, 2,  ..., 2, 2, 2],
        [1, 1, 2,  ..., 2, 2, 2],
        [1, 1, 2,  ..., 2, 2, 2]], dtype=torch.int32)
final_logits: tensor([[[ 0.2248,  1.5734, -0.0130, -1.1496],
         [ 0.1636,  1.2655,  0.9141, -1.0465],
         [-0.4031,  0.9812,  1.3457, -0.6685],
         ...,
         [-1.1930, -1.1434,  3.4195, -0.9199],
         [-1.0978, -1.2065,  3.3430, -0.7000],
         [-1.1052, -0.4471,  1.1845, -0.2149]],

        [[ 0.2248,  1.5734, -0.0130, -1.1496],
         [ 0.1636,  1.2655,  0.9141, -1.0465],
         [-0.4031,  0.9812,  1.3457, -0.6685],
         ...,
         [-1.1915, -1.1394,  3.4040, -0.9434],
         [-1.1037, -1.2133,  3.3265, -0.7141],
         [-1.1103, -0.4090,  1.1844, -0.2583]],

        [[ 0.2248,  1.5734, -0.0130, -1.1496],
         [ 0.1636,  1.2655,  0.9141, -1.0465],
         [-0.4031,  0.9812,  1.3457, -0.6685],
         ...,
         [-1.1930, -1.1434,  3.4195, -0.9199],
         [-1.0978, -1.2065,  3.3430, -0.7000],
         [-1.1052, -0.4471,  1.1845, -0.2149]],

        ...,

        [[ 0.2248,  1.5734, -0.0130, -1.1496],
         [ 0.1636,  1.2655,  0.9141, -1.0465],
         [-0.4031,  0.9812,  1.3457, -0.6685],
         ...,
         [-1.1930, -1.1434,  3.4195, -0.9199],
         [-1.0978, -1.2065,  3.3430, -0.7000],
         [-1.1052, -0.4471,  1.1845, -0.2149]],

        [[ 0.2248,  1.5734, -0.0130, -1.1496],
         [ 0.1636,  1.2655,  0.9141, -1.0465],
         [-0.4031,  0.9812,  1.3457, -0.6685],
         ...,
         [-1.1930, -1.1434,  3.4195, -0.9199],
         [-1.0978, -1.2065,  3.3430, -0.7000],
         [-1.1052, -0.4471,  1.1845, -0.2149]],

        [[ 0.2248,  1.5734, -0.0130, -1.1496],
         [ 0.1636,  1.2655,  0.9141, -1.0465],
         [-0.4031,  0.9812,  1.3457, -0.6685],
         ...,
         [-1.1930, -1.1434,  3.4195, -0.9199],
         [-1.0978, -1.2065,  3.3430, -0.7000],
         [-1.1052, -0.4471,  1.1845, -0.2149]]])
Coords: 60
Sequence: UCCCGUCCACCGCGGUGAGAAGGGGGCAGAGAAACACACGAUCGUGGUACAUUACCUGCC
Len sequence: 60
Detected base pairs: [[  17  486]
 [  37  463]
 [  57  440]
 [  77  728]
 [ 100  373]
 [ 120  351]
 [ 140  328]
 [ 160  308]
 [ 182  285]
 [ 202  262]
 [ 222  245]
 [ 509 1252]
 [ 529 1232]
 [ 552 1209]
 [ 572 1189]
 [ 594 1169]
 [ 617 1149]
 [ 639 1127]
 [ 662 1087]
 [ 684 1065]
 [ 748  980]
 [ 770  957]
 [ 790  937]
 [ 812  914]
 [ 832  894]
 [ 855  877]]
Secondary structure: '.((([((((((()))))))..)))(((((((((.](((((())))))...)).)))))))'
Sequence length: 60
Number of residues: 60
Chain IDs: ['A' 'B' 'C' 'D']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
.(((.((((((()))))))..)))(((((((((..(((((())))))...)).)))))))
Batch size:  (56, 56)
Number of nodes:  56
edge_index: tensor([[[ 0,  0,  0,  ..., 55, 55, 55],
         [ 1,  2,  3,  ..., 52, 53, 54]],

        [[ 0,  0,  0,  ..., 55, 55, 55],
         [ 1,  2,  3,  ..., 52, 53, 54]],

        [[ 0,  0,  0,  ..., 55, 55, 55],
         [ 1,  2,  3,  ..., 52, 53, 54]],

        ...,

        [[ 0,  0,  0,  ..., 55, 55, 55],
         [ 1,  2,  3,  ..., 52, 53, 54]],

        [[ 0,  0,  0,  ..., 55, 55, 55],
         [ 1,  2,  3,  ..., 52, 53, 54]],

        [[ 0,  0,  0,  ..., 55, 55, 55],
         [ 1,  2,  3,  ..., 52, 53, 54]]])
offset size: torch.Size([16, 1, 1])
offset: tensor([[[  0]],

        [[ 56]],

        [[112]],

        [[168]],

        [[224]],

        [[280]],

        [[336]],

        [[392]],

        [[448]],

        [[504]],

        [[560]],

        [[616]],

        [[672]],

        [[728]],

        [[784]],

        [[840]]])
Iteration :  0
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999,
         0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999]])
scores: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
new_beam_scores: tensor([[0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999,
         0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999,
         0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  1
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999,
        0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999])
new_beam_scores: tensor([[1.9999, 1.9999, 1.9999, 1.9999, 1.9999, 1.9999, 1.9999, 1.9999, 1.9999,
         1.9999, 1.9999, 1.9999, 1.9999, 1.9999, 1.9999, 1.9999]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[1.9999, 1.9999, 1.9999, 1.9999, 1.9999, 1.9999, 1.9999, 1.9999, 1.9999,
         1.9999, 1.9999, 1.9999, 1.9999, 1.9999, 1.9999, 1.9999]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  2
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([1.9999, 1.9999, 1.9999, 1.9999, 1.9999, 1.9999, 1.9999, 1.9999, 1.9999,
        1.9999, 1.9999, 1.9999, 1.9999, 1.9999, 1.9999, 1.9999])
new_beam_scores: tensor([[2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999,
         2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999,
         2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  3
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999,
        2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999])
new_beam_scores: tensor([[3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999,
         3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999,
         3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  4
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [3],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9561, 0.9561, 0.9561, 0.9561, 0.9561, 0.9561, 0.9561, 0.9561, 0.9561,
         0.9561, 0.9561, 0.9561, 0.0439, 0.9561, 0.9561, 0.9561]])
scores: tensor([3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999,
        3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999])
new_beam_scores: tensor([[4.9560, 4.9560, 4.9560, 4.9560, 4.9560, 4.9560, 4.9560, 4.9560, 4.9560,
         4.9560, 4.9560, 4.9560, 4.0438, 4.9560, 4.9560, 4.9560]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[4.9560, 4.9560, 4.9560, 4.9560, 4.9560, 4.9560, 4.9560, 4.9560, 4.9560,
         4.9560, 4.9560, 4.9560, 4.0438, 4.9560, 4.9560, 4.9560]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  5
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997,
         0.9997, 0.9997, 0.9997, 0.9999, 0.9997, 0.9997, 0.9997]])
scores: tensor([4.9560, 4.9560, 4.9560, 4.9560, 4.9560, 4.9560, 4.9560, 4.9560, 4.9560,
        4.9560, 4.9560, 4.9560, 4.0438, 4.9560, 4.9560, 4.9560])
new_beam_scores: tensor([[5.9557, 5.9557, 5.9557, 5.9557, 5.9557, 5.9557, 5.9557, 5.9557, 5.9557,
         5.9557, 5.9557, 5.9557, 5.0437, 5.9557, 5.9557, 5.9557]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[5.9557, 5.9557, 5.9557, 5.9557, 5.9557, 5.9557, 5.9557, 5.9557, 5.9557,
         5.9557, 5.9557, 5.9557, 5.0437, 5.9557, 5.9557, 5.9557]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  6
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 1.0000]])
scores: tensor([5.9557, 5.9557, 5.9557, 5.9557, 5.9557, 5.9557, 5.9557, 5.9557, 5.9557,
        5.9557, 5.9557, 5.9557, 5.0437, 5.9557, 5.9557, 5.9557])
new_beam_scores: tensor([[6.9557, 6.9557, 6.9557, 6.9557, 6.9557, 6.9557, 6.9557, 6.9557, 6.9557,
         6.9557, 6.9557, 6.9557, 6.0436, 6.9557, 6.9557, 6.9557]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[6.9557, 6.9557, 6.9557, 6.9557, 6.9557, 6.9557, 6.9557, 6.9557, 6.9557,
         6.9557, 6.9557, 6.9557, 6.0436, 6.9557, 6.9557, 6.9557]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  7
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9914, 0.9914, 0.9914, 0.9914, 0.9914, 0.9914, 0.9914, 0.9914, 0.9914,
         0.9914, 0.9914, 0.9914, 0.9938, 0.9914, 0.9914, 0.9914]])
scores: tensor([6.9557, 6.9557, 6.9557, 6.9557, 6.9557, 6.9557, 6.9557, 6.9557, 6.9557,
        6.9557, 6.9557, 6.9557, 6.0436, 6.9557, 6.9557, 6.9557])
new_beam_scores: tensor([[7.9471, 7.9471, 7.9471, 7.9471, 7.9471, 7.9471, 7.9471, 7.9471, 7.9471,
         7.9471, 7.9471, 7.9471, 7.0375, 7.9471, 7.9471, 7.9471]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[7.9471, 7.9471, 7.9471, 7.9471, 7.9471, 7.9471, 7.9471, 7.9471, 7.9471,
         7.9471, 7.9471, 7.9471, 7.0375, 7.9471, 7.9471, 7.9471]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  8
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [1],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9799, 0.9799, 0.9799, 0.9799, 0.9799, 0.9799, 0.9799, 0.9799, 0.9799,
         0.9799, 0.9799, 0.9799, 0.9960, 0.9799, 0.0201, 0.9799]])
scores: tensor([7.9471, 7.9471, 7.9471, 7.9471, 7.9471, 7.9471, 7.9471, 7.9471, 7.9471,
        7.9471, 7.9471, 7.9471, 7.0375, 7.9471, 7.9471, 7.9471])
new_beam_scores: tensor([[8.9270, 8.9270, 8.9270, 8.9270, 8.9270, 8.9270, 8.9270, 8.9270, 8.9270,
         8.9270, 8.9270, 8.9270, 8.0335, 8.9270, 7.9672, 8.9270]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[8.9270, 8.9270, 8.9270, 8.9270, 8.9270, 8.9270, 8.9270, 8.9270, 8.9270,
         8.9270, 8.9270, 8.9270, 8.0335, 8.9270, 7.9672, 8.9270]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  9
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9927, 0.9927, 0.9927, 0.9927, 0.9927, 0.9927, 0.9927, 0.9927, 0.9927,
         0.9927, 0.9927, 0.9927, 0.9958, 0.9927, 1.0000, 0.9927]])
scores: tensor([8.9270, 8.9270, 8.9270, 8.9270, 8.9270, 8.9270, 8.9270, 8.9270, 8.9270,
        8.9270, 8.9270, 8.9270, 8.0335, 8.9270, 7.9672, 8.9270])
new_beam_scores: tensor([[9.9197, 9.9197, 9.9197, 9.9197, 9.9197, 9.9197, 9.9197, 9.9197, 9.9197,
         9.9197, 9.9197, 9.9197, 9.0293, 9.9197, 8.9671, 9.9197]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[9.9197, 9.9197, 9.9197, 9.9197, 9.9197, 9.9197, 9.9197, 9.9197, 9.9197,
         9.9197, 9.9197, 9.9197, 9.0293, 9.9197, 8.9671, 9.9197]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  10
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([9.9197, 9.9197, 9.9197, 9.9197, 9.9197, 9.9197, 9.9197, 9.9197, 9.9197,
        9.9197, 9.9197, 9.9197, 9.0293, 9.9197, 8.9671, 9.9197])
new_beam_scores: tensor([[10.9197, 10.9197, 10.9197, 10.9197, 10.9197, 10.9197, 10.9197, 10.9197,
         10.9197, 10.9197, 10.9197, 10.9197, 10.0293, 10.9197,  9.9671, 10.9197]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[10.9197, 10.9197, 10.9197, 10.9197, 10.9197, 10.9197, 10.9197, 10.9197,
         10.9197, 10.9197, 10.9197, 10.9197, 10.0293, 10.9197,  9.9671, 10.9197]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  11
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([10.9197, 10.9197, 10.9197, 10.9197, 10.9197, 10.9197, 10.9197, 10.9197,
        10.9197, 10.9197, 10.9197, 10.9197, 10.0293, 10.9197,  9.9671, 10.9197])
new_beam_scores: tensor([[11.9197, 11.9197, 11.9197, 11.9197, 11.9197, 11.9197, 11.9197, 11.9197,
         11.9197, 11.9197, 11.9197, 11.9197, 11.0293, 11.9197, 10.9671, 11.9197]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[11.9197, 11.9197, 11.9197, 11.9197, 11.9197, 11.9197, 11.9197, 11.9197,
         11.9197, 11.9197, 11.9197, 11.9197, 11.0293, 11.9197, 10.9671, 11.9197]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  12
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [2],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([11.9197, 11.9197, 11.9197, 11.9197, 11.9197, 11.9197, 11.9197, 11.9197,
        11.9197, 11.9197, 11.9197, 11.9197, 11.0293, 11.9197, 10.9671, 11.9197])
new_beam_scores: tensor([[12.9197, 12.9197, 12.9197, 12.9197, 12.9197, 12.9197, 12.9197, 12.9197,
         12.9197, 12.9197, 12.9197, 12.9197, 12.0293, 12.9197, 11.9671, 12.9197]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[12.9197, 12.9197, 12.9197, 12.9197, 12.9197, 12.9197, 12.9197, 12.9197,
         12.9197, 12.9197, 12.9197, 12.9197, 12.0293, 12.9197, 11.9671, 12.9197]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  13
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([12.9197, 12.9197, 12.9197, 12.9197, 12.9197, 12.9197, 12.9197, 12.9197,
        12.9197, 12.9197, 12.9197, 12.9197, 12.0293, 12.9197, 11.9671, 12.9197])
new_beam_scores: tensor([[13.9197, 13.9197, 13.9197, 13.9197, 13.9197, 13.9197, 13.9197, 13.9197,
         13.9197, 13.9197, 13.9197, 13.9197, 13.0293, 13.9197, 12.9671, 13.9197]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[13.9197, 13.9197, 13.9197, 13.9197, 13.9197, 13.9197, 13.9197, 13.9197,
         13.9197, 13.9197, 13.9197, 13.9197, 13.0293, 13.9197, 12.9671, 13.9197]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  14
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([13.9197, 13.9197, 13.9197, 13.9197, 13.9197, 13.9197, 13.9197, 13.9197,
        13.9197, 13.9197, 13.9197, 13.9197, 13.0293, 13.9197, 12.9671, 13.9197])
new_beam_scores: tensor([[14.9197, 14.9197, 14.9197, 14.9197, 14.9197, 14.9197, 14.9197, 14.9197,
         14.9197, 14.9197, 14.9197, 14.9197, 14.0293, 14.9197, 13.9671, 14.9197]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[14.9197, 14.9197, 14.9197, 14.9197, 14.9197, 14.9197, 14.9197, 14.9197,
         14.9197, 14.9197, 14.9197, 14.9197, 14.0293, 14.9197, 13.9671, 14.9197]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  15
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 1.0000]])
scores: tensor([14.9197, 14.9197, 14.9197, 14.9197, 14.9197, 14.9197, 14.9197, 14.9197,
        14.9197, 14.9197, 14.9197, 14.9197, 14.0293, 14.9197, 13.9671, 14.9197])
new_beam_scores: tensor([[15.9197, 15.9197, 15.9197, 15.9197, 15.9197, 15.9197, 15.9197, 15.9197,
         15.9197, 15.9197, 15.9197, 15.9197, 15.0292, 15.9197, 14.9671, 15.9197]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[15.9197, 15.9197, 15.9197, 15.9197, 15.9197, 15.9197, 15.9197, 15.9197,
         15.9197, 15.9197, 15.9197, 15.9197, 15.0292, 15.9197, 14.9671, 15.9197]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  16
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 0.9827, 1.0000, 1.0000, 1.0000]])
scores: tensor([15.9197, 15.9197, 15.9197, 15.9197, 15.9197, 15.9197, 15.9197, 15.9197,
        15.9197, 15.9197, 15.9197, 15.9197, 15.0292, 15.9197, 14.9671, 15.9197])
new_beam_scores: tensor([[16.9196, 16.9196, 16.9196, 16.9196, 16.9196, 16.9196, 16.9196, 16.9196,
         16.9196, 16.9196, 16.9196, 16.9196, 16.0119, 16.9196, 15.9671, 16.9196]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[16.9196, 16.9196, 16.9196, 16.9196, 16.9196, 16.9196, 16.9196, 16.9196,
         16.9196, 16.9196, 16.9196, 16.9196, 16.0119, 16.9196, 15.9671, 16.9196]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  17
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9893, 0.9893, 0.9893, 0.9893, 0.9893, 0.9893, 0.9893, 0.9893, 0.9893,
         0.9893, 0.9893, 0.9893, 1.0000, 0.9893, 0.7901, 0.9893]])
scores: tensor([16.9196, 16.9196, 16.9196, 16.9196, 16.9196, 16.9196, 16.9196, 16.9196,
        16.9196, 16.9196, 16.9196, 16.9196, 16.0119, 16.9196, 15.9671, 16.9196])
new_beam_scores: tensor([[17.9089, 17.9089, 17.9089, 17.9089, 17.9089, 17.9089, 17.9089, 17.9089,
         17.9089, 17.9089, 17.9089, 17.9089, 17.0119, 17.9089, 16.7573, 17.9089]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[17.9089, 17.9089, 17.9089, 17.9089, 17.9089, 17.9089, 17.9089, 17.9089,
         17.9089, 17.9089, 17.9089, 17.9089, 17.0119, 17.9089, 16.7573, 17.9089]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  18
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 0.9628, 1.0000, 1.0000, 1.0000]])
scores: tensor([17.9089, 17.9089, 17.9089, 17.9089, 17.9089, 17.9089, 17.9089, 17.9089,
        17.9089, 17.9089, 17.9089, 17.9089, 17.0119, 17.9089, 16.7573, 17.9089])
new_beam_scores: tensor([[18.9089, 18.9089, 18.9089, 18.9089, 18.9089, 18.9089, 18.9089, 18.9089,
         18.9089, 18.9089, 18.9089, 18.9089, 17.9747, 18.9089, 17.7573, 18.9089]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[18.9089, 18.9089, 18.9089, 18.9089, 18.9089, 18.9089, 18.9089, 18.9089,
         18.9089, 18.9089, 18.9089, 18.9089, 17.9747, 18.9089, 17.7573, 18.9089]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  19
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([18.9089, 18.9089, 18.9089, 18.9089, 18.9089, 18.9089, 18.9089, 18.9089,
        18.9089, 18.9089, 18.9089, 18.9089, 17.9747, 18.9089, 17.7573, 18.9089])
new_beam_scores: tensor([[19.9089, 19.9089, 19.9089, 19.9089, 19.9089, 19.9089, 19.9089, 19.9089,
         19.9089, 19.9089, 19.9089, 19.9089, 18.9747, 19.9089, 18.7573, 19.9089]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[19.9089, 19.9089, 19.9089, 19.9089, 19.9089, 19.9089, 19.9089, 19.9089,
         19.9089, 19.9089, 19.9089, 19.9089, 18.9747, 19.9089, 18.7573, 19.9089]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  20
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([19.9089, 19.9089, 19.9089, 19.9089, 19.9089, 19.9089, 19.9089, 19.9089,
        19.9089, 19.9089, 19.9089, 19.9089, 18.9747, 19.9089, 18.7573, 19.9089])
new_beam_scores: tensor([[20.9089, 20.9089, 20.9089, 20.9089, 20.9089, 20.9089, 20.9089, 20.9089,
         20.9089, 20.9089, 20.9089, 20.9089, 19.9747, 20.9089, 19.7573, 20.9089]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[20.9089, 20.9089, 20.9089, 20.9089, 20.9089, 20.9089, 20.9089, 20.9089,
         20.9089, 20.9089, 20.9089, 20.9089, 19.9747, 20.9089, 19.7573, 20.9089]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  21
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([20.9089, 20.9089, 20.9089, 20.9089, 20.9089, 20.9089, 20.9089, 20.9089,
        20.9089, 20.9089, 20.9089, 20.9089, 19.9747, 20.9089, 19.7573, 20.9089])
new_beam_scores: tensor([[21.9089, 21.9089, 21.9089, 21.9089, 21.9089, 21.9089, 21.9089, 21.9089,
         21.9089, 21.9089, 21.9089, 21.9089, 20.9747, 21.9089, 20.7573, 21.9089]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[21.9089, 21.9089, 21.9089, 21.9089, 21.9089, 21.9089, 21.9089, 21.9089,
         21.9089, 21.9089, 21.9089, 21.9089, 20.9747, 21.9089, 20.7573, 21.9089]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  22
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([21.9089, 21.9089, 21.9089, 21.9089, 21.9089, 21.9089, 21.9089, 21.9089,
        21.9089, 21.9089, 21.9089, 21.9089, 20.9747, 21.9089, 20.7573, 21.9089])
new_beam_scores: tensor([[22.9089, 22.9089, 22.9089, 22.9089, 22.9089, 22.9089, 22.9089, 22.9089,
         22.9089, 22.9089, 22.9089, 22.9089, 21.9747, 22.9089, 21.7573, 22.9089]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[22.9089, 22.9089, 22.9089, 22.9089, 22.9089, 22.9089, 22.9089, 22.9089,
         22.9089, 22.9089, 22.9089, 22.9089, 21.9747, 22.9089, 21.7573, 22.9089]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  23
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [3],
        [2],
        [2],
        [2],
        [3],
        [2],
        [2],
        [2],
        [2],
        [3],
        [2],
        [3],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.7120, 0.7120, 0.2880, 0.7120, 0.7120, 0.7120, 0.2880, 0.7120, 0.7120,
         0.7120, 0.7120, 0.2880, 0.7600, 0.2880, 0.9890, 0.7120]])
scores: tensor([22.9089, 22.9089, 22.9089, 22.9089, 22.9089, 22.9089, 22.9089, 22.9089,
        22.9089, 22.9089, 22.9089, 22.9089, 21.9747, 22.9089, 21.7573, 22.9089])
new_beam_scores: tensor([[23.6209, 23.6209, 23.1969, 23.6209, 23.6209, 23.6209, 23.1969, 23.6209,
         23.6209, 23.6209, 23.6209, 23.1969, 22.7347, 23.1969, 22.7462, 23.6209]])
new_beam seq: tensor([[2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 3, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[23.6209, 23.6209, 23.1969, 23.6209, 23.6209, 23.6209, 23.1969, 23.6209,
         23.6209, 23.6209, 23.6209, 23.1969, 22.7347, 23.1969, 22.7462, 23.6209]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 3, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  24
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([23.6209, 23.6209, 23.1969, 23.6209, 23.6209, 23.6209, 23.1969, 23.6209,
        23.6209, 23.6209, 23.6209, 23.1969, 22.7347, 23.1969, 22.7462, 23.6209])
new_beam_scores: tensor([[24.6209, 24.6209, 24.1969, 24.6209, 24.6209, 24.6209, 24.1969, 24.6209,
         24.6209, 24.6209, 24.6209, 24.1969, 23.7347, 24.1969, 23.7462, 24.6209]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[24.6209, 24.6209, 24.1969, 24.6209, 24.6209, 24.6209, 24.1969, 24.6209,
         24.6209, 24.6209, 24.6209, 24.1969, 23.7347, 24.1969, 23.7462, 24.6209]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  25
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([24.6209, 24.6209, 24.1969, 24.6209, 24.6209, 24.6209, 24.1969, 24.6209,
        24.6209, 24.6209, 24.6209, 24.1969, 23.7347, 24.1969, 23.7462, 24.6209])
new_beam_scores: tensor([[25.6209, 25.6209, 25.1969, 25.6209, 25.6209, 25.6209, 25.1969, 25.6209,
         25.6209, 25.6209, 25.6209, 25.1969, 24.7347, 25.1969, 24.7462, 25.6209]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[25.6209, 25.6209, 25.1969, 25.6209, 25.6209, 25.6209, 25.1969, 25.6209,
         25.6209, 25.6209, 25.6209, 25.1969, 24.7347, 25.1969, 24.7462, 25.6209]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  26
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [1],
        [1],
        [3],
        [3],
        [1],
        [3],
        [1],
        [1],
        [3],
        [1],
        [3],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.2832, 0.2832, 0.9896, 0.7167, 0.7167, 0.2832, 0.9896, 0.7167, 0.2832,
         0.7167, 0.7167, 0.9896, 0.6906, 0.9896, 0.9984, 0.7167]])
scores: tensor([25.6209, 25.6209, 25.1969, 25.6209, 25.6209, 25.6209, 25.1969, 25.6209,
        25.6209, 25.6209, 25.6209, 25.1969, 24.7347, 25.1969, 24.7462, 25.6209])
new_beam_scores: tensor([[25.9041, 25.9041, 26.1865, 26.3377, 26.3377, 25.9041, 26.1865, 26.3377,
         25.9041, 26.3377, 26.3377, 26.1865, 25.4253, 26.1865, 25.7446, 26.3377]])
new_beam seq: tensor([[3, 3, 3, 1, 1, 3, 3, 1, 3, 1, 1, 3, 1, 3, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[25.9041, 25.9041, 26.1865, 26.3377, 26.3377, 25.9041, 26.1865, 26.3377,
         25.9041, 26.3377, 26.3377, 26.1865, 25.4253, 26.1865, 25.7446, 26.3377]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 1, 1, 3, 3, 1, 3, 1, 1, 3, 1, 3, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  27
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([25.9041, 25.9041, 26.1865, 26.3377, 26.3377, 25.9041, 26.1865, 26.3377,
        25.9041, 26.3377, 26.3377, 26.1865, 25.4253, 26.1865, 25.7446, 26.3377])
new_beam_scores: tensor([[26.9041, 26.9041, 27.1865, 27.3377, 27.3377, 26.9041, 27.1865, 27.3377,
         26.9041, 27.3377, 27.3377, 27.1865, 26.4253, 27.1865, 26.7446, 27.3377]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[26.9041, 26.9041, 27.1865, 27.3377, 27.3377, 26.9041, 27.1865, 27.3377,
         26.9041, 27.3377, 27.3377, 27.1865, 26.4253, 27.1865, 26.7446, 27.3377]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  28
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([26.9041, 26.9041, 27.1865, 27.3377, 27.3377, 26.9041, 27.1865, 27.3377,
        26.9041, 27.3377, 27.3377, 27.1865, 26.4253, 27.1865, 26.7446, 27.3377])
new_beam_scores: tensor([[27.9041, 27.9041, 28.1865, 28.3377, 28.3377, 27.9041, 28.1865, 28.3377,
         27.9041, 28.3377, 28.3377, 28.1865, 27.4253, 28.1865, 27.7446, 28.3377]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[27.9041, 27.9041, 28.1865, 28.3377, 28.3377, 27.9041, 28.1865, 28.3377,
         27.9041, 28.3377, 28.3377, 28.1865, 27.4253, 28.1865, 27.7446, 28.3377]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  29
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [0],
        [0],
        [0],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9887, 0.9887, 0.9997, 0.7298, 0.2702, 0.9887, 0.9997, 0.7298, 0.9887,
         0.7298, 0.2702, 0.9997, 0.9026, 0.9997, 0.2670, 0.2702]])
scores: tensor([27.9041, 27.9041, 28.1865, 28.3377, 28.3377, 27.9041, 28.1865, 28.3377,
        27.9041, 28.3377, 28.3377, 28.1865, 27.4253, 28.1865, 27.7446, 28.3377])
new_beam_scores: tensor([[28.8928, 28.8928, 29.1862, 29.0675, 28.6079, 28.8928, 29.1862, 29.0675,
         28.8928, 29.0675, 28.6079, 29.1862, 28.3280, 29.1862, 28.0116, 28.6079]])
new_beam seq: tensor([[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[28.8928, 28.8928, 29.1862, 29.0675, 28.6079, 28.8928, 29.1862, 29.0675,
         28.8928, 29.0675, 28.6079, 29.1862, 28.3280, 29.1862, 28.0116, 28.6079]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  30
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([28.8928, 28.8928, 29.1862, 29.0675, 28.6079, 28.8928, 29.1862, 29.0675,
        28.8928, 29.0675, 28.6079, 29.1862, 28.3280, 29.1862, 28.0116, 28.6079])
new_beam_scores: tensor([[29.8928, 29.8928, 30.1862, 30.0675, 29.6079, 29.8928, 30.1862, 30.0675,
         29.8928, 30.0675, 29.6079, 30.1862, 29.3280, 30.1862, 29.0116, 29.6079]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[29.8928, 29.8928, 30.1862, 30.0675, 29.6079, 29.8928, 30.1862, 30.0675,
         29.8928, 30.0675, 29.6079, 30.1862, 29.3280, 30.1862, 29.0116, 29.6079]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  31
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([29.8928, 29.8928, 30.1862, 30.0675, 29.6079, 29.8928, 30.1862, 30.0675,
        29.8928, 30.0675, 29.6079, 30.1862, 29.3280, 30.1862, 29.0116, 29.6079])
new_beam_scores: tensor([[30.8928, 30.8928, 31.1862, 31.0675, 30.6079, 30.8928, 31.1862, 31.0675,
         30.8928, 31.0675, 30.6079, 31.1862, 30.3280, 31.1862, 30.0116, 30.6079]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[30.8928, 30.8928, 31.1862, 31.0675, 30.6079, 30.8928, 31.1862, 31.0675,
         30.8928, 31.0675, 30.6079, 31.1862, 30.3280, 31.1862, 30.0116, 30.6079]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  32
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [1],
        [3],
        [3],
        [3],
        [3],
        [1],
        [3],
        [3],
        [3],
        [1],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9273, 0.9273, 0.9480, 0.6974, 0.3450, 0.0727, 0.9480, 0.6974, 0.9273,
         0.6974, 0.6550, 0.9480, 0.9998, 0.9480, 0.8839, 0.3450]])
scores: tensor([30.8928, 30.8928, 31.1862, 31.0675, 30.6079, 30.8928, 31.1862, 31.0675,
        30.8928, 31.0675, 30.6079, 31.1862, 30.3280, 31.1862, 30.0116, 30.6079])
new_beam_scores: tensor([[31.8201, 31.8201, 32.1343, 31.7649, 30.9528, 30.9655, 32.1343, 31.7649,
         31.8201, 31.7649, 31.2629, 32.1343, 31.3277, 32.1343, 30.8955, 30.9528]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 1, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[31.8201, 31.8201, 32.1343, 31.7649, 30.9528, 30.9655, 32.1343, 31.7649,
         31.8201, 31.7649, 31.2629, 32.1343, 31.3277, 32.1343, 30.8955, 30.9528]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 1, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  33
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([31.8201, 31.8201, 32.1343, 31.7649, 30.9528, 30.9655, 32.1343, 31.7649,
        31.8201, 31.7649, 31.2629, 32.1343, 31.3277, 32.1343, 30.8955, 30.9528])
new_beam_scores: tensor([[32.8201, 32.8201, 33.1343, 32.7649, 31.9528, 31.9655, 33.1343, 32.7649,
         32.8201, 32.7649, 32.2629, 33.1343, 32.3277, 33.1343, 31.8955, 31.9528]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[32.8201, 32.8201, 33.1343, 32.7649, 31.9528, 31.9655, 33.1343, 32.7649,
         32.8201, 32.7649, 32.2629, 33.1343, 32.3277, 33.1343, 31.8955, 31.9528]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  34
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [0],
        [0],
        [0],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.8813, 0.8813, 0.9140, 0.8220, 0.8691, 0.8998, 0.9140, 0.8220, 0.8813,
         0.8220, 0.8254, 0.9140, 0.9429, 0.9140, 0.8402, 0.8691]])
scores: tensor([32.8201, 32.8201, 33.1343, 32.7649, 31.9528, 31.9655, 33.1343, 32.7649,
        32.8201, 32.7649, 32.2629, 33.1343, 32.3277, 33.1343, 31.8955, 31.9528])
new_beam_scores: tensor([[33.7014, 33.7014, 34.0483, 33.5869, 32.8219, 32.8653, 34.0483, 33.5869,
         33.7014, 33.5869, 33.0883, 34.0483, 33.2706, 34.0483, 32.7357, 32.8219]])
new_beam seq: tensor([[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[33.7014, 33.7014, 34.0483, 33.5869, 32.8219, 32.8653, 34.0483, 33.5869,
         33.7014, 33.5869, 33.0883, 34.0483, 33.2706, 34.0483, 32.7357, 32.8219]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  35
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [2],
        [1],
        [1],
        [1],
        [1],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9998, 0.9998, 0.9999, 0.9998, 0.5810, 0.9987, 0.9999, 0.9998, 0.9998,
         0.9998, 0.9779, 0.9999, 0.9995, 0.9999, 0.2804, 0.4190]])
scores: tensor([33.7014, 33.7014, 34.0483, 33.5869, 32.8219, 32.8653, 34.0483, 33.5869,
        33.7014, 33.5869, 33.0883, 34.0483, 33.2706, 34.0483, 32.7357, 32.8219])
new_beam_scores: tensor([[34.7013, 34.7013, 35.0481, 34.5867, 33.4030, 33.8641, 35.0481, 34.5867,
         34.7013, 34.5867, 34.0662, 35.0481, 34.2701, 35.0481, 33.0160, 33.2409]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[34.7013, 34.7013, 35.0481, 34.5867, 33.4030, 33.8641, 35.0481, 34.5867,
         34.7013, 34.5867, 34.0662, 35.0481, 34.2701, 35.0481, 33.0160, 33.2409]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  36
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([34.7013, 34.7013, 35.0481, 34.5867, 33.4030, 33.8641, 35.0481, 34.5867,
        34.7013, 34.5867, 34.0662, 35.0481, 34.2701, 35.0481, 33.0160, 33.2409])
new_beam_scores: tensor([[35.7013, 35.7013, 36.0481, 35.5867, 34.4030, 34.8641, 36.0481, 35.5867,
         35.7013, 35.5867, 35.0662, 36.0481, 35.2701, 36.0481, 34.0160, 34.2409]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[35.7013, 35.7013, 36.0481, 35.5867, 34.4030, 34.8641, 36.0481, 35.5867,
         35.7013, 35.5867, 35.0662, 36.0481, 35.2701, 36.0481, 34.0160, 34.2409]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  37
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([35.7013, 35.7013, 36.0481, 35.5867, 34.4030, 34.8641, 36.0481, 35.5867,
        35.7013, 35.5867, 35.0662, 36.0481, 35.2701, 36.0481, 34.0160, 34.2409])
new_beam_scores: tensor([[36.7013, 36.7013, 37.0481, 36.5867, 35.4030, 35.8641, 37.0481, 36.5867,
         36.7013, 36.5867, 36.0662, 37.0481, 36.2701, 37.0481, 35.0160, 35.2409]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[36.7013, 36.7013, 37.0481, 36.5867, 35.4030, 35.8641, 37.0481, 36.5867,
         36.7013, 36.5867, 36.0662, 37.0481, 36.2701, 37.0481, 35.0160, 35.2409]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  38
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([36.7013, 36.7013, 37.0481, 36.5867, 35.4030, 35.8641, 37.0481, 36.5867,
        36.7013, 36.5867, 36.0662, 37.0481, 36.2701, 37.0481, 35.0160, 35.2409])
new_beam_scores: tensor([[37.7013, 37.7013, 38.0481, 37.5867, 36.4030, 36.8641, 38.0481, 37.5867,
         37.7013, 37.5867, 37.0662, 38.0481, 37.2701, 38.0481, 36.0160, 36.2409]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[37.7013, 37.7013, 38.0481, 37.5867, 36.4030, 36.8641, 38.0481, 37.5867,
         37.7013, 37.5867, 37.0662, 38.0481, 37.2701, 38.0481, 36.0160, 36.2409]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 1, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  39
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [1],
        [2],
        [2],
        [2],
        [2],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([37.7013, 37.7013, 38.0481, 37.5867, 36.4030, 36.8641, 38.0481, 37.5867,
        37.7013, 37.5867, 37.0662, 38.0481, 37.2701, 38.0481, 36.0160, 36.2409])
new_beam_scores: tensor([[38.7013, 38.7013, 39.0481, 38.5867, 37.4030, 37.8641, 39.0481, 38.5867,
         38.7013, 38.5867, 38.0662, 39.0481, 38.2701, 39.0481, 37.0160, 37.2409]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[38.7013, 38.7013, 39.0481, 38.5867, 37.4030, 37.8641, 39.0481, 38.5867,
         38.7013, 38.5867, 38.0662, 39.0481, 38.2701, 39.0481, 37.0160, 37.2409]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 1, 2, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 1, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  40
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [2],
        [3],
        [3],
        [3],
        [3],
        [3],
        [2],
        [3],
        [3],
        [3],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([38.7013, 38.7013, 39.0481, 38.5867, 37.4030, 37.8641, 39.0481, 38.5867,
        38.7013, 38.5867, 38.0662, 39.0481, 38.2701, 39.0481, 37.0160, 37.2409])
new_beam_scores: tensor([[39.7013, 39.7013, 40.0481, 39.5867, 38.4030, 38.8641, 40.0481, 39.5867,
         39.7013, 39.5867, 39.0662, 40.0481, 39.2701, 40.0481, 38.0160, 38.2409]])
new_beam seq: tensor([[3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[39.7013, 39.7013, 40.0481, 39.5867, 38.4030, 38.8641, 40.0481, 39.5867,
         39.7013, 39.5867, 39.0662, 40.0481, 39.2701, 40.0481, 38.0160, 38.2409]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 1, 2, 2, 2,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 1, 1, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 2, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 1, 1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 1, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  41
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([39.7013, 39.7013, 40.0481, 39.5867, 38.4030, 38.8641, 40.0481, 39.5867,
        39.7013, 39.5867, 39.0662, 40.0481, 39.2701, 40.0481, 38.0160, 38.2409])
new_beam_scores: tensor([[40.7013, 40.7013, 41.0481, 40.5867, 39.4030, 39.8641, 41.0481, 40.5867,
         40.7013, 40.5867, 40.0662, 41.0481, 40.2701, 41.0481, 39.0160, 39.2409]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[40.7013, 40.7013, 41.0481, 40.5867, 39.4030, 39.8641, 41.0481, 40.5867,
         40.7013, 40.5867, 40.0662, 41.0481, 40.2701, 41.0481, 39.0160, 39.2409]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 1, 2, 2, 2,
        2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 1, 1, 2, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 2, 1,
        2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 1, 2, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  42
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9982, 0.9982, 0.9975, 0.9974, 0.9891, 1.0000, 0.9975, 0.9974, 0.9982,
         0.9974, 0.9326, 0.9975, 0.9994, 0.9975, 0.8584, 0.8070]])
scores: tensor([40.7013, 40.7013, 41.0481, 40.5867, 39.4030, 39.8641, 41.0481, 40.5867,
        40.7013, 40.5867, 40.0662, 41.0481, 40.2701, 41.0481, 39.0160, 39.2409])
new_beam_scores: tensor([[41.6995, 41.6995, 42.0457, 41.5842, 40.3921, 40.8640, 42.0457, 41.5842,
         41.6995, 41.5842, 40.9988, 42.0457, 41.2695, 42.0457, 39.8744, 40.0479]])
new_beam seq: tensor([[1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[41.6995, 41.6995, 42.0457, 41.5842, 40.3921, 40.8640, 42.0457, 41.5842,
         41.6995, 41.5842, 40.9988, 42.0457, 41.2695, 42.0457, 39.8744, 40.0479]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 1, 2, 2, 2,
        2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 2, 1,
        2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 1, 2, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  43
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [0],
        [3],
        [3],
        [3],
        [0],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9958, 0.9958, 0.9998, 0.9867, 0.9822, 0.9918, 0.9998, 0.9867, 0.9958,
         0.9867, 0.9917, 0.9998, 0.9439, 0.9998, 0.9948, 0.9829]])
scores: tensor([41.6995, 41.6995, 42.0457, 41.5842, 40.3921, 40.8640, 42.0457, 41.5842,
        41.6995, 41.5842, 40.9988, 42.0457, 41.2695, 42.0457, 39.8744, 40.0479])
new_beam_scores: tensor([[42.6953, 42.6953, 43.0455, 42.5709, 41.3743, 41.8558, 43.0455, 42.5709,
         42.6953, 42.5709, 41.9905, 43.0455, 42.2134, 43.0455, 40.8692, 41.0308]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 0, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[42.6953, 42.6953, 43.0455, 42.5709, 41.3743, 41.8558, 43.0455, 42.5709,
         42.6953, 42.5709, 41.9905, 43.0455, 42.2134, 43.0455, 40.8692, 41.0308]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 0, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 1, 2, 2, 2,
        2, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 2, 1,
        2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 1, 2, 2, 1, 2, 1, 0, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  44
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([42.6953, 42.6953, 43.0455, 42.5709, 41.3743, 41.8558, 43.0455, 42.5709,
        42.6953, 42.5709, 41.9905, 43.0455, 42.2134, 43.0455, 40.8692, 41.0308])
new_beam_scores: tensor([[43.6953, 43.6953, 44.0455, 43.5709, 42.3743, 42.8558, 44.0455, 43.5709,
         43.6953, 43.5709, 42.9905, 44.0455, 43.2134, 44.0455, 41.8692, 42.0308]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[43.6953, 43.6953, 44.0455, 43.5709, 42.3743, 42.8558, 44.0455, 43.5709,
         43.6953, 43.5709, 42.9905, 44.0455, 43.2134, 44.0455, 41.8692, 42.0308]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 1, 2, 2, 2,
        2, 1, 0, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 2, 1,
        2, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 1, 2, 2, 1, 2, 1, 0, 3, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  45
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([43.6953, 43.6953, 44.0455, 43.5709, 42.3743, 42.8558, 44.0455, 43.5709,
        43.6953, 43.5709, 42.9905, 44.0455, 43.2134, 44.0455, 41.8692, 42.0308])
new_beam_scores: tensor([[44.6953, 44.6953, 45.0455, 44.5709, 43.3743, 43.8558, 45.0455, 44.5709,
         44.6953, 44.5709, 43.9905, 45.0455, 44.2134, 45.0455, 42.8692, 43.0308]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[44.6953, 44.6953, 45.0455, 44.5709, 43.3743, 43.8558, 45.0455, 44.5709,
         44.6953, 44.5709, 43.9905, 45.0455, 44.2134, 45.0455, 42.8692, 43.0308]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 1, 2, 2, 2,
        2, 1, 0, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 2, 1,
        2, 1, 1, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 1, 2, 2, 1, 2, 1, 0, 3, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  46
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([44.6953, 44.6953, 45.0455, 44.5709, 43.3743, 43.8558, 45.0455, 44.5709,
        44.6953, 44.5709, 43.9905, 45.0455, 44.2134, 45.0455, 42.8692, 43.0308])
new_beam_scores: tensor([[45.6953, 45.6953, 46.0455, 45.5709, 44.3743, 44.8558, 46.0455, 45.5709,
         45.6953, 45.5709, 44.9905, 46.0455, 45.2134, 46.0455, 43.8692, 44.0308]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[45.6953, 45.6953, 46.0455, 45.5709, 44.3743, 44.8558, 46.0455, 45.5709,
         45.6953, 45.5709, 44.9905, 46.0455, 45.2134, 46.0455, 43.8692, 44.0308]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 1, 2, 2, 2,
        2, 1, 0, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 2, 1,
        2, 1, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 1, 2, 2, 1, 2, 1, 0, 3, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  47
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([45.6953, 45.6953, 46.0455, 45.5709, 44.3743, 44.8558, 46.0455, 45.5709,
        45.6953, 45.5709, 44.9905, 46.0455, 45.2134, 46.0455, 43.8692, 44.0308])
new_beam_scores: tensor([[46.6953, 46.6953, 47.0455, 46.5709, 45.3743, 45.8558, 47.0455, 46.5709,
         46.6953, 46.5709, 45.9905, 47.0455, 46.2134, 47.0455, 44.8692, 45.0308]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[46.6953, 46.6953, 47.0455, 46.5709, 45.3743, 45.8558, 47.0455, 46.5709,
         46.6953, 46.5709, 45.9905, 47.0455, 46.2134, 47.0455, 44.8692, 45.0308]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 1, 2, 2, 2,
        2, 1, 0, 3, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 2, 1,
        2, 1, 1, 0, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 0, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 1, 2, 2, 1, 2, 1, 0, 3, 2, 1, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  48
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [2],
        [3],
        [3],
        [3],
        [3],
        [3],
        [2],
        [3],
        [3],
        [3],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([46.6953, 46.6953, 47.0455, 46.5709, 45.3743, 45.8558, 47.0455, 46.5709,
        46.6953, 46.5709, 45.9905, 47.0455, 46.2134, 47.0455, 44.8692, 45.0308])
new_beam_scores: tensor([[47.6953, 47.6953, 48.0455, 47.5709, 46.3742, 46.8558, 48.0455, 47.5709,
         47.6953, 47.5709, 46.9905, 48.0455, 47.2134, 48.0455, 45.8692, 46.0308]])
new_beam seq: tensor([[3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[47.6953, 47.6953, 48.0455, 47.5709, 46.3742, 46.8558, 48.0455, 47.5709,
         47.6953, 47.5709, 46.9905, 48.0455, 47.2134, 48.0455, 45.8692, 46.0308]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 1, 2, 2, 2,
        2, 1, 0, 3, 2, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 2, 1,
        2, 1, 1, 0, 2, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 0, 2, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 1, 2, 2, 1, 2, 1, 0, 3, 2, 1, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  49
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([47.6953, 47.6953, 48.0455, 47.5709, 46.3742, 46.8558, 48.0455, 47.5709,
        47.6953, 47.5709, 46.9905, 48.0455, 47.2134, 48.0455, 45.8692, 46.0308])
new_beam_scores: tensor([[48.6953, 48.6953, 49.0455, 48.5709, 47.3742, 47.8558, 49.0455, 48.5709,
         48.6953, 48.5709, 47.9905, 49.0455, 48.2134, 49.0455, 46.8692, 47.0308]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[48.6953, 48.6953, 49.0455, 48.5709, 47.3742, 47.8558, 49.0455, 48.5709,
         48.6953, 48.5709, 47.9905, 49.0455, 48.2134, 49.0455, 46.8692, 47.0308]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 1, 2, 2, 2,
        2, 1, 0, 3, 2, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 2, 1,
        2, 1, 1, 0, 2, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 0, 2, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 1, 2, 2, 1, 2, 1, 0, 3, 2, 1, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  50
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [2],
        [2],
        [1],
        [1],
        [2],
        [1],
        [2],
        [2],
        [1],
        [2],
        [1],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([48.6953, 48.6953, 49.0455, 48.5709, 47.3742, 47.8558, 49.0455, 48.5709,
        48.6953, 48.5709, 47.9905, 49.0455, 48.2134, 49.0455, 46.8692, 47.0308])
new_beam_scores: tensor([[49.6953, 49.6953, 50.0455, 49.5709, 48.3742, 48.8558, 50.0455, 49.5709,
         49.6953, 49.5709, 48.9905, 50.0455, 49.2134, 50.0455, 47.8692, 48.0308]])
new_beam seq: tensor([[1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[49.6953, 49.6953, 50.0455, 49.5709, 48.3742, 48.8558, 50.0455, 49.5709,
         49.6953, 49.5709, 48.9905, 50.0455, 49.2134, 50.0455, 47.8692, 48.0308]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 1, 2, 2, 2,
        2, 1, 0, 3, 2, 1, 1, 3, 2, 0, 2, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 2, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 2, 1,
        2, 1, 1, 0, 2, 1, 1, 3, 2, 0, 2, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 0, 2, 1, 1, 3, 2, 0, 2, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 1, 2, 2, 1, 2, 1, 0, 3, 2, 1, 1, 3,
        2, 0, 2, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  51
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([49.6953, 49.6953, 50.0455, 49.5709, 48.3742, 48.8558, 50.0455, 49.5709,
        49.6953, 49.5709, 48.9905, 50.0455, 49.2134, 50.0455, 47.8692, 48.0308])
new_beam_scores: tensor([[50.6953, 50.6953, 51.0455, 50.5709, 49.3742, 49.8558, 51.0455, 50.5709,
         50.6953, 50.5709, 49.9905, 51.0455, 50.2134, 51.0455, 48.8692, 49.0308]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[50.6953, 50.6953, 51.0455, 50.5709, 49.3742, 49.8558, 51.0455, 50.5709,
         50.6953, 50.5709, 49.9905, 51.0455, 50.2134, 51.0455, 48.8692, 49.0308]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 1, 2, 2, 2,
        2, 1, 0, 3, 2, 1, 1, 3, 2, 0, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 2, 1,
        2, 1, 1, 0, 2, 1, 1, 3, 2, 0, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 0, 2, 1, 1, 3, 2, 0, 2, 2, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 1, 2, 2, 1, 2, 1, 0, 3, 2, 1, 1, 3,
        2, 0, 2, 2, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  52
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([50.6953, 50.6953, 51.0455, 50.5709, 49.3742, 49.8558, 51.0455, 50.5709,
        50.6953, 50.5709, 49.9905, 51.0455, 50.2134, 51.0455, 48.8692, 49.0308])
new_beam_scores: tensor([[51.6953, 51.6953, 52.0455, 51.5709, 50.3742, 50.8558, 52.0455, 51.5709,
         51.6953, 51.5709, 50.9905, 52.0455, 51.2134, 52.0455, 49.8692, 50.0308]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[51.6953, 51.6953, 52.0455, 51.5709, 50.3742, 50.8558, 52.0455, 51.5709,
         51.6953, 51.5709, 50.9905, 52.0455, 51.2134, 52.0455, 49.8692, 50.0308]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 2, 2, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 1, 2, 2, 2,
        2, 1, 0, 3, 2, 1, 1, 3, 2, 0, 2, 2, 2, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 2, 2, 2, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 2, 2, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 2, 1,
        2, 1, 1, 0, 2, 1, 1, 3, 2, 0, 2, 2, 2, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 2, 2, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 0, 2, 1, 1, 3, 2, 0, 2, 2, 2, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 1, 2, 2, 1, 2, 1, 0, 3, 2, 1, 1, 3,
        2, 0, 2, 2, 2, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  53
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [0],
        [1],
        [1],
        [1],
        [0],
        [1],
        [1],
        [1],
        [1],
        [0],
        [1],
        [0],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([51.6953, 51.6953, 52.0455, 51.5709, 50.3742, 50.8558, 52.0455, 51.5709,
        51.6953, 51.5709, 50.9905, 52.0455, 51.2134, 52.0455, 49.8692, 50.0308])
new_beam_scores: tensor([[52.6953, 52.6953, 53.0455, 52.5709, 51.3742, 51.8558, 53.0455, 52.5709,
         52.6953, 52.5709, 51.9905, 53.0455, 52.2134, 53.0455, 50.8692, 51.0308]])
new_beam seq: tensor([[1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[52.6953, 52.6953, 53.0455, 52.5709, 51.3742, 51.8558, 53.0455, 52.5709,
         52.6953, 52.5709, 51.9905, 53.0455, 52.2134, 53.0455, 50.8692, 51.0308]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 1, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 1, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 2, 2, 1, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 1, 2, 2, 2,
        2, 1, 0, 3, 2, 1, 1, 3, 2, 0, 2, 2, 2, 1, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 1, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 2, 2, 2, 1, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 1, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 2, 2, 1, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 2, 1,
        2, 1, 1, 0, 2, 1, 1, 3, 2, 0, 2, 2, 2, 1, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 2, 2, 1, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 0, 2, 1, 1, 3, 2, 0, 2, 2, 2, 1, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 1, 2, 2, 1, 2, 1, 0, 3, 2, 1, 1, 3,
        2, 0, 2, 2, 2, 1, 0, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [-1.2035,  3.0087, -1.2596, -1.4551],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  54
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([52.6953, 52.6953, 53.0455, 52.5709, 51.3742, 51.8558, 53.0455, 52.5709,
        52.6953, 52.5709, 51.9905, 53.0455, 52.2134, 53.0455, 50.8692, 51.0308])
new_beam_scores: tensor([[53.6953, 53.6953, 54.0455, 53.5709, 52.3742, 52.8558, 54.0455, 53.5709,
         53.6953, 53.5709, 52.9905, 54.0455, 53.2134, 54.0455, 51.8692, 52.0308]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[53.6953, 53.6953, 54.0455, 53.5709, 52.3742, 52.8558, 54.0455, 53.5709,
         53.6953, 53.5709, 52.9905, 54.0455, 53.2134, 54.0455, 51.8692, 52.0308]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 1, 2, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 1, 2, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 2, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 2, 2, 1, 2, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 1, 2, 2, 2,
        2, 1, 0, 3, 2, 1, 1, 3, 2, 0, 2, 2, 2, 1, 2, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 1, 2, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 0, 2, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 2, 2, 2, 1, 2, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 1, 2, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 2, 2, 1, 2, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 2, 1,
        2, 1, 1, 0, 2, 1, 1, 3, 2, 0, 2, 2, 2, 1, 2, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 2, 0,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 2, 2, 1, 2, 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 2, 0, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 0, 2, 1, 1, 3, 2, 0, 2, 2, 2, 1, 2, 0,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 1, 2, 2, 1, 2, 1, 0, 3, 2, 1, 1, 3,
        2, 0, 2, 2, 2, 1, 2, 0], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [-1.2035,  3.0087, -1.2596, -1.4551],
        [-1.3634, -1.4862,  3.0949, -1.4627],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  55
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [2],
        [2],
        [2],
        [1],
        [2],
        [2],
        [1],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.8516, 0.8516, 1.0000, 0.9186, 0.9998, 0.7915, 1.0000, 0.9186, 0.8516,
         0.9186, 0.9949, 1.0000, 0.8706, 1.0000, 0.9875, 0.9998]])
scores: tensor([53.6953, 53.6953, 54.0455, 53.5709, 52.3742, 52.8558, 54.0455, 53.5709,
        53.6953, 53.5709, 52.9905, 54.0455, 53.2134, 54.0455, 51.8692, 52.0308])
new_beam_scores: tensor([[54.5469, 54.5469, 55.0455, 54.4895, 53.3741, 53.6473, 55.0455, 54.4895,
         54.5469, 54.4895, 53.9854, 55.0455, 54.0840, 55.0455, 52.8567, 53.0306]])
new_beam seq: tensor([[1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[54.5469, 54.5469, 55.0455, 54.4895, 53.3741, 53.6473, 55.0455, 54.4895,
         54.5469, 54.4895, 53.9854, 55.0455, 54.0840, 55.0455, 52.8567, 53.0306]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 2, 2,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 1, 2, 2, 2,
        2, 1, 0, 3, 2, 1, 1, 3, 2, 0, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        1, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 1, 2, 1,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 0, 2, 2, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 1, 2, 1,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 2, 1,
        2, 1, 1, 0, 2, 1, 1, 3, 2, 0, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 0, 1, 2, 2,
        2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 2, 2,
        1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 2, 2, 1, 1, 1, 1, 0, 1, 2, 2,
        1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0, 1,
        1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 0, 2, 1, 1, 3, 2, 0, 2, 2, 2, 1, 2, 2,
        1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 1, 2, 2, 1, 2, 1, 0, 3, 2, 1, 1, 3,
        2, 0, 2, 2, 2, 1, 2, 2], dtype=torch.int32)
logits: tensor([[-0.7434,  1.3610,  0.3900, -0.5401],
        [-0.7936,  2.1537, -0.2892, -0.6442],
        [ 0.5391,  1.5788,  0.4822, -0.6190],
        ...,
        [-1.2035,  3.0087, -1.2596, -1.4551],
        [-1.3634, -1.4862,  3.0949, -1.4627],
        [-0.8219,  0.2418,  1.0805, -1.6539]])
h_S size: torch.Size([896, 4])
tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size expanded indices: torch.Size([1, 16, 56])
tensor([[[1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 1, 2, 2, 1, 2, 1],
         [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 1, 2, 2, 1, 2, 1],
         [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 1, 2, 2, 0, 2, 2],
         [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 2, 2, 2, 1, 2, 2],
         [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 1, 2, 2, 2, 2, 1, 0, 3, 2, 1,
          1, 3, 2, 0, 2, 2, 2, 1, 2, 2],
         [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          2, 1, 1, 3, 1, 0, 0, 0, 1, 1, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 1, 2, 2, 1, 2, 1],
         [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 1, 2, 2, 0, 2, 2],
         [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 2, 2, 2, 1, 2, 2],
         [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          2, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 1, 2, 2, 1, 2, 1],
         [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 2, 2, 2, 1, 2, 2],
         [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 0, 2, 1,
          1, 3, 2, 0, 2, 2, 2, 1, 2, 2],
         [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 1, 2, 2, 0, 2, 2],
         [1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 2, 2, 2, 1, 2, 2],
         [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 1, 2, 2, 0, 2, 2],
         [1, 1, 1, 1, 0, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 0, 2, 1,
          1, 3, 2, 0, 2, 2, 2, 1, 2, 2],
         [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          2, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 1, 2, 2, 1, 2, 1, 0, 3, 2, 1,
          1, 3, 2, 0, 2, 2, 2, 1, 2, 2]]], dtype=torch.int32)
final_scores: tensor([54.5469, 54.5469, 55.0455, 54.4895, 53.3741, 53.6473, 55.0455, 54.4895,
        54.5469, 54.4895, 53.9854, 55.0455, 54.0840, 55.0455, 52.8567, 53.0306])
final_seq: tensor([[1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
         1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 1, 2, 2, 1, 2, 1],
        [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
         1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 1, 2, 2, 1, 2, 1],
        [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
         1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 1, 2, 2, 0, 2, 2],
        [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
         1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 2, 2, 2, 1, 2, 2],
        [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
         1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 1, 1, 2, 2, 2, 2, 1, 0, 3, 2, 1, 1, 3,
         2, 0, 2, 2, 2, 1, 2, 2],
        [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
         1, 1, 3, 1, 0, 0, 0, 1, 1, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 1, 2, 2, 1, 2, 1],
        [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
         1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 1, 2, 2, 0, 2, 2],
        [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
         1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 2, 2, 2, 1, 2, 2],
        [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
         1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 1, 2, 2, 1, 2, 1],
        [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
         1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 2, 2, 2, 1, 2, 2],
        [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
         1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 0, 2, 1, 1, 3,
         2, 0, 2, 2, 2, 1, 2, 2],
        [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
         1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 1, 2, 2, 0, 2, 2],
        [1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
         1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 2, 2, 2, 1, 2, 2],
        [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
         1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 1, 2, 2, 0, 2, 2],
        [1, 1, 1, 1, 0, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
         1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 0, 2, 1, 1, 3,
         2, 0, 2, 2, 2, 1, 2, 2],
        [1, 1, 1, 1, 0, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 2,
         1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 1, 2, 1, 2, 2, 1, 2, 1, 0, 3, 2, 1, 1, 3,
         2, 0, 2, 2, 2, 1, 2, 2]], dtype=torch.int32)
final_logits: tensor([[[-0.7434,  1.3610,  0.3900, -0.5401],
         [-0.7936,  2.1537, -0.2892, -0.6442],
         [ 0.5391,  1.5788,  0.4822, -0.6190],
         ...,
         [-1.1632,  2.9788, -1.1293, -1.2556],
         [-1.2659, -1.3641,  3.0788, -1.2924],
         [-0.9655,  1.0551,  0.8804, -1.4953]],

        [[-0.7434,  1.3610,  0.3900, -0.5401],
         [-0.7936,  2.1537, -0.2892, -0.6442],
         [ 0.5391,  1.5788,  0.4822, -0.6190],
         ...,
         [-1.1632,  2.9788, -1.1293, -1.2556],
         [-1.2659, -1.3641,  3.0788, -1.2924],
         [-0.9655,  1.0551,  0.8804, -1.4953]],

        [[-0.7434,  1.3610,  0.3900, -0.5401],
         [-0.7936,  2.1537, -0.2892, -0.6442],
         [ 0.5391,  1.5788,  0.4822, -0.6190],
         ...,
         [ 2.6327, -1.4701, -1.6706, -1.6631],
         [-1.1553, -1.3195,  3.1345, -1.1403],
         [-1.2962,  0.5212,  1.8207, -1.4249]],

        ...,

        [[-0.7434,  1.3610,  0.3900, -0.5401],
         [-0.7936,  2.1537, -0.2892, -0.6442],
         [ 0.5391,  1.5788,  0.4822, -0.6190],
         ...,
         [ 2.6327, -1.4701, -1.6706, -1.6631],
         [-1.1553, -1.3195,  3.1345, -1.1403],
         [-1.2962,  0.5212,  1.8207, -1.4249]],

        [[-0.7434,  1.3610,  0.3900, -0.5401],
         [-0.7936,  2.1537, -0.2892, -0.6442],
         [ 0.5391,  1.5788,  0.4822, -0.6190],
         ...,
         [-1.2384,  3.0255, -1.2570, -1.5330],
         [-1.4242, -1.5447,  3.1148, -1.5464],
         [-0.9100,  0.6038,  1.0405, -1.8275]],

        [[-0.7434,  1.3610,  0.3900, -0.5401],
         [-0.7936,  2.1537, -0.2892, -0.6442],
         [ 0.5391,  1.5788,  0.4822, -0.6190],
         ...,
         [-1.2035,  3.0087, -1.2596, -1.4551],
         [-1.3634, -1.4862,  3.0949, -1.4627],
         [-0.8219,  0.2418,  1.0805, -1.6539]]])
Coords: 60
Sequence: UCCCGUCCACCGCGGUGAGAAGGGGGCAGAGAAACACACGAUCGUGGUACAUUACCUGCC
Len sequence: 60
Detected base pairs: [[  17  486]
 [  37  463]
 [  57  440]
 [  77  728]
 [ 100  373]
 [ 120  351]
 [ 140  328]
 [ 160  308]
 [ 182  285]
 [ 202  262]
 [ 222  245]
 [ 509 1252]
 [ 529 1232]
 [ 552 1209]
 [ 572 1189]
 [ 594 1169]
 [ 617 1149]
 [ 639 1127]
 [ 662 1087]
 [ 684 1065]
 [ 748  980]
 [ 770  957]
 [ 790  937]
 [ 812  914]
 [ 832  894]
 [ 855  877]]
Secondary structure: '.((([((((((()))))))..)))(((((((((.](((((())))))...)).)))))))'
Sequence length: 60
Number of residues: 60
Chain IDs: ['A' 'B' 'C' 'D']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
.(((.((((((()))))))..)))(((((((((..(((((())))))...)).)))))))
Batch size:  (56, 56)
Number of nodes:  56
edge_index: tensor([[[ 0,  0,  0,  ..., 55, 55, 55],
         [ 1,  2,  3,  ..., 52, 53, 54]],

        [[ 0,  0,  0,  ..., 55, 55, 55],
         [ 1,  2,  3,  ..., 52, 53, 54]],

        [[ 0,  0,  0,  ..., 55, 55, 55],
         [ 1,  2,  3,  ..., 52, 53, 54]],

        ...,

        [[ 0,  0,  0,  ..., 55, 55, 55],
         [ 1,  2,  3,  ..., 52, 53, 54]],

        [[ 0,  0,  0,  ..., 55, 55, 55],
         [ 1,  2,  3,  ..., 52, 53, 54]],

        [[ 0,  0,  0,  ..., 55, 55, 55],
         [ 1,  2,  3,  ..., 52, 53, 54]]])
offset size: torch.Size([16, 1, 1])
offset: tensor([[[  0]],

        [[ 56]],

        [[112]],

        [[168]],

        [[224]],

        [[280]],

        [[336]],

        [[392]],

        [[448]],

        [[504]],

        [[560]],

        [[616]],

        [[672]],

        [[728]],

        [[784]],

        [[840]]])
Iteration :  0
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995,
         0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995]])
scores: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
new_beam_scores: tensor([[0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995,
         0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995,
         0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  1
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995,
        0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995, 0.9995])
new_beam_scores: tensor([[1.9995, 1.9995, 1.9995, 1.9995, 1.9995, 1.9995, 1.9995, 1.9995, 1.9995,
         1.9995, 1.9995, 1.9995, 1.9995, 1.9995, 1.9995, 1.9995]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[1.9995, 1.9995, 1.9995, 1.9995, 1.9995, 1.9995, 1.9995, 1.9995, 1.9995,
         1.9995, 1.9995, 1.9995, 1.9995, 1.9995, 1.9995, 1.9995]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  2
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([1.9995, 1.9995, 1.9995, 1.9995, 1.9995, 1.9995, 1.9995, 1.9995, 1.9995,
        1.9995, 1.9995, 1.9995, 1.9995, 1.9995, 1.9995, 1.9995])
new_beam_scores: tensor([[2.9995, 2.9995, 2.9995, 2.9995, 2.9995, 2.9995, 2.9995, 2.9995, 2.9995,
         2.9995, 2.9995, 2.9995, 2.9995, 2.9995, 2.9995, 2.9995]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[2.9995, 2.9995, 2.9995, 2.9995, 2.9995, 2.9995, 2.9995, 2.9995, 2.9995,
         2.9995, 2.9995, 2.9995, 2.9995, 2.9995, 2.9995, 2.9995]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  3
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([2.9995, 2.9995, 2.9995, 2.9995, 2.9995, 2.9995, 2.9995, 2.9995, 2.9995,
        2.9995, 2.9995, 2.9995, 2.9995, 2.9995, 2.9995, 2.9995])
new_beam_scores: tensor([[3.9995, 3.9995, 3.9995, 3.9995, 3.9995, 3.9995, 3.9995, 3.9995, 3.9995,
         3.9995, 3.9995, 3.9995, 3.9995, 3.9995, 3.9995, 3.9995]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[3.9995, 3.9995, 3.9995, 3.9995, 3.9995, 3.9995, 3.9995, 3.9995, 3.9995,
         3.9995, 3.9995, 3.9995, 3.9995, 3.9995, 3.9995, 3.9995]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  4
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [0],
        [3],
        [3],
        [3],
        [3],
        [0],
        [3],
        [0],
        [3],
        [3],
        [3],
        [0],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.6844, 0.6844, 0.3156, 0.6844, 0.6844, 0.6844, 0.6844, 0.3156, 0.6844,
         0.3156, 0.6844, 0.6844, 0.6844, 0.3156, 0.6844, 0.6844]])
scores: tensor([3.9995, 3.9995, 3.9995, 3.9995, 3.9995, 3.9995, 3.9995, 3.9995, 3.9995,
        3.9995, 3.9995, 3.9995, 3.9995, 3.9995, 3.9995, 3.9995])
new_beam_scores: tensor([[4.6839, 4.6839, 4.3151, 4.6839, 4.6839, 4.6839, 4.6839, 4.3151, 4.6839,
         4.3151, 4.6839, 4.6839, 4.6839, 4.3151, 4.6839, 4.6839]])
new_beam seq: tensor([[3, 3, 0, 3, 3, 3, 3, 0, 3, 0, 3, 3, 3, 0, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[4.6839, 4.6839, 4.3151, 4.6839, 4.6839, 4.6839, 4.6839, 4.3151, 4.6839,
         4.3151, 4.6839, 4.6839, 4.6839, 4.3151, 4.6839, 4.6839]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([3, 3, 0, 3, 3, 3, 3, 0, 3, 0, 3, 3, 3, 0, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  5
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([4.6839, 4.6839, 4.3151, 4.6839, 4.6839, 4.6839, 4.6839, 4.3151, 4.6839,
        4.3151, 4.6839, 4.6839, 4.6839, 4.3151, 4.6839, 4.6839])
new_beam_scores: tensor([[5.6839, 5.6839, 5.3151, 5.6839, 5.6839, 5.6839, 5.6839, 5.3151, 5.6839,
         5.3151, 5.6839, 5.6839, 5.6839, 5.3151, 5.6839, 5.6839]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[5.6839, 5.6839, 5.3151, 5.6839, 5.6839, 5.6839, 5.6839, 5.3151, 5.6839,
         5.3151, 5.6839, 5.6839, 5.6839, 5.3151, 5.6839, 5.6839]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  6
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([5.6839, 5.6839, 5.3151, 5.6839, 5.6839, 5.6839, 5.6839, 5.3151, 5.6839,
        5.3151, 5.6839, 5.6839, 5.6839, 5.3151, 5.6839, 5.6839])
new_beam_scores: tensor([[6.6839, 6.6839, 6.3151, 6.6839, 6.6839, 6.6839, 6.6839, 6.3151, 6.6839,
         6.3151, 6.6839, 6.6839, 6.6839, 6.3151, 6.6839, 6.6839]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[6.6839, 6.6839, 6.3151, 6.6839, 6.6839, 6.6839, 6.6839, 6.3151, 6.6839,
         6.3151, 6.6839, 6.6839, 6.6839, 6.3151, 6.6839, 6.6839]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  7
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [2],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9727, 0.9727, 0.9973, 0.9727, 0.9727, 0.0252, 0.9727, 0.9973, 0.9727,
         0.9973, 0.9727, 0.9727, 0.9727, 0.9973, 0.9727, 0.9727]])
scores: tensor([6.6839, 6.6839, 6.3151, 6.6839, 6.6839, 6.6839, 6.6839, 6.3151, 6.6839,
        6.3151, 6.6839, 6.6839, 6.6839, 6.3151, 6.6839, 6.6839])
new_beam_scores: tensor([[7.6566, 7.6566, 7.3124, 7.6566, 7.6566, 6.7091, 7.6566, 7.3124, 7.6566,
         7.3124, 7.6566, 7.6566, 7.6566, 7.3124, 7.6566, 7.6566]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[7.6566, 7.6566, 7.3124, 7.6566, 7.6566, 6.7091, 7.6566, 7.3124, 7.6566,
         7.3124, 7.6566, 7.6566, 7.6566, 7.3124, 7.6566, 7.6566]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  8
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([7.6566, 7.6566, 7.3124, 7.6566, 7.6566, 6.7091, 7.6566, 7.3124, 7.6566,
        7.3124, 7.6566, 7.6566, 7.6566, 7.3124, 7.6566, 7.6566])
new_beam_scores: tensor([[8.6566, 8.6566, 8.3124, 8.6566, 8.6566, 7.7090, 8.6566, 8.3124, 8.6566,
         8.3124, 8.6566, 8.6566, 8.6566, 8.3124, 8.6566, 8.6566]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[8.6566, 8.6566, 8.3124, 8.6566, 8.6566, 7.7090, 8.6566, 8.3124, 8.6566,
         8.3124, 8.6566, 8.6566, 8.6566, 8.3124, 8.6566, 8.6566]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  9
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [2],
        [0],
        [2],
        [2],
        [0],
        [2],
        [2],
        [2],
        [0],
        [0],
        [1],
        [1],
        [2],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.5869, 0.5869, 0.3155, 0.5869, 0.2353, 0.5562, 0.5869, 0.3155, 0.2353,
         0.3155, 0.5869, 0.5869, 0.1778, 0.2119, 0.2353, 0.1778]])
scores: tensor([8.6566, 8.6566, 8.3124, 8.6566, 8.6566, 7.7090, 8.6566, 8.3124, 8.6566,
        8.3124, 8.6566, 8.6566, 8.6566, 8.3124, 8.6566, 8.6566])
new_beam_scores: tensor([[9.2435, 9.2435, 8.6279, 9.2435, 8.8920, 8.2651, 9.2435, 8.6279, 8.8920,
         8.6279, 9.2435, 9.2435, 8.8344, 8.5243, 8.8920, 8.8344]])
new_beam seq: tensor([[0, 0, 2, 0, 2, 2, 0, 2, 2, 2, 0, 0, 1, 1, 2, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[9.2435, 9.2435, 8.6279, 9.2435, 8.8920, 8.2651, 9.2435, 8.6279, 8.8920,
         8.6279, 9.2435, 9.2435, 8.8344, 8.5243, 8.8920, 8.8344]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([0, 0, 2, 0, 2, 2, 0, 2, 2, 2, 0, 0, 1, 1, 2, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  10
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([9.2435, 9.2435, 8.6279, 9.2435, 8.8920, 8.2651, 9.2435, 8.6279, 8.8920,
        8.6279, 9.2435, 9.2435, 8.8344, 8.5243, 8.8920, 8.8344])
new_beam_scores: tensor([[10.2435, 10.2435,  9.6279, 10.2435,  9.8920,  9.2651, 10.2435,  9.6279,
          9.8920,  9.6279, 10.2435, 10.2435,  9.8344,  9.5243,  9.8920,  9.8344]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[10.2435, 10.2435,  9.6279, 10.2435,  9.8920,  9.2651, 10.2435,  9.6279,
          9.8920,  9.6279, 10.2435, 10.2435,  9.8344,  9.5243,  9.8920,  9.8344]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  11
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [1],
        [3],
        [1],
        [1],
        [3],
        [1],
        [1],
        [1],
        [3],
        [3],
        [2],
        [2],
        [1],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([10.2435, 10.2435,  9.6279, 10.2435,  9.8920,  9.2651, 10.2435,  9.6279,
         9.8920,  9.6279, 10.2435, 10.2435,  9.8344,  9.5243,  9.8920,  9.8344])
new_beam_scores: tensor([[11.2435, 11.2435, 10.6279, 11.2435, 10.8920, 10.2651, 11.2435, 10.6279,
         10.8920, 10.6279, 11.2435, 11.2435, 10.8344, 10.5243, 10.8920, 10.8344]])
new_beam seq: tensor([[3, 3, 1, 3, 1, 1, 3, 1, 1, 1, 3, 3, 2, 2, 1, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[11.2435, 11.2435, 10.6279, 11.2435, 10.8920, 10.2651, 11.2435, 10.6279,
         10.8920, 10.6279, 11.2435, 11.2435, 10.8344, 10.5243, 10.8920, 10.8344]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([3, 3, 1, 3, 1, 1, 3, 1, 1, 1, 3, 3, 2, 2, 1, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  12
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([11.2435, 11.2435, 10.6279, 11.2435, 10.8920, 10.2651, 11.2435, 10.6279,
        10.8920, 10.6279, 11.2435, 11.2435, 10.8344, 10.5243, 10.8920, 10.8344])
new_beam_scores: tensor([[12.2435, 12.2435, 11.6279, 12.2435, 11.8920, 11.2651, 12.2435, 11.6279,
         11.8920, 11.6279, 12.2435, 12.2435, 11.8344, 11.5243, 11.8920, 11.8344]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[12.2435, 12.2435, 11.6279, 12.2435, 11.8920, 11.2651, 12.2435, 11.6279,
         11.8920, 11.6279, 12.2435, 12.2435, 11.8344, 11.5243, 11.8920, 11.8344]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  13
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [1],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([12.2435, 12.2435, 11.6279, 12.2435, 11.8920, 11.2651, 12.2435, 11.6279,
        11.8920, 11.6279, 12.2435, 12.2435, 11.8344, 11.5243, 11.8920, 11.8344])
new_beam_scores: tensor([[13.2435, 13.2435, 12.6279, 13.2435, 12.8920, 12.2651, 13.2435, 12.6279,
         12.8920, 12.6279, 13.2435, 13.2435, 12.8344, 12.5243, 12.8920, 12.8344]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[13.2435, 13.2435, 12.6279, 13.2435, 12.8920, 12.2651, 13.2435, 12.6279,
         12.8920, 12.6279, 13.2435, 13.2435, 12.8344, 12.5243, 12.8920, 12.8344]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  14
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([13.2435, 13.2435, 12.6279, 13.2435, 12.8920, 12.2651, 13.2435, 12.6279,
        12.8920, 12.6279, 13.2435, 13.2435, 12.8344, 12.5243, 12.8920, 12.8344])
new_beam_scores: tensor([[14.2435, 14.2435, 13.6279, 14.2435, 13.8920, 13.2651, 14.2435, 13.6279,
         13.8920, 13.6279, 14.2435, 14.2435, 13.8344, 13.5243, 13.8920, 13.8344]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[14.2435, 14.2435, 13.6279, 14.2435, 13.8920, 13.2651, 14.2435, 13.6279,
         13.8920, 13.6279, 14.2435, 14.2435, 13.8344, 13.5243, 13.8920, 13.8344]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  15
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [2],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9995, 0.9995, 0.9762, 0.9995, 0.9410, 0.9838, 0.9995, 0.9762, 0.0590,
         0.9762, 0.9995, 0.9995, 0.9811, 0.9927, 0.9410, 0.9811]])
scores: tensor([14.2435, 14.2435, 13.6279, 14.2435, 13.8920, 13.2651, 14.2435, 13.6279,
        13.8920, 13.6279, 14.2435, 14.2435, 13.8344, 13.5243, 13.8920, 13.8344])
new_beam_scores: tensor([[15.2430, 15.2430, 14.6041, 15.2430, 14.8330, 14.2489, 15.2430, 14.6041,
         13.9509, 14.6041, 15.2430, 15.2430, 14.8155, 14.5170, 14.8330, 14.8155]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[15.2430, 15.2430, 14.6041, 15.2430, 14.8330, 14.2489, 15.2430, 14.6041,
         13.9509, 14.6041, 15.2430, 15.2430, 14.8155, 14.5170, 14.8330, 14.8155]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  16
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 1.0000, 0.9989,
         1.0000, 1.0000, 1.0000, 0.9997, 1.0000, 0.9999, 0.9997]])
scores: tensor([15.2430, 15.2430, 14.6041, 15.2430, 14.8330, 14.2489, 15.2430, 14.6041,
        13.9509, 14.6041, 15.2430, 15.2430, 14.8155, 14.5170, 14.8330, 14.8155])
new_beam_scores: tensor([[16.2430, 16.2430, 15.6041, 16.2430, 15.8329, 15.2489, 16.2430, 15.6041,
         14.9498, 15.6041, 16.2430, 16.2430, 15.8152, 15.5170, 15.8329, 15.8152]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[16.2430, 16.2430, 15.6041, 16.2430, 15.8329, 15.2489, 16.2430, 15.6041,
         14.9498, 15.6041, 16.2430, 16.2430, 15.8152, 15.5170, 15.8329, 15.8152]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  17
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9999, 0.9999, 0.9993, 0.9999, 1.0000, 1.0000, 0.9999, 0.9993, 0.9992,
         0.9993, 0.9999, 0.9999, 1.0000, 0.9728, 1.0000, 1.0000]])
scores: tensor([16.2430, 16.2430, 15.6041, 16.2430, 15.8329, 15.2489, 16.2430, 15.6041,
        14.9498, 15.6041, 16.2430, 16.2430, 15.8152, 15.5170, 15.8329, 15.8152])
new_beam_scores: tensor([[17.2429, 17.2429, 16.6034, 17.2429, 16.8329, 16.2489, 17.2429, 16.6034,
         15.9491, 16.6034, 17.2429, 17.2429, 16.8152, 16.4898, 16.8329, 16.8152]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[17.2429, 17.2429, 16.6034, 17.2429, 16.8329, 16.2489, 17.2429, 16.6034,
         15.9491, 16.6034, 17.2429, 17.2429, 16.8152, 16.4898, 16.8329, 16.8152]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  18
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9999, 0.9999, 1.0000, 0.9999, 0.9999, 1.0000, 0.9999, 1.0000, 0.9783,
         1.0000, 0.9999, 0.9999, 0.9999, 1.0000, 0.9999, 0.9999]])
scores: tensor([17.2429, 17.2429, 16.6034, 17.2429, 16.8329, 16.2489, 17.2429, 16.6034,
        15.9491, 16.6034, 17.2429, 17.2429, 16.8152, 16.4898, 16.8329, 16.8152])
new_beam_scores: tensor([[18.2428, 18.2428, 17.6034, 18.2428, 17.8328, 17.2488, 18.2428, 17.6034,
         16.9273, 17.6034, 18.2428, 18.2428, 17.8151, 17.4898, 17.8328, 17.8151]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[18.2428, 18.2428, 17.6034, 18.2428, 17.8328, 17.2488, 18.2428, 17.6034,
         16.9273, 17.6034, 18.2428, 18.2428, 17.8151, 17.4898, 17.8328, 17.8151]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  19
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([18.2428, 18.2428, 17.6034, 18.2428, 17.8328, 17.2488, 18.2428, 17.6034,
        16.9273, 17.6034, 18.2428, 18.2428, 17.8151, 17.4898, 17.8328, 17.8151])
new_beam_scores: tensor([[19.2428, 19.2428, 18.6034, 19.2428, 18.8328, 18.2488, 19.2428, 18.6034,
         17.9273, 18.6034, 19.2428, 19.2428, 18.8151, 18.4898, 18.8328, 18.8151]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[19.2428, 19.2428, 18.6034, 19.2428, 18.8328, 18.2488, 19.2428, 18.6034,
         17.9273, 18.6034, 19.2428, 19.2428, 18.8151, 18.4898, 18.8328, 18.8151]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  20
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([19.2428, 19.2428, 18.6034, 19.2428, 18.8328, 18.2488, 19.2428, 18.6034,
        17.9273, 18.6034, 19.2428, 19.2428, 18.8151, 18.4898, 18.8328, 18.8151])
new_beam_scores: tensor([[20.2428, 20.2428, 19.6034, 20.2428, 19.8328, 19.2488, 20.2428, 19.6034,
         18.9273, 19.6034, 20.2428, 20.2428, 19.8151, 19.4898, 19.8328, 19.8151]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[20.2428, 20.2428, 19.6034, 20.2428, 19.8328, 19.2488, 20.2428, 19.6034,
         18.9273, 19.6034, 20.2428, 20.2428, 19.8151, 19.4898, 19.8328, 19.8151]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  21
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([20.2428, 20.2428, 19.6034, 20.2428, 19.8328, 19.2488, 20.2428, 19.6034,
        18.9273, 19.6034, 20.2428, 20.2428, 19.8151, 19.4898, 19.8328, 19.8151])
new_beam_scores: tensor([[21.2428, 21.2428, 20.6034, 21.2428, 20.8328, 20.2488, 21.2428, 20.6034,
         19.9273, 20.6034, 21.2428, 21.2428, 20.8151, 20.4898, 20.8328, 20.8151]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[21.2428, 21.2428, 20.6034, 21.2428, 20.8328, 20.2488, 21.2428, 20.6034,
         19.9273, 20.6034, 21.2428, 21.2428, 20.8151, 20.4898, 20.8328, 20.8151]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  22
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([21.2428, 21.2428, 20.6034, 21.2428, 20.8328, 20.2488, 21.2428, 20.6034,
        19.9273, 20.6034, 21.2428, 21.2428, 20.8151, 20.4898, 20.8328, 20.8151])
new_beam_scores: tensor([[22.2428, 22.2428, 21.6034, 22.2428, 21.8328, 21.2488, 22.2428, 21.6034,
         20.9273, 21.6034, 22.2428, 22.2428, 21.8151, 21.4898, 21.8328, 21.8151]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[22.2428, 22.2428, 21.6034, 22.2428, 21.8328, 21.2488, 22.2428, 21.6034,
         20.9273, 21.6034, 22.2428, 22.2428, 21.8151, 21.4898, 21.8328, 21.8151]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  23
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 0.9968, 1.0000, 0.9945, 0.9998, 1.0000, 0.9968, 0.9789,
         0.9968, 1.0000, 1.0000, 0.9966, 0.9980, 0.9945, 0.9966]])
scores: tensor([22.2428, 22.2428, 21.6034, 22.2428, 21.8328, 21.2488, 22.2428, 21.6034,
        20.9273, 21.6034, 22.2428, 22.2428, 21.8151, 21.4898, 21.8328, 21.8151])
new_beam_scores: tensor([[23.2428, 23.2428, 22.6002, 23.2428, 22.8273, 22.2486, 23.2428, 22.6002,
         21.9062, 22.6002, 23.2428, 23.2428, 22.8117, 22.4878, 22.8273, 22.8117]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[23.2428, 23.2428, 22.6002, 23.2428, 22.8273, 22.2486, 23.2428, 22.6002,
         21.9062, 22.6002, 23.2428, 23.2428, 22.8117, 22.4878, 22.8273, 22.8117]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  24
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([23.2428, 23.2428, 22.6002, 23.2428, 22.8273, 22.2486, 23.2428, 22.6002,
        21.9062, 22.6002, 23.2428, 23.2428, 22.8117, 22.4878, 22.8273, 22.8117])
new_beam_scores: tensor([[24.2428, 24.2428, 23.6002, 24.2428, 23.8273, 23.2486, 24.2428, 23.6002,
         22.9062, 23.6002, 24.2428, 24.2428, 23.8117, 23.4878, 23.8273, 23.8117]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[24.2428, 24.2428, 23.6002, 24.2428, 23.8273, 23.2486, 24.2428, 23.6002,
         22.9062, 23.6002, 24.2428, 24.2428, 23.8117, 23.4878, 23.8273, 23.8117]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  25
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([24.2428, 24.2428, 23.6002, 24.2428, 23.8273, 23.2486, 24.2428, 23.6002,
        22.9062, 23.6002, 24.2428, 24.2428, 23.8117, 23.4878, 23.8273, 23.8117])
new_beam_scores: tensor([[25.2428, 25.2428, 24.6002, 25.2428, 24.8273, 24.2486, 25.2428, 24.6002,
         23.9062, 24.6002, 25.2428, 25.2428, 24.8117, 24.4878, 24.8273, 24.8117]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[25.2428, 25.2428, 24.6002, 25.2428, 24.8273, 24.2486, 25.2428, 24.6002,
         23.9062, 24.6002, 25.2428, 25.2428, 24.8117, 24.4878, 24.8273, 24.8117]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  26
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [1],
        [1],
        [1],
        [1],
        [3],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.6692, 0.6692, 0.9992, 0.6692, 0.9993, 0.9991, 0.6692, 0.9992, 0.9952,
         0.9992, 0.3308, 0.3308, 0.9617, 0.9611, 0.9993, 0.9617]])
scores: tensor([25.2428, 25.2428, 24.6002, 25.2428, 24.8273, 24.2486, 25.2428, 24.6002,
        23.9062, 24.6002, 25.2428, 25.2428, 24.8117, 24.4878, 24.8273, 24.8117])
new_beam_scores: tensor([[25.9120, 25.9120, 25.5994, 25.9120, 25.8265, 25.2477, 25.9120, 25.5994,
         24.9014, 25.5994, 25.5736, 25.5736, 25.7734, 25.4489, 25.8265, 25.7734]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 3, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[25.9120, 25.9120, 25.5994, 25.9120, 25.8265, 25.2477, 25.9120, 25.5994,
         24.9014, 25.5994, 25.5736, 25.5736, 25.7734, 25.4489, 25.8265, 25.7734]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 3, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  27
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([25.9120, 25.9120, 25.5994, 25.9120, 25.8265, 25.2477, 25.9120, 25.5994,
        24.9014, 25.5994, 25.5736, 25.5736, 25.7734, 25.4489, 25.8265, 25.7734])
new_beam_scores: tensor([[26.9120, 26.9120, 26.5994, 26.9120, 26.8265, 26.2477, 26.9120, 26.5994,
         25.9014, 26.5994, 26.5736, 26.5736, 26.7734, 26.4489, 26.8265, 26.7734]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[26.9120, 26.9120, 26.5994, 26.9120, 26.8265, 26.2477, 26.9120, 26.5994,
         25.9014, 26.5994, 26.5736, 26.5736, 26.7734, 26.4489, 26.8265, 26.7734]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  28
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([26.9120, 26.9120, 26.5994, 26.9120, 26.8265, 26.2477, 26.9120, 26.5994,
        25.9014, 26.5994, 26.5736, 26.5736, 26.7734, 26.4489, 26.8265, 26.7734])
new_beam_scores: tensor([[27.9120, 27.9120, 27.5994, 27.9120, 27.8265, 27.2477, 27.9120, 27.5994,
         26.9014, 27.5994, 27.5736, 27.5736, 27.7734, 27.4489, 27.8265, 27.7734]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[27.9120, 27.9120, 27.5994, 27.9120, 27.8265, 27.2477, 27.9120, 27.5994,
         26.9014, 27.5994, 27.5736, 27.5736, 27.7734, 27.4489, 27.8265, 27.7734]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  29
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [0],
        [1],
        [0],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9719, 0.9719, 0.2061, 0.9719, 0.9302, 0.9110, 0.9719, 0.7939, 0.8966,
         0.7939, 0.6148, 0.6148, 0.2577, 0.9022, 0.9302, 0.7423]])
scores: tensor([27.9120, 27.9120, 27.5994, 27.9120, 27.8265, 27.2477, 27.9120, 27.5994,
        26.9014, 27.5994, 27.5736, 27.5736, 27.7734, 27.4489, 27.8265, 27.7734])
new_beam_scores: tensor([[28.8839, 28.8839, 27.8055, 28.8839, 28.7567, 28.1587, 28.8839, 28.3933,
         27.7980, 28.3933, 28.1885, 28.1885, 28.0311, 28.3511, 28.7567, 28.5156]])
new_beam seq: tensor([[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[28.8839, 28.8839, 27.8055, 28.8839, 28.7567, 28.1587, 28.8839, 28.3933,
         27.7980, 28.3933, 28.1885, 28.1885, 28.0311, 28.3511, 28.7567, 28.5156]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  30
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([28.8839, 28.8839, 27.8055, 28.8839, 28.7567, 28.1587, 28.8839, 28.3933,
        27.7980, 28.3933, 28.1885, 28.1885, 28.0311, 28.3511, 28.7567, 28.5156])
new_beam_scores: tensor([[29.8839, 29.8839, 28.8055, 29.8839, 29.7567, 29.1587, 29.8839, 29.3933,
         28.7980, 29.3933, 29.1885, 29.1885, 29.0311, 29.3511, 29.7567, 29.5156]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[29.8839, 29.8839, 28.8055, 29.8839, 29.7567, 29.1587, 29.8839, 29.3933,
         28.7980, 29.3933, 29.1885, 29.1885, 29.0311, 29.3511, 29.7567, 29.5156]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  31
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([29.8839, 29.8839, 28.8055, 29.8839, 29.7567, 29.1587, 29.8839, 29.3933,
        28.7980, 29.3933, 29.1885, 29.1885, 29.0311, 29.3511, 29.7567, 29.5156])
new_beam_scores: tensor([[30.8839, 30.8839, 29.8055, 30.8839, 30.7567, 30.1587, 30.8839, 30.3933,
         29.7980, 30.3933, 30.1885, 30.1885, 30.0311, 30.3511, 30.7567, 30.5156]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[30.8839, 30.8839, 29.8055, 30.8839, 30.7567, 30.1587, 30.8839, 30.3933,
         29.7980, 30.3933, 30.1885, 30.1885, 30.0311, 30.3511, 30.7567, 30.5156]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  32
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 0.9998, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 0.9786, 1.0000, 1.0000]])
scores: tensor([30.8839, 30.8839, 29.8055, 30.8839, 30.7567, 30.1587, 30.8839, 30.3933,
        29.7980, 30.3933, 30.1885, 30.1885, 30.0311, 30.3511, 30.7567, 30.5156])
new_beam_scores: tensor([[31.8839, 31.8839, 30.8053, 31.8839, 31.7567, 31.1587, 31.8839, 31.3933,
         30.7980, 31.3933, 31.1885, 31.1885, 31.0311, 31.3297, 31.7567, 31.5156]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[31.8839, 31.8839, 30.8053, 31.8839, 31.7567, 31.1587, 31.8839, 31.3933,
         30.7980, 31.3933, 31.1885, 31.1885, 31.0311, 31.3297, 31.7567, 31.5156]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  33
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([31.8839, 31.8839, 30.8053, 31.8839, 31.7567, 31.1587, 31.8839, 31.3933,
        30.7980, 31.3933, 31.1885, 31.1885, 31.0311, 31.3297, 31.7567, 31.5156])
new_beam_scores: tensor([[32.8839, 32.8839, 31.8053, 32.8839, 32.7567, 32.1587, 32.8839, 32.3933,
         31.7980, 32.3933, 32.1885, 32.1885, 32.0311, 32.3297, 32.7567, 32.5156]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[32.8839, 32.8839, 31.8053, 32.8839, 32.7567, 32.1587, 32.8839, 32.3933,
         31.7980, 32.3933, 32.1885, 32.1885, 32.0311, 32.3297, 32.7567, 32.5156]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  34
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000]])
scores: tensor([32.8839, 32.8839, 31.8053, 32.8839, 32.7567, 32.1587, 32.8839, 32.3933,
        31.7980, 32.3933, 32.1885, 32.1885, 32.0311, 32.3297, 32.7567, 32.5156])
new_beam_scores: tensor([[33.8839, 33.8839, 32.8053, 33.8839, 33.7567, 33.1587, 33.8839, 33.3933,
         32.7980, 33.3933, 33.1885, 33.1885, 33.0311, 33.3296, 33.7567, 33.5156]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[33.8839, 33.8839, 32.8053, 33.8839, 33.7567, 33.1587, 33.8839, 33.3933,
         32.7980, 33.3933, 33.1885, 33.1885, 33.0311, 33.3296, 33.7567, 33.5156]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  35
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [2],
        [1],
        [2],
        [1],
        [1],
        [2],
        [2],
        [2],
        [1],
        [1],
        [1],
        [1],
        [2],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.8594, 0.8594, 0.3225, 0.8594, 0.8524, 0.6017, 0.8594, 0.6175, 0.8916,
         0.6175, 0.9570, 0.9570, 0.7220, 0.9717, 0.8524, 0.9114]])
scores: tensor([33.8839, 33.8839, 32.8053, 33.8839, 33.7567, 33.1587, 33.8839, 33.3933,
        32.7980, 33.3933, 33.1885, 33.1885, 33.0311, 33.3296, 33.7567, 33.5156])
new_beam_scores: tensor([[34.7433, 34.7433, 33.1278, 34.7433, 34.6091, 33.7604, 34.7433, 34.0108,
         33.6896, 34.0108, 34.1454, 34.1454, 33.7531, 34.3013, 34.6091, 34.4270]])
new_beam seq: tensor([[1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[34.7433, 34.7433, 33.1278, 34.7433, 34.6091, 33.7604, 34.7433, 34.0108,
         33.6896, 34.0108, 34.1454, 34.1454, 33.7531, 34.3013, 34.6091, 34.4270]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  36
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9999, 0.9999, 0.9997, 0.9999, 0.9998, 0.9457, 0.9999, 0.9995, 0.9998,
         0.9995, 1.0000, 1.0000, 1.0000, 1.0000, 0.9998, 1.0000]])
scores: tensor([34.7433, 34.7433, 33.1278, 34.7433, 34.6091, 33.7604, 34.7433, 34.0108,
        33.6896, 34.0108, 34.1454, 34.1454, 33.7531, 34.3013, 34.6091, 34.4270])
new_beam_scores: tensor([[35.7432, 35.7432, 34.1275, 35.7432, 35.6089, 34.7061, 35.7432, 35.0103,
         34.6895, 35.0103, 35.1454, 35.1454, 34.7530, 35.3013, 35.6089, 35.4270]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[35.7432, 35.7432, 34.1275, 35.7432, 35.6089, 34.7061, 35.7432, 35.0103,
         34.6895, 35.0103, 35.1454, 35.1454, 34.7530, 35.3013, 35.6089, 35.4270]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  37
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([35.7432, 35.7432, 34.1275, 35.7432, 35.6089, 34.7061, 35.7432, 35.0103,
        34.6895, 35.0103, 35.1454, 35.1454, 34.7530, 35.3013, 35.6089, 35.4270])
new_beam_scores: tensor([[36.7432, 36.7432, 35.1275, 36.7432, 36.6089, 35.7061, 36.7432, 36.0103,
         35.6895, 36.0103, 36.1454, 36.1454, 35.7530, 36.3013, 36.6089, 36.4270]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[36.7432, 36.7432, 35.1275, 36.7432, 36.6089, 35.7061, 36.7432, 36.0103,
         35.6895, 36.0103, 36.1454, 36.1454, 35.7530, 36.3013, 36.6089, 36.4270]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  38
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([36.7432, 36.7432, 35.1275, 36.7432, 36.6089, 35.7061, 36.7432, 36.0103,
        35.6895, 36.0103, 36.1454, 36.1454, 35.7530, 36.3013, 36.6089, 36.4270])
new_beam_scores: tensor([[37.7432, 37.7432, 36.1275, 37.7432, 37.6089, 36.7061, 37.7432, 37.0103,
         36.6895, 37.0103, 37.1454, 37.1454, 36.7530, 37.3013, 37.6089, 37.4270]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[37.7432, 37.7432, 36.1275, 37.7432, 37.6089, 36.7061, 37.7432, 37.0103,
         36.6895, 37.0103, 37.1454, 37.1454, 36.7530, 37.3013, 37.6089, 37.4270]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  39
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [1],
        [2],
        [1],
        [2],
        [2],
        [1],
        [1],
        [1],
        [2],
        [2],
        [2],
        [2],
        [1],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([37.7432, 37.7432, 36.1275, 37.7432, 37.6089, 36.7061, 37.7432, 37.0103,
        36.6895, 37.0103, 37.1454, 37.1454, 36.7530, 37.3013, 37.6089, 37.4270])
new_beam_scores: tensor([[38.7432, 38.7432, 37.1275, 38.7432, 38.6089, 37.7061, 38.7432, 38.0103,
         37.6895, 38.0103, 38.1454, 38.1454, 37.7530, 38.3013, 38.6089, 38.4270]])
new_beam seq: tensor([[2, 2, 1, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[38.7432, 38.7432, 37.1275, 38.7432, 38.6089, 37.7061, 38.7432, 38.0103,
         37.6895, 38.0103, 38.1454, 38.1454, 37.7530, 38.3013, 38.6089, 38.4270]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 1, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  40
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([38.7432, 38.7432, 37.1275, 38.7432, 38.6089, 37.7061, 38.7432, 38.0103,
        37.6895, 38.0103, 38.1454, 38.1454, 37.7530, 38.3013, 38.6089, 38.4270])
new_beam_scores: tensor([[39.7432, 39.7432, 38.1275, 39.7432, 39.6089, 38.7061, 39.7432, 39.0103,
         38.6895, 39.0103, 39.1454, 39.1454, 38.7530, 39.3013, 39.6089, 39.4270]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[39.7432, 39.7432, 38.1275, 39.7432, 39.6089, 38.7061, 39.7432, 39.0103,
         38.6895, 39.0103, 39.1454, 39.1454, 38.7530, 39.3013, 39.6089, 39.4270]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  41
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([39.7432, 39.7432, 38.1275, 39.7432, 39.6089, 38.7061, 39.7432, 39.0103,
        38.6895, 39.0103, 39.1454, 39.1454, 38.7530, 39.3013, 39.6089, 39.4270])
new_beam_scores: tensor([[40.7432, 40.7432, 39.1275, 40.7432, 40.6089, 39.7061, 40.7432, 40.0103,
         39.6895, 40.0103, 40.1454, 40.1454, 39.7530, 40.3013, 40.6089, 40.4270]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[40.7432, 40.7432, 39.1275, 40.7432, 40.6089, 39.7061, 40.7432, 40.0103,
         39.6895, 40.0103, 40.1454, 40.1454, 39.7530, 40.3013, 40.6089, 40.4270]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  42
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 0.9998, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 0.9999]])
scores: tensor([40.7432, 40.7432, 39.1275, 40.7432, 40.6089, 39.7061, 40.7432, 40.0103,
        39.6895, 40.0103, 40.1454, 40.1454, 39.7530, 40.3013, 40.6089, 40.4270])
new_beam_scores: tensor([[41.7432, 41.7432, 40.1274, 41.7432, 41.6089, 40.7059, 41.7432, 41.0102,
         40.6895, 41.0102, 41.1454, 41.1454, 40.7530, 41.3012, 41.6089, 41.4269]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[41.7432, 41.7432, 40.1274, 41.7432, 41.6089, 40.7059, 41.7432, 41.0102,
         40.6895, 41.0102, 41.1454, 41.1454, 40.7530, 41.3012, 41.6089, 41.4269]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  43
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999]])
scores: tensor([41.7432, 41.7432, 40.1274, 41.7432, 41.6089, 40.7059, 41.7432, 41.0102,
        40.6895, 41.0102, 41.1454, 41.1454, 40.7530, 41.3012, 41.6089, 41.4269])
new_beam_scores: tensor([[42.7432, 42.7432, 41.1274, 42.7432, 42.6089, 41.7059, 42.7432, 42.0102,
         41.6894, 42.0102, 42.1454, 42.1454, 41.7530, 42.3012, 42.6089, 42.4268]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[42.7432, 42.7432, 41.1274, 42.7432, 42.6089, 41.7059, 42.7432, 42.0102,
         41.6894, 42.0102, 42.1454, 42.1454, 41.7530, 42.3012, 42.6089, 42.4268]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  44
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([42.7432, 42.7432, 41.1274, 42.7432, 42.6089, 41.7059, 42.7432, 42.0102,
        41.6894, 42.0102, 42.1454, 42.1454, 41.7530, 42.3012, 42.6089, 42.4268])
new_beam_scores: tensor([[43.7432, 43.7432, 42.1274, 43.7432, 43.6089, 42.7059, 43.7432, 43.0102,
         42.6894, 43.0102, 43.1454, 43.1454, 42.7530, 43.3012, 43.6089, 43.4268]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[43.7432, 43.7432, 42.1274, 43.7432, 43.6089, 42.7059, 43.7432, 43.0102,
         42.6894, 43.0102, 43.1454, 43.1454, 42.7530, 43.3012, 43.6089, 43.4268]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  45
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([43.7432, 43.7432, 42.1274, 43.7432, 43.6089, 42.7059, 43.7432, 43.0102,
        42.6894, 43.0102, 43.1454, 43.1454, 42.7530, 43.3012, 43.6089, 43.4268])
new_beam_scores: tensor([[44.7432, 44.7432, 43.1274, 44.7432, 44.6089, 43.7059, 44.7432, 44.0102,
         43.6894, 44.0102, 44.1454, 44.1454, 43.7530, 44.3012, 44.6089, 44.4268]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[44.7432, 44.7432, 43.1274, 44.7432, 44.6089, 43.7059, 44.7432, 44.0102,
         43.6894, 44.0102, 44.1454, 44.1454, 43.7530, 44.3012, 44.6089, 44.4268]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  46
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([44.7432, 44.7432, 43.1274, 44.7432, 44.6089, 43.7059, 44.7432, 44.0102,
        43.6894, 44.0102, 44.1454, 44.1454, 43.7530, 44.3012, 44.6089, 44.4268])
new_beam_scores: tensor([[45.7432, 45.7432, 44.1274, 45.7432, 45.6089, 44.7059, 45.7432, 45.0102,
         44.6894, 45.0102, 45.1454, 45.1454, 44.7530, 45.3012, 45.6089, 45.4268]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[45.7432, 45.7432, 44.1274, 45.7432, 45.6089, 44.7059, 45.7432, 45.0102,
         44.6894, 45.0102, 45.1454, 45.1454, 44.7530, 45.3012, 45.6089, 45.4268]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  47
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([45.7432, 45.7432, 44.1274, 45.7432, 45.6089, 44.7059, 45.7432, 45.0102,
        44.6894, 45.0102, 45.1454, 45.1454, 44.7530, 45.3012, 45.6089, 45.4268])
new_beam_scores: tensor([[46.7432, 46.7432, 45.1274, 46.7432, 46.6089, 45.7059, 46.7432, 46.0102,
         45.6894, 46.0102, 46.1454, 46.1454, 45.7530, 46.3012, 46.6089, 46.4268]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[46.7432, 46.7432, 45.1274, 46.7432, 46.6089, 45.7059, 46.7432, 46.0102,
         45.6894, 46.0102, 46.1454, 46.1454, 45.7530, 46.3012, 46.6089, 46.4268]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  48
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [2],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [2],
        [2],
        [3],
        [2],
        [3],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([46.7432, 46.7432, 45.1274, 46.7432, 46.6089, 45.7059, 46.7432, 46.0102,
        45.6894, 46.0102, 46.1454, 46.1454, 45.7530, 46.3012, 46.6089, 46.4268])
new_beam_scores: tensor([[47.7432, 47.7432, 46.1274, 47.7432, 47.6089, 46.7059, 47.7432, 47.0102,
         46.6894, 47.0102, 47.1454, 47.1454, 46.7530, 47.3012, 47.6089, 47.4268]])
new_beam seq: tensor([[3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 2, 3, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[47.7432, 47.7432, 46.1274, 47.7432, 47.6089, 46.7059, 47.7432, 47.0102,
         46.6894, 47.0102, 47.1454, 47.1454, 46.7530, 47.3012, 47.6089, 47.4268]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 2, 3, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  49
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([47.7432, 47.7432, 46.1274, 47.7432, 47.6089, 46.7059, 47.7432, 47.0102,
        46.6894, 47.0102, 47.1454, 47.1454, 46.7530, 47.3012, 47.6089, 47.4268])
new_beam_scores: tensor([[48.7432, 48.7432, 47.1274, 48.7432, 48.6089, 47.7059, 48.7432, 48.0102,
         47.6894, 48.0102, 48.1454, 48.1454, 47.7530, 48.3012, 48.6089, 48.4268]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[48.7432, 48.7432, 47.1274, 48.7432, 48.6089, 47.7059, 48.7432, 48.0102,
         47.6894, 48.0102, 48.1454, 48.1454, 47.7530, 48.3012, 48.6089, 48.4268]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        2, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  50
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [2],
        [2],
        [2],
        [2],
        [1],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([48.7432, 48.7432, 47.1274, 48.7432, 48.6089, 47.7059, 48.7432, 48.0102,
        47.6894, 48.0102, 48.1454, 48.1454, 47.7530, 48.3012, 48.6089, 48.4268])
new_beam_scores: tensor([[49.7432, 49.7432, 48.1274, 49.7432, 49.6089, 48.7059, 49.7432, 49.0102,
         48.6894, 49.0102, 49.1454, 49.1454, 48.7530, 49.3012, 49.6089, 49.4268]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[49.7432, 49.7432, 48.1274, 49.7432, 49.6089, 48.7059, 49.7432, 49.0102,
         48.6894, 49.0102, 49.1454, 49.1454, 48.7530, 49.3012, 49.6089, 49.4268]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 1, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 2, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 2, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 2, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 0, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        2, 0, 2, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  51
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([49.7432, 49.7432, 48.1274, 49.7432, 49.6089, 48.7059, 49.7432, 49.0102,
        48.6894, 49.0102, 49.1454, 49.1454, 48.7530, 49.3012, 49.6089, 49.4268])
new_beam_scores: tensor([[50.7432, 50.7432, 49.1274, 50.7432, 50.6089, 49.7059, 50.7432, 50.0102,
         49.6894, 50.0102, 50.1454, 50.1454, 49.7530, 50.3012, 50.6089, 50.4268]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[50.7432, 50.7432, 49.1274, 50.7432, 50.6089, 49.7059, 50.7432, 50.0102,
         49.6894, 50.0102, 50.1454, 50.1454, 49.7530, 50.3012, 50.6089, 50.4268]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 1, 2, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 2, 2, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 0, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        2, 0, 2, 2, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  52
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([50.7432, 50.7432, 49.1274, 50.7432, 50.6089, 49.7059, 50.7432, 50.0102,
        49.6894, 50.0102, 50.1454, 50.1454, 49.7530, 50.3012, 50.6089, 50.4268])
new_beam_scores: tensor([[51.7432, 51.7432, 50.1274, 51.7432, 51.6089, 50.7059, 51.7432, 51.0102,
         50.6894, 51.0102, 51.1454, 51.1454, 50.7530, 51.3012, 51.6089, 51.4268]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[51.7432, 51.7432, 50.1274, 51.7432, 51.6089, 50.7059, 51.7432, 51.0102,
         50.6894, 51.0102, 51.1454, 51.1454, 50.7530, 51.3012, 51.6089, 51.4268]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 1, 2, 2, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 2, 2, 2, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 2, 2, 2, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 2, 2, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 2, 2, 2, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        2, 0, 2, 2, 2, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  53
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([51.7432, 51.7432, 50.1274, 51.7432, 51.6089, 50.7059, 51.7432, 51.0102,
        50.6894, 51.0102, 51.1454, 51.1454, 50.7530, 51.3012, 51.6089, 51.4268])
new_beam_scores: tensor([[52.7432, 52.7432, 51.1274, 52.7432, 52.6089, 51.7059, 52.7432, 52.0102,
         51.6894, 52.0102, 52.1454, 52.1454, 51.7530, 52.3012, 52.6089, 52.4268]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[52.7432, 52.7432, 51.1274, 52.7432, 52.6089, 51.7059, 52.7432, 52.0102,
         51.6894, 52.0102, 52.1454, 52.1454, 51.7530, 52.3012, 52.6089, 52.4268]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 1, 2, 2, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 2, 2, 2, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 2, 2, 2, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 2, 2, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 2, 2, 2, 0, 0, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 0, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        2, 0, 2, 2, 2, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 2.6820, -1.5515, -1.8509, -1.7995],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  54
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([52.7432, 52.7432, 51.1274, 52.7432, 52.6089, 51.7059, 52.7432, 52.0102,
        51.6894, 52.0102, 52.1454, 52.1454, 51.7530, 52.3012, 52.6089, 52.4268])
new_beam_scores: tensor([[53.7432, 53.7432, 52.1274, 53.7432, 53.6089, 52.7059, 53.7432, 53.0102,
         52.6894, 53.0102, 53.1454, 53.1454, 52.7530, 53.3012, 53.6089, 53.4268]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[53.7432, 53.7432, 52.1274, 53.7432, 53.6089, 52.7059, 53.7432, 53.0102,
         52.6894, 53.0102, 53.1454, 53.1454, 52.7530, 53.3012, 53.6089, 53.4268]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 0, 2, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 2, 0, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 1, 2, 2, 0, 2, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 0, 2, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 2, 0, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 2, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 0, 2, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 2, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 2, 0,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 0, 2, 0, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 2, 2, 2, 0, 2, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 2, 2, 2, 0, 2, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 2, 2, 0, 2, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 2, 2, 2, 0, 2, 0, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 2, 0,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        2, 0, 2, 2, 2, 0, 2, 0], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 2.6820, -1.5515, -1.8509, -1.7995],
        [-1.3206, -1.4193,  3.1098, -1.2646],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([896, 4])
Iteration :  55
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 896])
size of new_beam_h_S: torch.Size([1, 896, 4])
size of new_beam_logits: torch.Size([1, 896, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([53.7432, 53.7432, 52.1274, 53.7432, 53.6089, 52.7059, 53.7432, 53.0102,
        52.6894, 53.0102, 53.1454, 53.1454, 52.7530, 53.3012, 53.6089, 53.4268])
new_beam_scores: tensor([[54.7432, 54.7432, 53.1274, 54.7432, 54.6089, 53.7059, 54.7432, 54.0102,
         53.6894, 54.0102, 54.1454, 54.1454, 53.7530, 54.3012, 54.6089, 54.4268]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 896, 4])
new_beam_h_S size: torch.Size([1, 896, 4])
sorted_scores: tensor([[54.7432, 54.7432, 53.1274, 54.7432, 54.6089, 53.7059, 54.7432, 54.0102,
         53.6894, 54.0102, 54.1454, 54.1454, 53.7530, 54.3012, 54.6089, 54.4268]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 896])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 0, 2, 2, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 2, 2, 1, 1, 1, 1, 0, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 1, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 1, 2, 2, 0, 2, 2,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 0, 2, 2, 1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 2, 2, 1, 1, 1, 1, 3, 1, 2, 2,
        2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 2, 2,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 0, 2, 2, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1,
        3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 2, 2, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 2, 2,
        1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 1, 2, 2, 0, 2, 2, 1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 2, 2, 2, 0, 2, 2, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1,
        3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 2, 2, 2, 0, 2, 2,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        3, 0, 2, 2, 2, 0, 2, 2, 1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3,
        2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2,
        3, 1, 1, 3, 2, 1, 1, 3, 2, 0, 2, 2, 2, 0, 2, 2, 1, 1, 1, 1, 3, 1, 2, 1,
        2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3, 1, 1, 3, 1, 0, 0, 0, 1,
        3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3, 3, 0, 1, 2, 2, 0, 2, 2,
        1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
        1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
        2, 0, 2, 2, 2, 0, 2, 2], dtype=torch.int32)
logits: tensor([[-0.8745,  1.3892,  0.6189, -0.5848],
        [-0.7810,  2.2051, -0.6440, -0.5497],
        [ 0.6222,  1.6467,  0.4126, -0.6827],
        ...,
        [ 2.6820, -1.5515, -1.8509, -1.7995],
        [-1.3206, -1.4193,  3.1098, -1.2646],
        [-1.1966, -0.0208,  2.0293, -1.6105]])
h_S size: torch.Size([896, 4])
tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size expanded indices: torch.Size([1, 16, 56])
tensor([[[1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 1, 2, 2, 0, 2, 2],
         [1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 1, 2, 2, 0, 2, 2],
         [1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          3, 1, 1, 3, 1, 0, 1, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1,
          1, 3, 2, 0, 1, 2, 2, 0, 2, 2],
         [1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 1, 2, 2, 0, 2, 2],
         [1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 1, 2, 2, 0, 2, 2],
         [1, 1, 1, 1, 3, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 1, 2, 2, 0, 2, 2],
         [1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 1, 2, 2, 0, 2, 2],
         [1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 1, 2, 2, 0, 2, 2],
         [1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1,
          3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 1, 2, 2, 0, 2, 2],
         [1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 1, 2, 2, 0, 2, 2],
         [1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1,
          1, 3, 2, 0, 2, 2, 2, 0, 2, 2],
         [1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1,
          1, 3, 2, 0, 2, 2, 2, 0, 2, 2],
         [1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          3, 1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 2, 2, 2, 0, 2, 2],
         [1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1,
          1, 3, 2, 0, 2, 2, 2, 0, 2, 2],
         [1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          3, 1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1,
          1, 3, 3, 0, 1, 2, 2, 0, 2, 2],
         [1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1,
          3, 1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1,
          1, 3, 2, 0, 2, 2, 2, 0, 2, 2]]], dtype=torch.int32)
final_scores: tensor([54.7432, 54.7432, 53.1274, 54.7432, 54.6089, 53.7059, 54.7432, 54.0102,
        53.6894, 54.0102, 54.1454, 54.1454, 53.7530, 54.3012, 54.6089, 54.4268])
final_seq: tensor([[1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
         1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 1, 2, 2, 0, 2, 2],
        [1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
         1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 1, 2, 2, 0, 2, 2],
        [1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
         1, 1, 3, 1, 0, 1, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3,
         2, 0, 1, 2, 2, 0, 2, 2],
        [1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
         1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 1, 2, 2, 0, 2, 2],
        [1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
         1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 1, 2, 2, 0, 2, 2],
        [1, 1, 1, 1, 3, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
         1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 1, 2, 2, 0, 2, 2],
        [1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
         1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 1, 2, 2, 0, 2, 2],
        [1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
         1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 1, 2, 2, 0, 2, 2],
        [1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 1, 3,
         1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 1, 2, 2, 0, 2, 2],
        [1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
         1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 1, 2, 2, 0, 2, 2],
        [1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
         1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
         2, 0, 2, 2, 2, 0, 2, 2],
        [1, 1, 1, 1, 3, 1, 2, 1, 2, 0, 2, 3, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
         1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
         2, 0, 2, 2, 2, 0, 2, 2],
        [1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
         1, 1, 1, 1, 0, 0, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 2, 2, 2, 0, 2, 2],
        [1, 1, 1, 1, 0, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
         1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
         2, 0, 2, 2, 2, 0, 2, 2],
        [1, 1, 1, 1, 3, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
         1, 1, 3, 1, 0, 0, 0, 1, 3, 2, 0, 2, 1, 2, 2, 1, 3, 1, 1, 3, 2, 1, 1, 3,
         3, 0, 1, 2, 2, 0, 2, 2],
        [1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 3, 2, 0, 0, 2, 2, 2, 1, 3,
         1, 1, 1, 1, 0, 1, 0, 1, 3, 2, 0, 1, 1, 2, 2, 2, 3, 1, 1, 3, 2, 1, 1, 3,
         2, 0, 2, 2, 2, 0, 2, 2]], dtype=torch.int32)
final_logits: tensor([[[-0.8745,  1.3892,  0.6189, -0.5848],
         [-0.7810,  2.2051, -0.6440, -0.5497],
         [ 0.6222,  1.6467,  0.4126, -0.6827],
         ...,
         [ 2.6487, -1.4193, -1.6417, -1.6558],
         [-1.1693, -1.2964,  3.1504, -1.0457],
         [-1.2511,  0.6434,  1.8114, -1.4389]],

        [[-0.8745,  1.3892,  0.6189, -0.5848],
         [-0.7810,  2.2051, -0.6440, -0.5497],
         [ 0.6222,  1.6467,  0.4126, -0.6827],
         ...,
         [ 2.6487, -1.4193, -1.6417, -1.6558],
         [-1.1693, -1.2964,  3.1504, -1.0457],
         [-1.2511,  0.6434,  1.8114, -1.4389]],

        [[-0.8745,  1.3892,  0.6189, -0.5848],
         [-0.7810,  2.2051, -0.6440, -0.5497],
         [ 0.6222,  1.6467,  0.4126, -0.6827],
         ...,
         [ 2.6787, -1.4721, -1.7544, -1.7219],
         [-1.2697, -1.3664,  3.1089, -1.1539],
         [-1.1883,  0.2723,  1.8762, -1.5291]],

        ...,

        [[-0.8745,  1.3892,  0.6189, -0.5848],
         [-0.7810,  2.2051, -0.6440, -0.5497],
         [ 0.6222,  1.6467,  0.4126, -0.6827],
         ...,
         [ 2.6849, -1.5536, -1.8529, -1.8036],
         [-1.3205, -1.4211,  3.1141, -1.2763],
         [-1.2004, -0.0318,  2.0479, -1.6272]],

        [[-0.8745,  1.3892,  0.6189, -0.5848],
         [-0.7810,  2.2051, -0.6440, -0.5497],
         [ 0.6222,  1.6467,  0.4126, -0.6827],
         ...,
         [ 2.6455, -1.4192, -1.6423, -1.6573],
         [-1.1725, -1.2982,  3.1459, -1.0801],
         [-1.2603,  0.6427,  1.7998, -1.4456]],

        [[-0.8745,  1.3892,  0.6189, -0.5848],
         [-0.7810,  2.2051, -0.6440, -0.5497],
         [ 0.6222,  1.6467,  0.4126, -0.6827],
         ...,
         [ 2.6820, -1.5515, -1.8509, -1.7995],
         [-1.3206, -1.4193,  3.1098, -1.2646],
         [-1.1966, -0.0208,  2.0293, -1.6105]]])
Coords: 159
Sequence: GGAAUUGCGGGAAAGGGGUCAACAGCCGUUCAGUACCAAGUCUCAGGGGAAACUUUGAGAUGGCCUUGCAAAGGGUAUGGUAAUAAGCUGACGGACAUGGUCCUAACACGCAGCCAAGUCCUAAGUCAACAGAUCUUCUGUUGAUAUGGAUGCAGUUCA
Len sequence: 159
Detected base pairs: [[ 107 2386]
 [ 127 2366]
 [ 150 2343]
 [ 170 2323]
 [ 193 2301]
 [ 216 2281]
 [ 239 2259]
 [ 261 2237]
 [ 305 2217]
 [ 328 2197]
 [ 351 2177]
 [ 374 2157]
 [ 397 2134]
 [ 417 2111]
 [ 459 2069]
 [ 523 2027]
 [ 546 2004]
 [ 566 1981]
 [ 586 1961]
 [ 629 1939]
 [ 649 1916]
 [ 669 1896]
 [ 691 1876]
 [ 734 1725]
 [ 756 1702]
 [ 776 1679]
 [ 796 1336]
 [ 818 1313]
 [ 840 1293]
 [ 863 1271]
 [ 883 1248]
 [ 903 1226]
 [ 923 1203]
 [ 943 1183]
 [ 965 1163]
 [ 988 1143]
 [1011 1123]
 [1079 2598]
 [1359 1571]
 [1379 1548]
 [1419 1853]
 [2408 3322]
 [2431 3299]
 [2451 3277]
 [2493 3234]
 [2515 3214]
 [2538 3192]
 [2558 3169]
 [2578 3146]
 [2662 3084]
 [2685 3062]
 [2705 3039]
 [2725 3019]
 [2747 2999]
 [2769 2976]
 [2789 2956]
 [2811 2936]]
Secondary structure: '.....((((((((.((((((.(..((((.((((.((((((((((((((..[.)))))))))))((.[.....))....))).....])))))))).).))))))))))))))(((.(((((]..((((((((.....))))))))..))))).)))...'
Sequence length: 159
Number of residues: 159
Chain IDs: ['R']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
.....((((((((.((((((.(..((((.((((.((((((((((((((....)))))))))))((.......))....)))......)))))))).).))))))))))))))(((.(((((...((((((((.....))))))))..))))).)))...
Batch size:  (158, 158)
Number of nodes:  158
edge_index: tensor([[[  0,   0,   0,  ..., 157, 157, 157],
         [  1,   2,   3,  ..., 154, 155, 156]],

        [[  0,   0,   0,  ..., 157, 157, 157],
         [  1,   2,   3,  ..., 154, 155, 156]],

        [[  0,   0,   0,  ..., 157, 157, 157],
         [  1,   2,   3,  ..., 154, 155, 156]],

        ...,

        [[  0,   0,   0,  ..., 157, 157, 157],
         [  1,   2,   3,  ..., 154, 155, 156]],

        [[  0,   0,   0,  ..., 157, 157, 157],
         [  1,   2,   3,  ..., 154, 155, 156]],

        [[  0,   0,   0,  ..., 157, 157, 157],
         [  1,   2,   3,  ..., 154, 155, 156]]])
offset size: torch.Size([16, 1, 1])
offset: tensor([[[   0]],

        [[ 158]],

        [[ 316]],

        [[ 474]],

        [[ 632]],

        [[ 790]],

        [[ 948]],

        [[1106]],

        [[1264]],

        [[1422]],

        [[1580]],

        [[1738]],

        [[1896]],

        [[2054]],

        [[2212]],

        [[2370]]])
Iteration :  0
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957,
         0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957]])
scores: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
new_beam_scores: tensor([[0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957,
         0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957,
         0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 0, 0,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  1
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957,
        0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957, 0.9957])
new_beam_scores: tensor([[1.9957, 1.9957, 1.9957, 1.9957, 1.9957, 1.9957, 1.9957, 1.9957, 1.9957,
         1.9957, 1.9957, 1.9957, 1.9957, 1.9957, 1.9957, 1.9957]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[1.9957, 1.9957, 1.9957, 1.9957, 1.9957, 1.9957, 1.9957, 1.9957, 1.9957,
         1.9957, 1.9957, 1.9957, 1.9957, 1.9957, 1.9957, 1.9957]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 0,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  2
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([1.9957, 1.9957, 1.9957, 1.9957, 1.9957, 1.9957, 1.9957, 1.9957, 1.9957,
        1.9957, 1.9957, 1.9957, 1.9957, 1.9957, 1.9957, 1.9957])
new_beam_scores: tensor([[2.9957, 2.9957, 2.9957, 2.9957, 2.9957, 2.9957, 2.9957, 2.9957, 2.9957,
         2.9957, 2.9957, 2.9957, 2.9957, 2.9957, 2.9957, 2.9957]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[2.9957, 2.9957, 2.9957, 2.9957, 2.9957, 2.9957, 2.9957, 2.9957, 2.9957,
         2.9957, 2.9957, 2.9957, 2.9957, 2.9957, 2.9957, 2.9957]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  3
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([2.9957, 2.9957, 2.9957, 2.9957, 2.9957, 2.9957, 2.9957, 2.9957, 2.9957,
        2.9957, 2.9957, 2.9957, 2.9957, 2.9957, 2.9957, 2.9957])
new_beam_scores: tensor([[3.9957, 3.9957, 3.9957, 3.9957, 3.9957, 3.9957, 3.9957, 3.9957, 3.9957,
         3.9957, 3.9957, 3.9957, 3.9957, 3.9957, 3.9957, 3.9957]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[3.9957, 3.9957, 3.9957, 3.9957, 3.9957, 3.9957, 3.9957, 3.9957, 3.9957,
         3.9957, 3.9957, 3.9957, 3.9957, 3.9957, 3.9957, 3.9957]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  4
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([3.9957, 3.9957, 3.9957, 3.9957, 3.9957, 3.9957, 3.9957, 3.9957, 3.9957,
        3.9957, 3.9957, 3.9957, 3.9957, 3.9957, 3.9957, 3.9957])
new_beam_scores: tensor([[4.9957, 4.9957, 4.9957, 4.9957, 4.9957, 4.9957, 4.9957, 4.9957, 4.9957,
         4.9957, 4.9957, 4.9957, 4.9957, 4.9957, 4.9957, 4.9957]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[4.9957, 4.9957, 4.9957, 4.9957, 4.9957, 4.9957, 4.9957, 4.9957, 4.9957,
         4.9957, 4.9957, 4.9957, 4.9957, 4.9957, 4.9957, 4.9957]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  5
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([4.9957, 4.9957, 4.9957, 4.9957, 4.9957, 4.9957, 4.9957, 4.9957, 4.9957,
        4.9957, 4.9957, 4.9957, 4.9957, 4.9957, 4.9957, 4.9957])
new_beam_scores: tensor([[5.9957, 5.9957, 5.9957, 5.9957, 5.9957, 5.9957, 5.9957, 5.9957, 5.9957,
         5.9957, 5.9957, 5.9957, 5.9957, 5.9957, 5.9957, 5.9957]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[5.9957, 5.9957, 5.9957, 5.9957, 5.9957, 5.9957, 5.9957, 5.9957, 5.9957,
         5.9957, 5.9957, 5.9957, 5.9957, 5.9957, 5.9957, 5.9957]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  6
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([5.9957, 5.9957, 5.9957, 5.9957, 5.9957, 5.9957, 5.9957, 5.9957, 5.9957,
        5.9957, 5.9957, 5.9957, 5.9957, 5.9957, 5.9957, 5.9957])
new_beam_scores: tensor([[6.9957, 6.9957, 6.9957, 6.9957, 6.9957, 6.9957, 6.9957, 6.9957, 6.9957,
         6.9957, 6.9957, 6.9957, 6.9957, 6.9957, 6.9957, 6.9957]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[6.9957, 6.9957, 6.9957, 6.9957, 6.9957, 6.9957, 6.9957, 6.9957, 6.9957,
         6.9957, 6.9957, 6.9957, 6.9957, 6.9957, 6.9957, 6.9957]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  7
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([6.9957, 6.9957, 6.9957, 6.9957, 6.9957, 6.9957, 6.9957, 6.9957, 6.9957,
        6.9957, 6.9957, 6.9957, 6.9957, 6.9957, 6.9957, 6.9957])
new_beam_scores: tensor([[7.9957, 7.9957, 7.9957, 7.9957, 7.9957, 7.9957, 7.9957, 7.9957, 7.9957,
         7.9957, 7.9957, 7.9957, 7.9957, 7.9957, 7.9957, 7.9957]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[7.9957, 7.9957, 7.9957, 7.9957, 7.9957, 7.9957, 7.9957, 7.9957, 7.9957,
         7.9957, 7.9957, 7.9957, 7.9957, 7.9957, 7.9957, 7.9957]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  8
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([7.9957, 7.9957, 7.9957, 7.9957, 7.9957, 7.9957, 7.9957, 7.9957, 7.9957,
        7.9957, 7.9957, 7.9957, 7.9957, 7.9957, 7.9957, 7.9957])
new_beam_scores: tensor([[8.9957, 8.9957, 8.9957, 8.9957, 8.9957, 8.9957, 8.9957, 8.9957, 8.9957,
         8.9957, 8.9957, 8.9957, 8.9957, 8.9957, 8.9957, 8.9957]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[8.9957, 8.9957, 8.9957, 8.9957, 8.9957, 8.9957, 8.9957, 8.9957, 8.9957,
         8.9957, 8.9957, 8.9957, 8.9957, 8.9957, 8.9957, 8.9957]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  9
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([8.9957, 8.9957, 8.9957, 8.9957, 8.9957, 8.9957, 8.9957, 8.9957, 8.9957,
        8.9957, 8.9957, 8.9957, 8.9957, 8.9957, 8.9957, 8.9957])
new_beam_scores: tensor([[9.9957, 9.9957, 9.9957, 9.9957, 9.9957, 9.9957, 9.9957, 9.9957, 9.9957,
         9.9957, 9.9957, 9.9957, 9.9957, 9.9957, 9.9957, 9.9957]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[9.9957, 9.9957, 9.9957, 9.9957, 9.9957, 9.9957, 9.9957, 9.9957, 9.9957,
         9.9957, 9.9957, 9.9957, 9.9957, 9.9957, 9.9957, 9.9957]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  10
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999,
         0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999]])
scores: tensor([9.9957, 9.9957, 9.9957, 9.9957, 9.9957, 9.9957, 9.9957, 9.9957, 9.9957,
        9.9957, 9.9957, 9.9957, 9.9957, 9.9957, 9.9957, 9.9957])
new_beam_scores: tensor([[10.9956, 10.9956, 10.9956, 10.9956, 10.9956, 10.9956, 10.9956, 10.9956,
         10.9956, 10.9956, 10.9956, 10.9956, 10.9956, 10.9956, 10.9956, 10.9956]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[10.9956, 10.9956, 10.9956, 10.9956, 10.9956, 10.9956, 10.9956, 10.9956,
         10.9956, 10.9956, 10.9956, 10.9956, 10.9956, 10.9956, 10.9956, 10.9956]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  11
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([10.9956, 10.9956, 10.9956, 10.9956, 10.9956, 10.9956, 10.9956, 10.9956,
        10.9956, 10.9956, 10.9956, 10.9956, 10.9956, 10.9956, 10.9956, 10.9956])
new_beam_scores: tensor([[11.9956, 11.9956, 11.9956, 11.9956, 11.9956, 11.9956, 11.9956, 11.9956,
         11.9956, 11.9956, 11.9956, 11.9956, 11.9956, 11.9956, 11.9956, 11.9956]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[11.9956, 11.9956, 11.9956, 11.9956, 11.9956, 11.9956, 11.9956, 11.9956,
         11.9956, 11.9956, 11.9956, 11.9956, 11.9956, 11.9956, 11.9956, 11.9956]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  12
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([11.9956, 11.9956, 11.9956, 11.9956, 11.9956, 11.9956, 11.9956, 11.9956,
        11.9956, 11.9956, 11.9956, 11.9956, 11.9956, 11.9956, 11.9956, 11.9956])
new_beam_scores: tensor([[12.9956, 12.9956, 12.9956, 12.9956, 12.9956, 12.9956, 12.9956, 12.9956,
         12.9956, 12.9956, 12.9956, 12.9956, 12.9956, 12.9956, 12.9956, 12.9956]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[12.9956, 12.9956, 12.9956, 12.9956, 12.9956, 12.9956, 12.9956, 12.9956,
         12.9956, 12.9956, 12.9956, 12.9956, 12.9956, 12.9956, 12.9956, 12.9956]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  13
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([12.9956, 12.9956, 12.9956, 12.9956, 12.9956, 12.9956, 12.9956, 12.9956,
        12.9956, 12.9956, 12.9956, 12.9956, 12.9956, 12.9956, 12.9956, 12.9956])
new_beam_scores: tensor([[13.9956, 13.9956, 13.9956, 13.9956, 13.9956, 13.9956, 13.9956, 13.9956,
         13.9956, 13.9956, 13.9956, 13.9956, 13.9956, 13.9956, 13.9956, 13.9956]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[13.9956, 13.9956, 13.9956, 13.9956, 13.9956, 13.9956, 13.9956, 13.9956,
         13.9956, 13.9956, 13.9956, 13.9956, 13.9956, 13.9956, 13.9956, 13.9956]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  14
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([13.9956, 13.9956, 13.9956, 13.9956, 13.9956, 13.9956, 13.9956, 13.9956,
        13.9956, 13.9956, 13.9956, 13.9956, 13.9956, 13.9956, 13.9956, 13.9956])
new_beam_scores: tensor([[14.9956, 14.9956, 14.9956, 14.9956, 14.9956, 14.9956, 14.9956, 14.9956,
         14.9956, 14.9956, 14.9956, 14.9956, 14.9956, 14.9956, 14.9956, 14.9956]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[14.9956, 14.9956, 14.9956, 14.9956, 14.9956, 14.9956, 14.9956, 14.9956,
         14.9956, 14.9956, 14.9956, 14.9956, 14.9956, 14.9956, 14.9956, 14.9956]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  15
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([14.9956, 14.9956, 14.9956, 14.9956, 14.9956, 14.9956, 14.9956, 14.9956,
        14.9956, 14.9956, 14.9956, 14.9956, 14.9956, 14.9956, 14.9956, 14.9956])
new_beam_scores: tensor([[15.9956, 15.9956, 15.9956, 15.9956, 15.9956, 15.9956, 15.9956, 15.9956,
         15.9956, 15.9956, 15.9956, 15.9956, 15.9956, 15.9956, 15.9956, 15.9956]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[15.9956, 15.9956, 15.9956, 15.9956, 15.9956, 15.9956, 15.9956, 15.9956,
         15.9956, 15.9956, 15.9956, 15.9956, 15.9956, 15.9956, 15.9956, 15.9956]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  16
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([15.9956, 15.9956, 15.9956, 15.9956, 15.9956, 15.9956, 15.9956, 15.9956,
        15.9956, 15.9956, 15.9956, 15.9956, 15.9956, 15.9956, 15.9956, 15.9956])
new_beam_scores: tensor([[16.9956, 16.9956, 16.9956, 16.9956, 16.9956, 16.9956, 16.9956, 16.9956,
         16.9956, 16.9956, 16.9956, 16.9956, 16.9956, 16.9956, 16.9956, 16.9956]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[16.9956, 16.9956, 16.9956, 16.9956, 16.9956, 16.9956, 16.9956, 16.9956,
         16.9956, 16.9956, 16.9956, 16.9956, 16.9956, 16.9956, 16.9956, 16.9956]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  17
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([16.9956, 16.9956, 16.9956, 16.9956, 16.9956, 16.9956, 16.9956, 16.9956,
        16.9956, 16.9956, 16.9956, 16.9956, 16.9956, 16.9956, 16.9956, 16.9956])
new_beam_scores: tensor([[17.9956, 17.9956, 17.9956, 17.9956, 17.9956, 17.9956, 17.9956, 17.9956,
         17.9956, 17.9956, 17.9956, 17.9956, 17.9956, 17.9956, 17.9956, 17.9956]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[17.9956, 17.9956, 17.9956, 17.9956, 17.9956, 17.9956, 17.9956, 17.9956,
         17.9956, 17.9956, 17.9956, 17.9956, 17.9956, 17.9956, 17.9956, 17.9956]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  18
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([17.9956, 17.9956, 17.9956, 17.9956, 17.9956, 17.9956, 17.9956, 17.9956,
        17.9956, 17.9956, 17.9956, 17.9956, 17.9956, 17.9956, 17.9956, 17.9956])
new_beam_scores: tensor([[18.9956, 18.9956, 18.9956, 18.9956, 18.9956, 18.9956, 18.9956, 18.9956,
         18.9956, 18.9956, 18.9956, 18.9956, 18.9956, 18.9956, 18.9956, 18.9956]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[18.9956, 18.9956, 18.9956, 18.9956, 18.9956, 18.9956, 18.9956, 18.9956,
         18.9956, 18.9956, 18.9956, 18.9956, 18.9956, 18.9956, 18.9956, 18.9956]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  19
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [2],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [2],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9605, 0.9605, 0.0393, 0.9605, 0.9605, 0.9605, 0.9605, 0.9605, 0.9605,
         0.9605, 0.9605, 0.9605, 0.9605, 0.0393, 0.9605, 0.9605]])
scores: tensor([18.9956, 18.9956, 18.9956, 18.9956, 18.9956, 18.9956, 18.9956, 18.9956,
        18.9956, 18.9956, 18.9956, 18.9956, 18.9956, 18.9956, 18.9956, 18.9956])
new_beam_scores: tensor([[19.9562, 19.9562, 19.0350, 19.9562, 19.9562, 19.9562, 19.9562, 19.9562,
         19.9562, 19.9562, 19.9562, 19.9562, 19.9562, 19.0350, 19.9562, 19.9562]])
new_beam seq: tensor([[1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[19.9562, 19.9562, 19.0350, 19.9562, 19.9562, 19.9562, 19.9562, 19.9562,
         19.9562, 19.9562, 19.9562, 19.9562, 19.9562, 19.0350, 19.9562, 19.9562]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  20
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([19.9562, 19.9562, 19.0350, 19.9562, 19.9562, 19.9562, 19.9562, 19.9562,
        19.9562, 19.9562, 19.9562, 19.9562, 19.9562, 19.0350, 19.9562, 19.9562])
new_beam_scores: tensor([[20.9562, 20.9562, 20.0350, 20.9562, 20.9562, 20.9562, 20.9562, 20.9562,
         20.9562, 20.9562, 20.9562, 20.9562, 20.9562, 20.0350, 20.9562, 20.9562]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[20.9562, 20.9562, 20.0350, 20.9562, 20.9562, 20.9562, 20.9562, 20.9562,
         20.9562, 20.9562, 20.9562, 20.9562, 20.9562, 20.0350, 20.9562, 20.9562]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  21
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([20.9562, 20.9562, 20.0350, 20.9562, 20.9562, 20.9562, 20.9562, 20.9562,
        20.9562, 20.9562, 20.9562, 20.9562, 20.9562, 20.0350, 20.9562, 20.9562])
new_beam_scores: tensor([[21.9562, 21.9562, 21.0350, 21.9562, 21.9562, 21.9562, 21.9562, 21.9562,
         21.9562, 21.9562, 21.9562, 21.9562, 21.9562, 21.0350, 21.9562, 21.9562]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[21.9562, 21.9562, 21.0350, 21.9562, 21.9562, 21.9562, 21.9562, 21.9562,
         21.9562, 21.9562, 21.9562, 21.9562, 21.9562, 21.0350, 21.9562, 21.9562]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  22
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9687, 0.9687, 0.9847, 0.9687, 0.9687, 0.9687, 0.9687, 0.9687, 0.9687,
         0.9687, 0.9687, 0.9687, 0.9687, 0.9847, 0.9687, 0.9687]])
scores: tensor([21.9562, 21.9562, 21.0350, 21.9562, 21.9562, 21.9562, 21.9562, 21.9562,
        21.9562, 21.9562, 21.9562, 21.9562, 21.9562, 21.0350, 21.9562, 21.9562])
new_beam_scores: tensor([[22.9249, 22.9249, 22.0196, 22.9249, 22.9249, 22.9249, 22.9249, 22.9249,
         22.9249, 22.9249, 22.9249, 22.9249, 22.9249, 22.0196, 22.9249, 22.9249]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[22.9249, 22.9249, 22.0196, 22.9249, 22.9249, 22.9249, 22.9249, 22.9249,
         22.9249, 22.9249, 22.9249, 22.9249, 22.9249, 22.0196, 22.9249, 22.9249]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  23
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([22.9249, 22.9249, 22.0196, 22.9249, 22.9249, 22.9249, 22.9249, 22.9249,
        22.9249, 22.9249, 22.9249, 22.9249, 22.9249, 22.0196, 22.9249, 22.9249])
new_beam_scores: tensor([[23.9249, 23.9249, 23.0196, 23.9249, 23.9249, 23.9249, 23.9249, 23.9249,
         23.9249, 23.9249, 23.9249, 23.9249, 23.9249, 23.0196, 23.9249, 23.9249]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[23.9249, 23.9249, 23.0196, 23.9249, 23.9249, 23.9249, 23.9249, 23.9249,
         23.9249, 23.9249, 23.9249, 23.9249, 23.9249, 23.0196, 23.9249, 23.9249]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  24
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([23.9249, 23.9249, 23.0196, 23.9249, 23.9249, 23.9249, 23.9249, 23.9249,
        23.9249, 23.9249, 23.9249, 23.9249, 23.9249, 23.0196, 23.9249, 23.9249])
new_beam_scores: tensor([[24.9249, 24.9249, 24.0196, 24.9249, 24.9249, 24.9249, 24.9249, 24.9249,
         24.9249, 24.9249, 24.9249, 24.9249, 24.9249, 24.0196, 24.9249, 24.9249]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[24.9249, 24.9249, 24.0196, 24.9249, 24.9249, 24.9249, 24.9249, 24.9249,
         24.9249, 24.9249, 24.9249, 24.9249, 24.9249, 24.0196, 24.9249, 24.9249]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  25
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([24.9249, 24.9249, 24.0196, 24.9249, 24.9249, 24.9249, 24.9249, 24.9249,
        24.9249, 24.9249, 24.9249, 24.9249, 24.9249, 24.0196, 24.9249, 24.9249])
new_beam_scores: tensor([[25.9249, 25.9249, 25.0196, 25.9249, 25.9249, 25.9249, 25.9249, 25.9249,
         25.9249, 25.9249, 25.9249, 25.9249, 25.9249, 25.0196, 25.9249, 25.9249]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[25.9249, 25.9249, 25.0196, 25.9249, 25.9249, 25.9249, 25.9249, 25.9249,
         25.9249, 25.9249, 25.9249, 25.9249, 25.9249, 25.0196, 25.9249, 25.9249]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  26
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([25.9249, 25.9249, 25.0196, 25.9249, 25.9249, 25.9249, 25.9249, 25.9249,
        25.9249, 25.9249, 25.9249, 25.9249, 25.9249, 25.0196, 25.9249, 25.9249])
new_beam_scores: tensor([[26.9249, 26.9249, 26.0196, 26.9249, 26.9249, 26.9249, 26.9249, 26.9249,
         26.9249, 26.9249, 26.9249, 26.9249, 26.9249, 26.0196, 26.9249, 26.9249]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[26.9249, 26.9249, 26.0196, 26.9249, 26.9249, 26.9249, 26.9249, 26.9249,
         26.9249, 26.9249, 26.9249, 26.9249, 26.9249, 26.0196, 26.9249, 26.9249]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  27
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9187, 0.9187, 0.8572, 0.9187, 0.9187, 0.9187, 0.9187, 0.9187, 0.9187,
         0.9187, 0.9187, 0.9187, 0.9187, 0.8572, 0.9187, 0.9187]])
scores: tensor([26.9249, 26.9249, 26.0196, 26.9249, 26.9249, 26.9249, 26.9249, 26.9249,
        26.9249, 26.9249, 26.9249, 26.9249, 26.9249, 26.0196, 26.9249, 26.9249])
new_beam_scores: tensor([[27.8436, 27.8436, 26.8768, 27.8436, 27.8436, 27.8436, 27.8436, 27.8436,
         27.8436, 27.8436, 27.8436, 27.8436, 27.8436, 26.8768, 27.8436, 27.8436]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[27.8436, 27.8436, 26.8768, 27.8436, 27.8436, 27.8436, 27.8436, 27.8436,
         27.8436, 27.8436, 27.8436, 27.8436, 27.8436, 26.8768, 27.8436, 27.8436]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  28
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([27.8436, 27.8436, 26.8768, 27.8436, 27.8436, 27.8436, 27.8436, 27.8436,
        27.8436, 27.8436, 27.8436, 27.8436, 27.8436, 26.8768, 27.8436, 27.8436])
new_beam_scores: tensor([[28.8436, 28.8436, 27.8768, 28.8436, 28.8436, 28.8436, 28.8436, 28.8436,
         28.8436, 28.8436, 28.8436, 28.8436, 28.8436, 27.8768, 28.8436, 28.8436]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[28.8436, 28.8436, 27.8768, 28.8436, 28.8436, 28.8436, 28.8436, 28.8436,
         28.8436, 28.8436, 28.8436, 28.8436, 28.8436, 27.8768, 28.8436, 28.8436]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  29
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9466, 0.9466, 0.9900, 0.9466, 0.9466, 0.9466, 0.9466, 0.9466, 0.9466,
         0.9466, 0.9466, 0.9466, 0.9466, 0.9900, 0.9466, 0.9466]])
scores: tensor([28.8436, 28.8436, 27.8768, 28.8436, 28.8436, 28.8436, 28.8436, 28.8436,
        28.8436, 28.8436, 28.8436, 28.8436, 28.8436, 27.8768, 28.8436, 28.8436])
new_beam_scores: tensor([[29.7902, 29.7902, 28.8668, 29.7902, 29.7902, 29.7902, 29.7902, 29.7902,
         29.7902, 29.7902, 29.7902, 29.7902, 29.7902, 28.8668, 29.7902, 29.7902]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[29.7902, 29.7902, 28.8668, 29.7902, 29.7902, 29.7902, 29.7902, 29.7902,
         29.7902, 29.7902, 29.7902, 29.7902, 29.7902, 28.8668, 29.7902, 29.7902]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  30
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([29.7902, 29.7902, 28.8668, 29.7902, 29.7902, 29.7902, 29.7902, 29.7902,
        29.7902, 29.7902, 29.7902, 29.7902, 29.7902, 28.8668, 29.7902, 29.7902])
new_beam_scores: tensor([[30.7902, 30.7902, 29.8668, 30.7902, 30.7902, 30.7902, 30.7902, 30.7902,
         30.7902, 30.7902, 30.7902, 30.7902, 30.7902, 29.8668, 30.7902, 30.7902]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[30.7902, 30.7902, 29.8668, 30.7902, 30.7902, 30.7902, 30.7902, 30.7902,
         30.7902, 30.7902, 30.7902, 30.7902, 30.7902, 29.8668, 30.7902, 30.7902]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  31
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([30.7902, 30.7902, 29.8668, 30.7902, 30.7902, 30.7902, 30.7902, 30.7902,
        30.7902, 30.7902, 30.7902, 30.7902, 30.7902, 29.8668, 30.7902, 30.7902])
new_beam_scores: tensor([[31.7902, 31.7902, 30.8668, 31.7902, 31.7902, 31.7902, 31.7902, 31.7902,
         31.7902, 31.7902, 31.7902, 31.7902, 31.7902, 30.8668, 31.7902, 31.7902]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[31.7902, 31.7902, 30.8668, 31.7902, 31.7902, 31.7902, 31.7902, 31.7902,
         31.7902, 31.7902, 31.7902, 31.7902, 31.7902, 30.8668, 31.7902, 31.7902]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  32
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([31.7902, 31.7902, 30.8668, 31.7902, 31.7902, 31.7902, 31.7902, 31.7902,
        31.7902, 31.7902, 31.7902, 31.7902, 31.7902, 30.8668, 31.7902, 31.7902])
new_beam_scores: tensor([[32.7902, 32.7902, 31.8668, 32.7902, 32.7902, 32.7902, 32.7902, 32.7902,
         32.7902, 32.7902, 32.7902, 32.7902, 32.7902, 31.8668, 32.7902, 32.7902]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[32.7902, 32.7902, 31.8668, 32.7902, 32.7902, 32.7902, 32.7902, 32.7902,
         32.7902, 32.7902, 32.7902, 32.7902, 32.7902, 31.8668, 32.7902, 32.7902]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  33
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([32.7902, 32.7902, 31.8668, 32.7902, 32.7902, 32.7902, 32.7902, 32.7902,
        32.7902, 32.7902, 32.7902, 32.7902, 32.7902, 31.8668, 32.7902, 32.7902])
new_beam_scores: tensor([[33.7902, 33.7902, 32.8668, 33.7902, 33.7902, 33.7902, 33.7902, 33.7902,
         33.7902, 33.7902, 33.7902, 33.7902, 33.7902, 32.8668, 33.7902, 33.7902]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[33.7902, 33.7902, 32.8668, 33.7902, 33.7902, 33.7902, 33.7902, 33.7902,
         33.7902, 33.7902, 33.7902, 33.7902, 33.7902, 32.8668, 33.7902, 33.7902]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  34
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([33.7902, 33.7902, 32.8668, 33.7902, 33.7902, 33.7902, 33.7902, 33.7902,
        33.7902, 33.7902, 33.7902, 33.7902, 33.7902, 32.8668, 33.7902, 33.7902])
new_beam_scores: tensor([[34.7902, 34.7902, 33.8668, 34.7902, 34.7902, 34.7902, 34.7902, 34.7902,
         34.7902, 34.7902, 34.7902, 34.7902, 34.7902, 33.8668, 34.7902, 34.7902]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[34.7902, 34.7902, 33.8668, 34.7902, 34.7902, 34.7902, 34.7902, 34.7902,
         34.7902, 34.7902, 34.7902, 34.7902, 34.7902, 33.8668, 34.7902, 34.7902]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  35
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([34.7902, 34.7902, 33.8668, 34.7902, 34.7902, 34.7902, 34.7902, 34.7902,
        34.7902, 34.7902, 34.7902, 34.7902, 34.7902, 33.8668, 34.7902, 34.7902])
new_beam_scores: tensor([[35.7902, 35.7902, 34.8668, 35.7902, 35.7902, 35.7902, 35.7902, 35.7902,
         35.7902, 35.7902, 35.7902, 35.7902, 35.7902, 34.8668, 35.7902, 35.7902]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[35.7902, 35.7902, 34.8668, 35.7902, 35.7902, 35.7902, 35.7902, 35.7902,
         35.7902, 35.7902, 35.7902, 35.7902, 35.7902, 34.8668, 35.7902, 35.7902]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  36
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([35.7902, 35.7902, 34.8668, 35.7902, 35.7902, 35.7902, 35.7902, 35.7902,
        35.7902, 35.7902, 35.7902, 35.7902, 35.7902, 34.8668, 35.7902, 35.7902])
new_beam_scores: tensor([[36.7902, 36.7902, 35.8668, 36.7902, 36.7902, 36.7902, 36.7902, 36.7902,
         36.7902, 36.7902, 36.7902, 36.7902, 36.7902, 35.8668, 36.7902, 36.7902]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[36.7902, 36.7902, 35.8668, 36.7902, 36.7902, 36.7902, 36.7902, 36.7902,
         36.7902, 36.7902, 36.7902, 36.7902, 36.7902, 35.8668, 36.7902, 36.7902]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  37
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([36.7902, 36.7902, 35.8668, 36.7902, 36.7902, 36.7902, 36.7902, 36.7902,
        36.7902, 36.7902, 36.7902, 36.7902, 36.7902, 35.8668, 36.7902, 36.7902])
new_beam_scores: tensor([[37.7902, 37.7902, 36.8668, 37.7902, 37.7902, 37.7902, 37.7902, 37.7902,
         37.7902, 37.7902, 37.7902, 37.7902, 37.7902, 36.8668, 37.7902, 37.7902]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[37.7902, 37.7902, 36.8668, 37.7902, 37.7902, 37.7902, 37.7902, 37.7902,
         37.7902, 37.7902, 37.7902, 37.7902, 37.7902, 36.8668, 37.7902, 37.7902]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  38
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([37.7902, 37.7902, 36.8668, 37.7902, 37.7902, 37.7902, 37.7902, 37.7902,
        37.7902, 37.7902, 37.7902, 37.7902, 37.7902, 36.8668, 37.7902, 37.7902])
new_beam_scores: tensor([[38.7902, 38.7902, 37.8668, 38.7902, 38.7902, 38.7902, 38.7902, 38.7902,
         38.7902, 38.7902, 38.7902, 38.7902, 38.7902, 37.8668, 38.7902, 38.7902]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[38.7902, 38.7902, 37.8668, 38.7902, 38.7902, 38.7902, 38.7902, 38.7902,
         38.7902, 38.7902, 38.7902, 38.7902, 38.7902, 37.8668, 38.7902, 38.7902]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  39
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([38.7902, 38.7902, 37.8668, 38.7902, 38.7902, 38.7902, 38.7902, 38.7902,
        38.7902, 38.7902, 38.7902, 38.7902, 38.7902, 37.8668, 38.7902, 38.7902])
new_beam_scores: tensor([[39.7901, 39.7901, 38.8667, 39.7901, 39.7901, 39.7901, 39.7901, 39.7901,
         39.7901, 39.7901, 39.7901, 39.7901, 39.7901, 38.8667, 39.7901, 39.7901]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[39.7901, 39.7901, 38.8667, 39.7901, 39.7901, 39.7901, 39.7901, 39.7901,
         39.7901, 39.7901, 39.7901, 39.7901, 39.7901, 38.8667, 39.7901, 39.7901]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  40
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([39.7901, 39.7901, 38.8667, 39.7901, 39.7901, 39.7901, 39.7901, 39.7901,
        39.7901, 39.7901, 39.7901, 39.7901, 39.7901, 38.8667, 39.7901, 39.7901])
new_beam_scores: tensor([[40.7901, 40.7901, 39.8667, 40.7901, 40.7901, 40.7901, 40.7901, 40.7901,
         40.7901, 40.7901, 40.7901, 40.7901, 40.7901, 39.8667, 40.7901, 40.7901]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[40.7901, 40.7901, 39.8667, 40.7901, 40.7901, 40.7901, 40.7901, 40.7901,
         40.7901, 40.7901, 40.7901, 40.7901, 40.7901, 39.8667, 40.7901, 40.7901]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  41
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([40.7901, 40.7901, 39.8667, 40.7901, 40.7901, 40.7901, 40.7901, 40.7901,
        40.7901, 40.7901, 40.7901, 40.7901, 40.7901, 39.8667, 40.7901, 40.7901])
new_beam_scores: tensor([[41.7901, 41.7901, 40.8667, 41.7901, 41.7901, 41.7901, 41.7901, 41.7901,
         41.7901, 41.7901, 41.7901, 41.7901, 41.7901, 40.8667, 41.7901, 41.7901]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[41.7901, 41.7901, 40.8667, 41.7901, 41.7901, 41.7901, 41.7901, 41.7901,
         41.7901, 41.7901, 41.7901, 41.7901, 41.7901, 40.8667, 41.7901, 41.7901]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  42
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [3],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9631, 0.9631, 0.9631, 0.9631, 0.9631, 0.9631, 0.9631, 0.9631, 0.9631,
         0.9631, 0.0367, 0.9631, 0.9631, 0.9631, 0.9631, 0.9631]])
scores: tensor([41.7901, 41.7901, 40.8667, 41.7901, 41.7901, 41.7901, 41.7901, 41.7901,
        41.7901, 41.7901, 41.7901, 41.7901, 41.7901, 40.8667, 41.7901, 41.7901])
new_beam_scores: tensor([[42.7533, 42.7533, 41.8299, 42.7533, 42.7533, 42.7533, 42.7533, 42.7533,
         42.7533, 42.7533, 41.8269, 42.7533, 42.7533, 41.8299, 42.7533, 42.7533]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[42.7533, 42.7533, 41.8299, 42.7533, 42.7533, 42.7533, 42.7533, 42.7533,
         42.7533, 42.7533, 41.8269, 42.7533, 42.7533, 41.8299, 42.7533, 42.7533]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  43
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([42.7533, 42.7533, 41.8299, 42.7533, 42.7533, 42.7533, 42.7533, 42.7533,
        42.7533, 42.7533, 41.8269, 42.7533, 42.7533, 41.8299, 42.7533, 42.7533])
new_beam_scores: tensor([[43.7533, 43.7533, 42.8299, 43.7533, 43.7533, 43.7533, 43.7533, 43.7533,
         43.7533, 43.7533, 42.8269, 43.7533, 43.7533, 42.8299, 43.7533, 43.7533]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[43.7533, 43.7533, 42.8299, 43.7533, 43.7533, 43.7533, 43.7533, 43.7533,
         43.7533, 43.7533, 42.8269, 43.7533, 43.7533, 42.8299, 43.7533, 43.7533]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  44
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([43.7533, 43.7533, 42.8299, 43.7533, 43.7533, 43.7533, 43.7533, 43.7533,
        43.7533, 43.7533, 42.8269, 43.7533, 43.7533, 42.8299, 43.7533, 43.7533])
new_beam_scores: tensor([[44.7533, 44.7533, 43.8299, 44.7533, 44.7533, 44.7533, 44.7533, 44.7533,
         44.7533, 44.7533, 43.8269, 44.7533, 44.7533, 43.8299, 44.7533, 44.7533]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[44.7533, 44.7533, 43.8299, 44.7533, 44.7533, 44.7533, 44.7533, 44.7533,
         44.7533, 44.7533, 43.8269, 44.7533, 44.7533, 43.8299, 44.7533, 44.7533]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  45
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([44.7533, 44.7533, 43.8299, 44.7533, 44.7533, 44.7533, 44.7533, 44.7533,
        44.7533, 44.7533, 43.8269, 44.7533, 44.7533, 43.8299, 44.7533, 44.7533])
new_beam_scores: tensor([[45.7533, 45.7533, 44.8299, 45.7533, 45.7533, 45.7533, 45.7533, 45.7533,
         45.7533, 45.7533, 44.8269, 45.7533, 45.7533, 44.8299, 45.7533, 45.7533]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[45.7533, 45.7533, 44.8299, 45.7533, 45.7533, 45.7533, 45.7533, 45.7533,
         45.7533, 45.7533, 44.8269, 45.7533, 45.7533, 44.8299, 45.7533, 45.7533]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  46
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [1],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9866, 0.9866, 0.9866, 0.9866, 0.9866, 0.9866, 0.9866, 0.9866, 0.0123,
         0.9866, 1.0000, 0.9866, 0.9866, 0.9866, 0.9866, 0.9866]])
scores: tensor([45.7533, 45.7533, 44.8299, 45.7533, 45.7533, 45.7533, 45.7533, 45.7533,
        45.7533, 45.7533, 44.8269, 45.7533, 45.7533, 44.8299, 45.7533, 45.7533])
new_beam_scores: tensor([[46.7398, 46.7398, 45.8164, 46.7398, 46.7398, 46.7398, 46.7398, 46.7398,
         45.7656, 46.7398, 45.8269, 46.7398, 46.7398, 45.8164, 46.7398, 46.7398]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[46.7398, 46.7398, 45.8164, 46.7398, 46.7398, 46.7398, 46.7398, 46.7398,
         45.7656, 46.7398, 45.8269, 46.7398, 46.7398, 45.8164, 46.7398, 46.7398]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  47
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([46.7398, 46.7398, 45.8164, 46.7398, 46.7398, 46.7398, 46.7398, 46.7398,
        45.7656, 46.7398, 45.8269, 46.7398, 46.7398, 45.8164, 46.7398, 46.7398])
new_beam_scores: tensor([[47.7398, 47.7398, 46.8164, 47.7398, 47.7398, 47.7398, 47.7398, 47.7398,
         46.7656, 47.7398, 46.8269, 47.7398, 47.7398, 46.8164, 47.7398, 47.7398]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[47.7398, 47.7398, 46.8164, 47.7398, 47.7398, 47.7398, 47.7398, 47.7398,
         46.7656, 47.7398, 46.8269, 47.7398, 47.7398, 46.8164, 47.7398, 47.7398]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  48
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([47.7398, 47.7398, 46.8164, 47.7398, 47.7398, 47.7398, 47.7398, 47.7398,
        46.7656, 47.7398, 46.8269, 47.7398, 47.7398, 46.8164, 47.7398, 47.7398])
new_beam_scores: tensor([[48.7398, 48.7398, 47.8164, 48.7398, 48.7398, 48.7398, 48.7398, 48.7398,
         47.7656, 48.7398, 47.8269, 48.7398, 48.7398, 47.8164, 48.7398, 48.7398]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[48.7398, 48.7398, 47.8164, 48.7398, 48.7398, 48.7398, 48.7398, 48.7398,
         47.7656, 48.7398, 47.8269, 48.7398, 48.7398, 47.8164, 48.7398, 48.7398]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  49
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([48.7398, 48.7398, 47.8164, 48.7398, 48.7398, 48.7398, 48.7398, 48.7398,
        47.7656, 48.7398, 47.8269, 48.7398, 48.7398, 47.8164, 48.7398, 48.7398])
new_beam_scores: tensor([[49.7398, 49.7398, 48.8164, 49.7398, 49.7398, 49.7398, 49.7398, 49.7398,
         48.7656, 49.7398, 48.8269, 49.7398, 49.7398, 48.8164, 49.7398, 49.7398]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[49.7398, 49.7398, 48.8164, 49.7398, 49.7398, 49.7398, 49.7398, 49.7398,
         48.7656, 49.7398, 48.8269, 49.7398, 49.7398, 48.8164, 49.7398, 49.7398]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  50
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([49.7398, 49.7398, 48.8164, 49.7398, 49.7398, 49.7398, 49.7398, 49.7398,
        48.7656, 49.7398, 48.8269, 49.7398, 49.7398, 48.8164, 49.7398, 49.7398])
new_beam_scores: tensor([[50.7398, 50.7398, 49.8164, 50.7398, 50.7398, 50.7398, 50.7398, 50.7398,
         49.7656, 50.7398, 49.8269, 50.7398, 50.7398, 49.8164, 50.7398, 50.7398]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[50.7398, 50.7398, 49.8164, 50.7398, 50.7398, 50.7398, 50.7398, 50.7398,
         49.7656, 50.7398, 49.8269, 50.7398, 50.7398, 49.8164, 50.7398, 50.7398]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  51
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [3],
        [2],
        [3],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([50.7398, 50.7398, 49.8164, 50.7398, 50.7398, 50.7398, 50.7398, 50.7398,
        49.7656, 50.7398, 49.8269, 50.7398, 50.7398, 49.8164, 50.7398, 50.7398])
new_beam_scores: tensor([[51.7398, 51.7398, 50.8164, 51.7398, 51.7398, 51.7398, 51.7398, 51.7398,
         50.7656, 51.7398, 50.8269, 51.7398, 51.7398, 50.8164, 51.7398, 51.7398]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[51.7398, 51.7398, 50.8164, 51.7398, 51.7398, 51.7398, 51.7398, 51.7398,
         50.7656, 51.7398, 50.8269, 51.7398, 51.7398, 50.8164, 51.7398, 51.7398]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  52
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([51.7398, 51.7398, 50.8164, 51.7398, 51.7398, 51.7398, 51.7398, 51.7398,
        50.7656, 51.7398, 50.8269, 51.7398, 51.7398, 50.8164, 51.7398, 51.7398])
new_beam_scores: tensor([[52.7398, 52.7398, 51.8164, 52.7398, 52.7398, 52.7398, 52.7398, 52.7398,
         51.7656, 52.7398, 51.8269, 52.7398, 52.7398, 51.8164, 52.7398, 52.7398]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[52.7398, 52.7398, 51.8164, 52.7398, 52.7398, 52.7398, 52.7398, 52.7398,
         51.7656, 52.7398, 51.8269, 52.7398, 52.7398, 51.8164, 52.7398, 52.7398]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  53
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([52.7398, 52.7398, 51.8164, 52.7398, 52.7398, 52.7398, 52.7398, 52.7398,
        51.7656, 52.7398, 51.8269, 52.7398, 52.7398, 51.8164, 52.7398, 52.7398])
new_beam_scores: tensor([[53.7398, 53.7398, 52.8164, 53.7398, 53.7398, 53.7398, 53.7398, 53.7398,
         52.7656, 53.7398, 52.8269, 53.7398, 53.7398, 52.8164, 53.7398, 53.7398]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[53.7398, 53.7398, 52.8164, 53.7398, 53.7398, 53.7398, 53.7398, 53.7398,
         52.7656, 53.7398, 52.8269, 53.7398, 53.7398, 52.8164, 53.7398, 53.7398]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  54
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([53.7398, 53.7398, 52.8164, 53.7398, 53.7398, 53.7398, 53.7398, 53.7398,
        52.7656, 53.7398, 52.8269, 53.7398, 53.7398, 52.8164, 53.7398, 53.7398])
new_beam_scores: tensor([[54.7398, 54.7398, 53.8164, 54.7398, 54.7398, 54.7398, 54.7398, 54.7398,
         53.7656, 54.7398, 53.8269, 54.7398, 54.7398, 53.8164, 54.7398, 54.7398]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[54.7398, 54.7398, 53.8164, 54.7398, 54.7398, 54.7398, 54.7398, 54.7398,
         53.7656, 54.7398, 53.8269, 54.7398, 54.7398, 53.8164, 54.7398, 54.7398]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  55
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([54.7398, 54.7398, 53.8164, 54.7398, 54.7398, 54.7398, 54.7398, 54.7398,
        53.7656, 54.7398, 53.8269, 54.7398, 54.7398, 53.8164, 54.7398, 54.7398])
new_beam_scores: tensor([[55.7398, 55.7398, 54.8164, 55.7398, 55.7398, 55.7398, 55.7398, 55.7398,
         54.7656, 55.7398, 54.8269, 55.7398, 55.7398, 54.8164, 55.7398, 55.7398]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[55.7398, 55.7398, 54.8164, 55.7398, 55.7398, 55.7398, 55.7398, 55.7398,
         54.7656, 55.7398, 54.8269, 55.7398, 55.7398, 54.8164, 55.7398, 55.7398]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  56
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([55.7398, 55.7398, 54.8164, 55.7398, 55.7398, 55.7398, 55.7398, 55.7398,
        54.7656, 55.7398, 54.8269, 55.7398, 55.7398, 54.8164, 55.7398, 55.7398])
new_beam_scores: tensor([[56.7398, 56.7398, 55.8164, 56.7398, 56.7398, 56.7398, 56.7398, 56.7398,
         55.7656, 56.7398, 55.8269, 56.7398, 56.7398, 55.8164, 56.7398, 56.7398]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[56.7398, 56.7398, 55.8164, 56.7398, 56.7398, 56.7398, 56.7398, 56.7398,
         55.7656, 56.7398, 55.8269, 56.7398, 56.7398, 55.8164, 56.7398, 56.7398]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  57
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([56.7398, 56.7398, 55.8164, 56.7398, 56.7398, 56.7398, 56.7398, 56.7398,
        55.7656, 56.7398, 55.8269, 56.7398, 56.7398, 55.8164, 56.7398, 56.7398])
new_beam_scores: tensor([[57.7398, 57.7398, 56.8164, 57.7398, 57.7398, 57.7398, 57.7398, 57.7398,
         56.7656, 57.7398, 56.8269, 57.7398, 57.7398, 56.8164, 57.7398, 57.7398]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[57.7398, 57.7398, 56.8164, 57.7398, 57.7398, 57.7398, 57.7398, 57.7398,
         56.7656, 57.7398, 56.8269, 57.7398, 57.7398, 56.8164, 57.7398, 57.7398]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  58
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([57.7398, 57.7398, 56.8164, 57.7398, 57.7398, 57.7398, 57.7398, 57.7398,
        56.7656, 57.7398, 56.8269, 57.7398, 57.7398, 56.8164, 57.7398, 57.7398])
new_beam_scores: tensor([[58.7398, 58.7398, 57.8164, 58.7398, 58.7398, 58.7398, 58.7398, 58.7398,
         57.7656, 58.7398, 57.8269, 58.7398, 58.7398, 57.8164, 58.7398, 58.7398]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[58.7398, 58.7398, 57.8164, 58.7398, 58.7398, 58.7398, 58.7398, 58.7398,
         57.7656, 58.7398, 57.8269, 58.7398, 58.7398, 57.8164, 58.7398, 58.7398]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  59
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([58.7398, 58.7398, 57.8164, 58.7398, 58.7398, 58.7398, 58.7398, 58.7398,
        57.7656, 58.7398, 57.8269, 58.7398, 58.7398, 57.8164, 58.7398, 58.7398])
new_beam_scores: tensor([[59.7398, 59.7398, 58.8164, 59.7398, 59.7398, 59.7398, 59.7398, 59.7398,
         58.7656, 59.7398, 58.8269, 59.7398, 59.7398, 58.8164, 59.7398, 59.7398]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[59.7398, 59.7398, 58.8164, 59.7398, 59.7398, 59.7398, 59.7398, 59.7398,
         58.7656, 59.7398, 58.8269, 59.7398, 59.7398, 58.8164, 59.7398, 59.7398]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  60
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([59.7398, 59.7398, 58.8164, 59.7398, 59.7398, 59.7398, 59.7398, 59.7398,
        58.7656, 59.7398, 58.8269, 59.7398, 59.7398, 58.8164, 59.7398, 59.7398])
new_beam_scores: tensor([[60.7398, 60.7398, 59.8164, 60.7398, 60.7398, 60.7398, 60.7398, 60.7398,
         59.7656, 60.7398, 59.8269, 60.7398, 60.7398, 59.8164, 60.7398, 60.7398]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[60.7398, 60.7398, 59.8164, 60.7398, 60.7398, 60.7398, 60.7398, 60.7398,
         59.7656, 60.7398, 59.8269, 60.7398, 60.7398, 59.8164, 60.7398, 60.7398]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  61
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([60.7398, 60.7398, 59.8164, 60.7398, 60.7398, 60.7398, 60.7398, 60.7398,
        59.7656, 60.7398, 59.8269, 60.7398, 60.7398, 59.8164, 60.7398, 60.7398])
new_beam_scores: tensor([[61.7398, 61.7398, 60.8164, 61.7398, 61.7398, 61.7398, 61.7398, 61.7398,
         60.7656, 61.7398, 60.8269, 61.7398, 61.7398, 60.8164, 61.7398, 61.7398]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[61.7398, 61.7398, 60.8164, 61.7398, 61.7398, 61.7398, 61.7398, 61.7398,
         60.7656, 61.7398, 60.8269, 61.7398, 61.7398, 60.8164, 61.7398, 61.7398]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  62
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([61.7398, 61.7398, 60.8164, 61.7398, 61.7398, 61.7398, 61.7398, 61.7398,
        60.7656, 61.7398, 60.8269, 61.7398, 61.7398, 60.8164, 61.7398, 61.7398])
new_beam_scores: tensor([[62.7398, 62.7398, 61.8164, 62.7398, 62.7398, 62.7398, 62.7398, 62.7398,
         61.7656, 62.7398, 61.8269, 62.7398, 62.7398, 61.8164, 62.7398, 62.7398]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[62.7398, 62.7398, 61.8164, 62.7398, 62.7398, 62.7398, 62.7398, 62.7398,
         61.7656, 62.7398, 61.8269, 62.7398, 62.7398, 61.8164, 62.7398, 62.7398]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  63
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([62.7398, 62.7398, 61.8164, 62.7398, 62.7398, 62.7398, 62.7398, 62.7398,
        61.7656, 62.7398, 61.8269, 62.7398, 62.7398, 61.8164, 62.7398, 62.7398])
new_beam_scores: tensor([[63.7398, 63.7398, 62.8164, 63.7398, 63.7398, 63.7398, 63.7398, 63.7398,
         62.7656, 63.7398, 62.8269, 63.7398, 63.7398, 62.8164, 63.7398, 63.7398]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[63.7398, 63.7398, 62.8164, 63.7398, 63.7398, 63.7398, 63.7398, 63.7398,
         62.7656, 63.7398, 62.8269, 63.7398, 63.7398, 62.8164, 63.7398, 63.7398]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  64
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([63.7398, 63.7398, 62.8164, 63.7398, 63.7398, 63.7398, 63.7398, 63.7398,
        62.7656, 63.7398, 62.8269, 63.7398, 63.7398, 62.8164, 63.7398, 63.7398])
new_beam_scores: tensor([[64.7399, 64.7399, 63.8164, 64.7399, 64.7399, 64.7399, 64.7399, 64.7399,
         63.7656, 64.7399, 63.8269, 64.7399, 64.7399, 63.8164, 64.7399, 64.7399]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[64.7399, 64.7399, 63.8164, 64.7399, 64.7399, 64.7399, 64.7399, 64.7399,
         63.7656, 64.7399, 63.8269, 64.7399, 64.7399, 63.8164, 64.7399, 64.7399]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  65
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9568, 0.9568, 0.9542, 0.9568, 0.9568, 0.9568, 0.9568, 0.9568, 0.9561,
         0.9568, 0.9423, 0.9568, 0.9568, 0.9542, 0.9568, 0.9568]])
scores: tensor([64.7399, 64.7399, 63.8164, 64.7399, 64.7399, 64.7399, 64.7399, 64.7399,
        63.7656, 64.7399, 63.8269, 64.7399, 64.7399, 63.8164, 64.7399, 64.7399])
new_beam_scores: tensor([[65.6967, 65.6967, 64.7706, 65.6967, 65.6967, 65.6967, 65.6967, 65.6967,
         64.7217, 65.6967, 64.7691, 65.6967, 65.6967, 64.7706, 65.6967, 65.6967]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[65.6967, 65.6967, 64.7706, 65.6967, 65.6967, 65.6967, 65.6967, 65.6967,
         64.7217, 65.6967, 64.7691, 65.6967, 65.6967, 64.7706, 65.6967, 65.6967]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  66
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([65.6967, 65.6967, 64.7706, 65.6967, 65.6967, 65.6967, 65.6967, 65.6967,
        64.7217, 65.6967, 64.7691, 65.6967, 65.6967, 64.7706, 65.6967, 65.6967])
new_beam_scores: tensor([[66.6967, 66.6967, 65.7706, 66.6967, 66.6967, 66.6967, 66.6967, 66.6967,
         65.7217, 66.6967, 65.7691, 66.6967, 66.6967, 65.7706, 66.6967, 66.6967]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[66.6967, 66.6967, 65.7706, 66.6967, 66.6967, 66.6967, 66.6967, 66.6967,
         65.7217, 66.6967, 65.7691, 66.6967, 66.6967, 65.7706, 66.6967, 66.6967]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  67
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9973, 0.9973, 0.9972, 0.9973, 0.9973, 0.9973, 0.9973, 0.9973, 0.9970,
         0.9973, 0.9951, 0.9973, 0.9973, 0.9972, 0.9973, 0.9973]])
scores: tensor([66.6967, 66.6967, 65.7706, 66.6967, 66.6967, 66.6967, 66.6967, 66.6967,
        65.7217, 66.6967, 65.7691, 66.6967, 66.6967, 65.7706, 66.6967, 66.6967])
new_beam_scores: tensor([[67.6939, 67.6939, 66.7678, 67.6939, 67.6939, 67.6939, 67.6939, 67.6939,
         66.7188, 67.6939, 66.7642, 67.6939, 67.6939, 66.7678, 67.6939, 67.6939]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[67.6939, 67.6939, 66.7678, 67.6939, 67.6939, 67.6939, 67.6939, 67.6939,
         66.7188, 67.6939, 66.7642, 67.6939, 67.6939, 66.7678, 67.6939, 67.6939]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  68
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9993, 0.9993, 0.9993, 0.9993, 0.9993, 0.9993, 0.9993, 0.9993, 0.9993,
         0.9993, 0.9991, 0.9993, 0.9993, 0.9993, 0.9993, 0.9993]])
scores: tensor([67.6939, 67.6939, 66.7678, 67.6939, 67.6939, 67.6939, 67.6939, 67.6939,
        66.7188, 67.6939, 66.7642, 67.6939, 67.6939, 66.7678, 67.6939, 67.6939])
new_beam_scores: tensor([[68.6932, 68.6932, 67.7672, 68.6932, 68.6932, 68.6932, 68.6932, 68.6932,
         67.7181, 68.6932, 67.7633, 68.6932, 68.6932, 67.7672, 68.6932, 68.6932]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[68.6932, 68.6932, 67.7672, 68.6932, 68.6932, 68.6932, 68.6932, 68.6932,
         67.7181, 68.6932, 67.7633, 68.6932, 68.6932, 67.7672, 68.6932, 68.6932]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  69
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([68.6932, 68.6932, 67.7672, 68.6932, 68.6932, 68.6932, 68.6932, 68.6932,
        67.7181, 68.6932, 67.7633, 68.6932, 68.6932, 67.7672, 68.6932, 68.6932])
new_beam_scores: tensor([[69.6932, 69.6932, 68.7672, 69.6932, 69.6932, 69.6932, 69.6932, 69.6932,
         68.7181, 69.6932, 68.7633, 69.6932, 69.6932, 68.7672, 69.6932, 69.6932]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[69.6932, 69.6932, 68.7672, 69.6932, 69.6932, 69.6932, 69.6932, 69.6932,
         68.7181, 69.6932, 68.7633, 69.6932, 69.6932, 68.7672, 69.6932, 69.6932]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  70
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([69.6932, 69.6932, 68.7672, 69.6932, 69.6932, 69.6932, 69.6932, 69.6932,
        68.7181, 69.6932, 68.7633, 69.6932, 69.6932, 68.7672, 69.6932, 69.6932])
new_beam_scores: tensor([[70.6932, 70.6932, 69.7672, 70.6932, 70.6932, 70.6932, 70.6932, 70.6932,
         69.7181, 70.6932, 69.7633, 70.6932, 70.6932, 69.7672, 70.6932, 70.6932]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[70.6932, 70.6932, 69.7672, 70.6932, 70.6932, 70.6932, 70.6932, 70.6932,
         69.7181, 70.6932, 69.7633, 70.6932, 70.6932, 69.7672, 70.6932, 70.6932]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  71
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([70.6932, 70.6932, 69.7672, 70.6932, 70.6932, 70.6932, 70.6932, 70.6932,
        69.7181, 70.6932, 69.7633, 70.6932, 70.6932, 69.7672, 70.6932, 70.6932])
new_beam_scores: tensor([[71.6932, 71.6932, 70.7672, 71.6932, 71.6932, 71.6932, 71.6932, 71.6932,
         70.7181, 71.6932, 70.7633, 71.6932, 71.6932, 70.7672, 71.6932, 71.6932]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[71.6932, 71.6932, 70.7672, 71.6932, 71.6932, 71.6932, 71.6932, 71.6932,
         70.7181, 71.6932, 70.7633, 71.6932, 71.6932, 70.7672, 71.6932, 71.6932]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  72
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([71.6932, 71.6932, 70.7672, 71.6932, 71.6932, 71.6932, 71.6932, 71.6932,
        70.7181, 71.6932, 70.7633, 71.6932, 71.6932, 70.7672, 71.6932, 71.6932])
new_beam_scores: tensor([[72.6932, 72.6932, 71.7672, 72.6932, 72.6932, 72.6932, 72.6932, 72.6932,
         71.7181, 72.6932, 71.7633, 72.6932, 72.6932, 71.7672, 72.6932, 72.6932]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[72.6932, 72.6932, 71.7672, 72.6932, 72.6932, 72.6932, 72.6932, 72.6932,
         71.7181, 72.6932, 71.7633, 72.6932, 72.6932, 71.7672, 72.6932, 72.6932]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  73
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([72.6932, 72.6932, 71.7672, 72.6932, 72.6932, 72.6932, 72.6932, 72.6932,
        71.7181, 72.6932, 71.7633, 72.6932, 72.6932, 71.7672, 72.6932, 72.6932])
new_beam_scores: tensor([[73.6932, 73.6932, 72.7672, 73.6932, 73.6932, 73.6932, 73.6932, 73.6932,
         72.7181, 73.6932, 72.7633, 73.6932, 73.6932, 72.7672, 73.6932, 73.6932]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[73.6932, 73.6932, 72.7672, 73.6932, 73.6932, 73.6932, 73.6932, 73.6932,
         72.7181, 73.6932, 72.7633, 73.6932, 73.6932, 72.7672, 73.6932, 73.6932]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  74
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9775, 0.9775, 0.9789, 0.9775, 0.9775, 0.9775, 0.9775, 0.9775, 0.9786,
         0.9775, 0.9754, 0.9775, 0.9775, 0.9789, 0.9775, 0.9775]])
scores: tensor([73.6932, 73.6932, 72.7672, 73.6932, 73.6932, 73.6932, 73.6932, 73.6932,
        72.7181, 73.6932, 72.7633, 73.6932, 73.6932, 72.7672, 73.6932, 73.6932])
new_beam_scores: tensor([[74.6708, 74.6708, 73.7460, 74.6708, 74.6708, 74.6708, 74.6708, 74.6708,
         73.6967, 74.6708, 73.7387, 74.6708, 74.6708, 73.7460, 74.6708, 74.6708]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[74.6708, 74.6708, 73.7460, 74.6708, 74.6708, 74.6708, 74.6708, 74.6708,
         73.6967, 74.6708, 73.7387, 74.6708, 74.6708, 73.7460, 74.6708, 74.6708]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  75
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([74.6708, 74.6708, 73.7460, 74.6708, 74.6708, 74.6708, 74.6708, 74.6708,
        73.6967, 74.6708, 73.7387, 74.6708, 74.6708, 73.7460, 74.6708, 74.6708])
new_beam_scores: tensor([[75.6708, 75.6708, 74.7460, 75.6708, 75.6708, 75.6708, 75.6708, 75.6708,
         74.6967, 75.6708, 74.7387, 75.6708, 75.6708, 74.7460, 75.6708, 75.6708]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[75.6708, 75.6708, 74.7460, 75.6708, 75.6708, 75.6708, 75.6708, 75.6708,
         74.6967, 75.6708, 74.7387, 75.6708, 75.6708, 74.7460, 75.6708, 75.6708]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  76
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9969, 0.9969, 0.9964, 0.9969, 0.9969, 0.9969, 0.9969, 0.9969, 0.9965,
         0.9969, 0.9944, 0.9969, 0.9969, 0.9964, 0.9969, 0.9969]])
scores: tensor([75.6708, 75.6708, 74.7460, 75.6708, 75.6708, 75.6708, 75.6708, 75.6708,
        74.6967, 75.6708, 74.7387, 75.6708, 75.6708, 74.7460, 75.6708, 75.6708])
new_beam_scores: tensor([[76.6677, 76.6677, 75.7424, 76.6677, 76.6677, 76.6677, 76.6677, 76.6677,
         75.6933, 76.6677, 75.7331, 76.6677, 76.6677, 75.7424, 76.6677, 76.6677]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[76.6677, 76.6677, 75.7424, 76.6677, 76.6677, 76.6677, 76.6677, 76.6677,
         75.6933, 76.6677, 75.7331, 76.6677, 76.6677, 75.7424, 76.6677, 76.6677]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  77
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([76.6677, 76.6677, 75.7424, 76.6677, 76.6677, 76.6677, 76.6677, 76.6677,
        75.6933, 76.6677, 75.7331, 76.6677, 76.6677, 75.7424, 76.6677, 76.6677])
new_beam_scores: tensor([[77.6677, 77.6677, 76.7424, 77.6677, 77.6677, 77.6677, 77.6677, 77.6677,
         76.6933, 77.6677, 76.7331, 77.6677, 77.6677, 76.7424, 77.6677, 77.6677]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[77.6677, 77.6677, 76.7424, 77.6677, 77.6677, 77.6677, 77.6677, 77.6677,
         76.6933, 77.6677, 76.7331, 77.6677, 77.6677, 76.7424, 77.6677, 77.6677]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  78
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([77.6677, 77.6677, 76.7424, 77.6677, 77.6677, 77.6677, 77.6677, 77.6677,
        76.6933, 77.6677, 76.7331, 77.6677, 77.6677, 76.7424, 77.6677, 77.6677])
new_beam_scores: tensor([[78.6677, 78.6677, 77.7424, 78.6677, 78.6677, 78.6677, 78.6677, 78.6677,
         77.6933, 78.6677, 77.7331, 78.6677, 78.6677, 77.7424, 78.6677, 78.6677]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[78.6677, 78.6677, 77.7424, 78.6677, 78.6677, 78.6677, 78.6677, 78.6677,
         77.6933, 78.6677, 77.7331, 78.6677, 78.6677, 77.7424, 78.6677, 78.6677]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  79
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([78.6677, 78.6677, 77.7424, 78.6677, 78.6677, 78.6677, 78.6677, 78.6677,
        77.6933, 78.6677, 77.7331, 78.6677, 78.6677, 77.7424, 78.6677, 78.6677])
new_beam_scores: tensor([[79.6677, 79.6677, 78.7424, 79.6677, 79.6677, 79.6677, 79.6677, 79.6677,
         78.6933, 79.6677, 78.7331, 79.6677, 79.6677, 78.7424, 79.6677, 79.6677]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[79.6677, 79.6677, 78.7424, 79.6677, 79.6677, 79.6677, 79.6677, 79.6677,
         78.6933, 79.6677, 78.7331, 79.6677, 79.6677, 78.7424, 79.6677, 79.6677]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  80
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([79.6677, 79.6677, 78.7424, 79.6677, 79.6677, 79.6677, 79.6677, 79.6677,
        78.6933, 79.6677, 78.7331, 79.6677, 79.6677, 78.7424, 79.6677, 79.6677])
new_beam_scores: tensor([[80.6677, 80.6677, 79.7424, 80.6677, 80.6677, 80.6677, 80.6677, 80.6677,
         79.6933, 80.6677, 79.7331, 80.6677, 80.6677, 79.7424, 80.6677, 80.6677]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[80.6677, 80.6677, 79.7424, 80.6677, 80.6677, 80.6677, 80.6677, 80.6677,
         79.6933, 80.6677, 79.7331, 80.6677, 80.6677, 79.7424, 80.6677, 80.6677]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  81
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([80.6677, 80.6677, 79.7424, 80.6677, 80.6677, 80.6677, 80.6677, 80.6677,
        79.6933, 80.6677, 79.7331, 80.6677, 80.6677, 79.7424, 80.6677, 80.6677])
new_beam_scores: tensor([[81.6677, 81.6677, 80.7424, 81.6677, 81.6677, 81.6677, 81.6677, 81.6677,
         80.6933, 81.6677, 80.7331, 81.6677, 81.6677, 80.7424, 81.6677, 81.6677]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[81.6677, 81.6677, 80.7424, 81.6677, 81.6677, 81.6677, 81.6677, 81.6677,
         80.6933, 81.6677, 80.7331, 81.6677, 81.6677, 80.7424, 81.6677, 81.6677]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  82
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9831, 0.9831, 0.9833, 0.9831, 0.9831, 0.9831, 0.9831, 0.9831, 0.9976,
         0.9831, 0.9993, 0.9831, 0.9831, 0.9833, 0.9831, 0.9831]])
scores: tensor([81.6677, 81.6677, 80.7424, 81.6677, 81.6677, 81.6677, 81.6677, 81.6677,
        80.6933, 81.6677, 80.7331, 81.6677, 81.6677, 80.7424, 81.6677, 81.6677])
new_beam_scores: tensor([[82.6508, 82.6508, 81.7257, 82.6508, 82.6508, 82.6508, 82.6508, 82.6508,
         81.6909, 82.6508, 81.7324, 82.6508, 82.6508, 81.7257, 82.6508, 82.6508]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[82.6508, 82.6508, 81.7257, 82.6508, 82.6508, 82.6508, 82.6508, 82.6508,
         81.6909, 82.6508, 81.7324, 82.6508, 82.6508, 81.7257, 82.6508, 82.6508]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  83
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([82.6508, 82.6508, 81.7257, 82.6508, 82.6508, 82.6508, 82.6508, 82.6508,
        81.6909, 82.6508, 81.7324, 82.6508, 82.6508, 81.7257, 82.6508, 82.6508])
new_beam_scores: tensor([[83.6508, 83.6508, 82.7257, 83.6508, 83.6508, 83.6508, 83.6508, 83.6508,
         82.6909, 83.6508, 82.7324, 83.6508, 83.6508, 82.7257, 83.6508, 83.6508]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[83.6508, 83.6508, 82.7257, 83.6508, 83.6508, 83.6508, 83.6508, 83.6508,
         82.6909, 83.6508, 82.7324, 83.6508, 83.6508, 82.7257, 83.6508, 83.6508]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  84
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([83.6508, 83.6508, 82.7257, 83.6508, 83.6508, 83.6508, 83.6508, 83.6508,
        82.6909, 83.6508, 82.7324, 83.6508, 83.6508, 82.7257, 83.6508, 83.6508])
new_beam_scores: tensor([[84.6508, 84.6508, 83.7257, 84.6508, 84.6508, 84.6508, 84.6508, 84.6508,
         83.6909, 84.6508, 83.7324, 84.6508, 84.6508, 83.7257, 84.6508, 84.6508]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[84.6508, 84.6508, 83.7257, 84.6508, 84.6508, 84.6508, 84.6508, 84.6508,
         83.6909, 84.6508, 83.7324, 84.6508, 84.6508, 83.7257, 84.6508, 84.6508]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  85
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [1],
        [1],
        [1],
        [2],
        [1],
        [1],
        [1],
        [1],
        [1],
        [2],
        [1],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.5648, 0.4352, 0.4363, 0.4352, 0.5648, 0.4352, 0.4352, 0.4352, 0.4122,
         0.4352, 0.5321, 0.4352, 0.5648, 0.5637, 0.5648, 0.5648]])
scores: tensor([84.6508, 84.6508, 83.7257, 84.6508, 84.6508, 84.6508, 84.6508, 84.6508,
        83.6909, 84.6508, 83.7324, 84.6508, 84.6508, 83.7257, 84.6508, 84.6508])
new_beam_scores: tensor([[85.2155, 85.0860, 84.1620, 85.0860, 85.2155, 85.0860, 85.0860, 85.0860,
         84.1030, 85.0860, 84.2645, 85.0860, 85.2155, 84.2895, 85.2155, 85.2155]])
new_beam seq: tensor([[2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[85.2155, 85.0860, 84.1620, 85.0860, 85.2155, 85.0860, 85.0860, 85.0860,
         84.1030, 85.0860, 84.2645, 85.0860, 85.2155, 84.2895, 85.2155, 85.2155]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  86
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([85.2155, 85.0860, 84.1620, 85.0860, 85.2155, 85.0860, 85.0860, 85.0860,
        84.1030, 85.0860, 84.2645, 85.0860, 85.2155, 84.2895, 85.2155, 85.2155])
new_beam_scores: tensor([[86.2155, 86.0860, 85.1620, 86.0860, 86.2155, 86.0860, 86.0860, 86.0860,
         85.1030, 86.0860, 85.2645, 86.0860, 86.2155, 85.2895, 86.2155, 86.2155]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[86.2155, 86.0860, 85.1620, 86.0860, 86.2155, 86.0860, 86.0860, 86.0860,
         85.1030, 86.0860, 85.2645, 86.0860, 86.2155, 85.2895, 86.2155, 86.2155]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  87
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([86.2155, 86.0860, 85.1620, 86.0860, 86.2155, 86.0860, 86.0860, 86.0860,
        85.1030, 86.0860, 85.2645, 86.0860, 86.2155, 85.2895, 86.2155, 86.2155])
new_beam_scores: tensor([[87.2155, 87.0860, 86.1620, 87.0860, 87.2155, 87.0860, 87.0860, 87.0860,
         86.1030, 87.0860, 86.2645, 87.0860, 87.2155, 86.2895, 87.2155, 87.2155]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[87.2155, 87.0860, 86.1620, 87.0860, 87.2155, 87.0860, 87.0860, 87.0860,
         86.1030, 87.0860, 86.2645, 87.0860, 87.2155, 86.2895, 87.2155, 87.2155]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  88
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([87.2155, 87.0860, 86.1620, 87.0860, 87.2155, 87.0860, 87.0860, 87.0860,
        86.1030, 87.0860, 86.2645, 87.0860, 87.2155, 86.2895, 87.2155, 87.2155])
new_beam_scores: tensor([[88.2155, 88.0860, 87.1620, 88.0860, 88.2155, 88.0860, 88.0860, 88.0860,
         87.1030, 88.0860, 87.2645, 88.0860, 88.2155, 87.2895, 88.2155, 88.2155]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[88.2155, 88.0860, 87.1620, 88.0860, 88.2155, 88.0860, 88.0860, 88.0860,
         87.1030, 88.0860, 87.2645, 88.0860, 88.2155, 87.2895, 88.2155, 88.2155]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  89
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([88.2155, 88.0860, 87.1620, 88.0860, 88.2155, 88.0860, 88.0860, 88.0860,
        87.1030, 88.0860, 87.2645, 88.0860, 88.2155, 87.2895, 88.2155, 88.2155])
new_beam_scores: tensor([[89.2155, 89.0860, 88.1620, 89.0860, 89.2155, 89.0860, 89.0860, 89.0860,
         88.1030, 89.0860, 88.2645, 89.0860, 89.2155, 88.2895, 89.2155, 89.2155]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[89.2155, 89.0860, 88.1620, 89.0860, 89.2155, 89.0860, 89.0860, 89.0860,
         88.1030, 89.0860, 88.2645, 89.0860, 89.2155, 88.2895, 89.2155, 89.2155]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  90
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([89.2155, 89.0860, 88.1620, 89.0860, 89.2155, 89.0860, 89.0860, 89.0860,
        88.1030, 89.0860, 88.2645, 89.0860, 89.2155, 88.2895, 89.2155, 89.2155])
new_beam_scores: tensor([[90.2155, 90.0860, 89.1620, 90.0860, 90.2155, 90.0860, 90.0860, 90.0860,
         89.1030, 90.0860, 89.2645, 90.0860, 90.2155, 89.2895, 90.2155, 90.2155]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[90.2155, 90.0860, 89.1620, 90.0860, 90.2155, 90.0860, 90.0860, 90.0860,
         89.1030, 90.0860, 89.2645, 90.0860, 90.2155, 89.2895, 90.2155, 90.2155]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  91
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([90.2155, 90.0860, 89.1620, 90.0860, 90.2155, 90.0860, 90.0860, 90.0860,
        89.1030, 90.0860, 89.2645, 90.0860, 90.2155, 89.2895, 90.2155, 90.2155])
new_beam_scores: tensor([[91.2155, 91.0860, 90.1620, 91.0860, 91.2155, 91.0860, 91.0860, 91.0860,
         90.1030, 91.0860, 90.2645, 91.0860, 91.2155, 90.2895, 91.2155, 91.2155]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[91.2155, 91.0860, 90.1620, 91.0860, 91.2155, 91.0860, 91.0860, 91.0860,
         90.1030, 91.0860, 90.2645, 91.0860, 91.2155, 90.2895, 91.2155, 91.2155]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  92
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([91.2155, 91.0860, 90.1620, 91.0860, 91.2155, 91.0860, 91.0860, 91.0860,
        90.1030, 91.0860, 90.2645, 91.0860, 91.2155, 90.2895, 91.2155, 91.2155])
new_beam_scores: tensor([[92.2155, 92.0860, 91.1620, 92.0860, 92.2155, 92.0860, 92.0860, 92.0860,
         91.1030, 92.0860, 91.2645, 92.0860, 92.2155, 91.2895, 92.2155, 92.2155]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[92.2155, 92.0860, 91.1620, 92.0860, 92.2155, 92.0860, 92.0860, 92.0860,
         91.1030, 92.0860, 91.2645, 92.0860, 92.2155, 91.2895, 92.2155, 92.2155]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  93
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([92.2155, 92.0860, 91.1620, 92.0860, 92.2155, 92.0860, 92.0860, 92.0860,
        91.1030, 92.0860, 91.2645, 92.0860, 92.2155, 91.2895, 92.2155, 92.2155])
new_beam_scores: tensor([[93.2155, 93.0860, 92.1620, 93.0860, 93.2155, 93.0860, 93.0860, 93.0860,
         92.1030, 93.0860, 92.2645, 93.0860, 93.2155, 92.2895, 93.2155, 93.2155]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[93.2155, 93.0860, 92.1620, 93.0860, 93.2155, 93.0860, 93.0860, 93.0860,
         92.1030, 93.0860, 92.2645, 93.0860, 93.2155, 92.2895, 93.2155, 93.2155]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  94
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([93.2155, 93.0860, 92.1620, 93.0860, 93.2155, 93.0860, 93.0860, 93.0860,
        92.1030, 93.0860, 92.2645, 93.0860, 93.2155, 92.2895, 93.2155, 93.2155])
new_beam_scores: tensor([[94.2155, 94.0860, 93.1620, 94.0860, 94.2155, 94.0860, 94.0860, 94.0860,
         93.1030, 94.0860, 93.2645, 94.0860, 94.2155, 93.2895, 94.2155, 94.2155]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[94.2155, 94.0860, 93.1620, 94.0860, 94.2155, 94.0860, 94.0860, 94.0860,
         93.1030, 94.0860, 93.2645, 94.0860, 94.2155, 93.2895, 94.2155, 94.2155]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  95
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([94.2155, 94.0860, 93.1620, 94.0860, 94.2155, 94.0860, 94.0860, 94.0860,
        93.1030, 94.0860, 93.2645, 94.0860, 94.2155, 93.2895, 94.2155, 94.2155])
new_beam_scores: tensor([[95.2155, 95.0860, 94.1620, 95.0860, 95.2155, 95.0860, 95.0860, 95.0860,
         94.1030, 95.0860, 94.2645, 95.0860, 95.2155, 94.2895, 95.2155, 95.2155]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[95.2155, 95.0860, 94.1620, 95.0860, 95.2155, 95.0860, 95.0860, 95.0860,
         94.1030, 95.0860, 94.2645, 95.0860, 95.2155, 94.2895, 95.2155, 95.2155]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  96
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [3],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9997, 0.9997, 0.6344, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997,
         0.9997, 0.9997, 0.9997, 0.9997, 0.3564, 0.9997, 0.9997]])
scores: tensor([95.2155, 95.0860, 94.1620, 95.0860, 95.2155, 95.0860, 95.0860, 95.0860,
        94.1030, 95.0860, 94.2645, 95.0860, 95.2155, 94.2895, 95.2155, 95.2155])
new_beam_scores: tensor([[96.2152, 96.0857, 94.7963, 96.0857, 96.2152, 96.0857, 96.0857, 96.0857,
         95.1027, 96.0857, 95.2642, 96.0857, 96.2152, 94.6459, 96.2152, 96.2152]])
new_beam seq: tensor([[0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[96.2152, 96.0857, 94.7963, 96.0857, 96.2152, 96.0857, 96.0857, 96.0857,
         95.1027, 96.0857, 95.2642, 96.0857, 96.2152, 94.6459, 96.2152, 96.2152]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  97
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([96.2152, 96.0857, 94.7963, 96.0857, 96.2152, 96.0857, 96.0857, 96.0857,
        95.1027, 96.0857, 95.2642, 96.0857, 96.2152, 94.6459, 96.2152, 96.2152])
new_beam_scores: tensor([[97.2152, 97.0857, 95.7963, 97.0857, 97.2152, 97.0857, 97.0857, 97.0857,
         96.1027, 97.0857, 96.2642, 97.0857, 97.2152, 95.6459, 97.2152, 97.2152]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[97.2152, 97.0857, 95.7963, 97.0857, 97.2152, 97.0857, 97.0857, 97.0857,
         96.1027, 97.0857, 96.2642, 97.0857, 97.2152, 95.6459, 97.2152, 97.2152]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  98
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([97.2152, 97.0857, 95.7963, 97.0857, 97.2152, 97.0857, 97.0857, 97.0857,
        96.1027, 97.0857, 96.2642, 97.0857, 97.2152, 95.6459, 97.2152, 97.2152])
new_beam_scores: tensor([[98.2152, 98.0857, 96.7963, 98.0857, 98.2152, 98.0857, 98.0857, 98.0857,
         97.1027, 98.0857, 97.2642, 98.0857, 98.2152, 96.6459, 98.2152, 98.2152]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[98.2152, 98.0857, 96.7963, 98.0857, 98.2152, 98.0857, 98.0857, 98.0857,
         97.1027, 98.0857, 97.2642, 98.0857, 98.2152, 96.6459, 98.2152, 98.2152]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  99
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([98.2152, 98.0857, 96.7963, 98.0857, 98.2152, 98.0857, 98.0857, 98.0857,
        97.1027, 98.0857, 97.2642, 98.0857, 98.2152, 96.6459, 98.2152, 98.2152])
new_beam_scores: tensor([[99.2152, 99.0857, 97.7963, 99.0857, 99.2152, 99.0857, 99.0857, 99.0857,
         98.1027, 99.0857, 98.2642, 99.0857, 99.2152, 97.6459, 99.2152, 99.2152]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[99.2152, 99.0857, 97.7963, 99.0857, 99.2152, 99.0857, 99.0857, 99.0857,
         98.1027, 99.0857, 98.2642, 99.0857, 99.2152, 97.6459, 99.2152, 99.2152]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  100
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([99.2152, 99.0857, 97.7963, 99.0857, 99.2152, 99.0857, 99.0857, 99.0857,
        98.1027, 99.0857, 98.2642, 99.0857, 99.2152, 97.6459, 99.2152, 99.2152])
new_beam_scores: tensor([[100.2152, 100.0857,  98.7963, 100.0857, 100.2152, 100.0857, 100.0857,
         100.0857,  99.1027, 100.0857,  99.2642, 100.0857, 100.2152,  98.6459,
         100.2152, 100.2152]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[100.2152, 100.0857,  98.7963, 100.0857, 100.2152, 100.0857, 100.0857,
         100.0857,  99.1027, 100.0857,  99.2642, 100.0857, 100.2152,  98.6459,
         100.2152, 100.2152]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  101
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([100.2152, 100.0857,  98.7963, 100.0857, 100.2152, 100.0857, 100.0857,
        100.0857,  99.1027, 100.0857,  99.2642, 100.0857, 100.2152,  98.6459,
        100.2152, 100.2152])
new_beam_scores: tensor([[101.2152, 101.0857,  99.7963, 101.0857, 101.2152, 101.0857, 101.0857,
         101.0857, 100.1027, 101.0857, 100.2642, 101.0857, 101.2152,  99.6459,
         101.2152, 101.2152]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[101.2152, 101.0857,  99.7963, 101.0857, 101.2152, 101.0857, 101.0857,
         101.0857, 100.1027, 101.0857, 100.2642, 101.0857, 101.2152,  99.6459,
         101.2152, 101.2152]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  102
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([101.2152, 101.0857,  99.7963, 101.0857, 101.2152, 101.0857, 101.0857,
        101.0857, 100.1027, 101.0857, 100.2642, 101.0857, 101.2152,  99.6459,
        101.2152, 101.2152])
new_beam_scores: tensor([[102.2152, 102.0857, 100.7963, 102.0857, 102.2152, 102.0857, 102.0857,
         102.0857, 101.1027, 102.0857, 101.2642, 102.0857, 102.2152, 100.6459,
         102.2152, 102.2152]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[102.2152, 102.0857, 100.7963, 102.0857, 102.2152, 102.0857, 102.0857,
         102.0857, 101.1027, 102.0857, 101.2642, 102.0857, 102.2152, 100.6459,
         102.2152, 102.2152]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  103
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9900, 0.9901, 0.9500, 0.9901, 0.9900, 0.9901, 0.9901, 0.9901, 0.9901,
         0.9901, 0.9899, 0.9901, 0.9900, 0.9927, 0.9900, 0.0100]])
scores: tensor([102.2152, 102.0857, 100.7963, 102.0857, 102.2152, 102.0857, 102.0857,
        102.0857, 101.1027, 102.0857, 101.2642, 102.0857, 102.2152, 100.6459,
        102.2152, 102.2152])
new_beam_scores: tensor([[103.2053, 103.0758, 101.7463, 103.0758, 103.2053, 103.0758, 103.0758,
         103.0758, 102.0929, 103.0758, 102.2541, 103.0758, 103.2053, 101.6386,
         103.2053, 102.2252]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[103.2053, 103.0758, 101.7463, 103.0758, 103.2053, 103.0758, 103.0758,
         103.0758, 102.0929, 103.0758, 102.2541, 103.0758, 103.2053, 101.6386,
         103.2053, 102.2252]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  104
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([103.2053, 103.0758, 101.7463, 103.0758, 103.2053, 103.0758, 103.0758,
        103.0758, 102.0929, 103.0758, 102.2541, 103.0758, 103.2053, 101.6386,
        103.2053, 102.2252])
new_beam_scores: tensor([[104.2053, 104.0758, 102.7463, 104.0758, 104.2053, 104.0758, 104.0758,
         104.0758, 103.0929, 104.0758, 103.2541, 104.0758, 104.2053, 102.6386,
         104.2053, 103.2252]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[104.2053, 104.0758, 102.7463, 104.0758, 104.2053, 104.0758, 104.0758,
         104.0758, 103.0929, 104.0758, 103.2541, 104.0758, 104.2053, 102.6386,
         104.2053, 103.2252]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  105
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([104.2053, 104.0758, 102.7463, 104.0758, 104.2053, 104.0758, 104.0758,
        104.0758, 103.0929, 104.0758, 103.2541, 104.0758, 104.2053, 102.6386,
        104.2053, 103.2252])
new_beam_scores: tensor([[105.2053, 105.0758, 103.7463, 105.0758, 105.2053, 105.0758, 105.0758,
         105.0758, 104.0929, 105.0758, 104.2541, 105.0758, 105.2053, 103.6386,
         105.2053, 104.2252]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[105.2053, 105.0758, 103.7463, 105.0758, 105.2053, 105.0758, 105.0758,
         105.0758, 104.0929, 105.0758, 104.2541, 105.0758, 105.2053, 103.6386,
         105.2053, 104.2252]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  106
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9585, 0.9588, 0.9596, 0.9588, 0.9585, 0.9588, 0.0373, 0.9588, 0.9584,
         0.9588, 0.9539, 0.9588, 0.0374, 0.9622, 0.9585, 0.9611]])
scores: tensor([105.2053, 105.0758, 103.7463, 105.0758, 105.2053, 105.0758, 105.0758,
        105.0758, 104.0929, 105.0758, 104.2541, 105.0758, 105.2053, 103.6386,
        105.2053, 104.2252])
new_beam_scores: tensor([[106.1637, 106.0346, 104.7059, 106.0346, 106.1637, 106.0346, 105.1132,
         106.0346, 105.0512, 106.0346, 105.2080, 106.0346, 105.2427, 104.6008,
         106.1637, 105.1863]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[106.1637, 106.0346, 104.7059, 106.0346, 106.1637, 106.0346, 105.1132,
         106.0346, 105.0512, 106.0346, 105.2080, 106.0346, 105.2427, 104.6008,
         106.1637, 105.1863]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  107
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([106.1637, 106.0346, 104.7059, 106.0346, 106.1637, 106.0346, 105.1132,
        106.0346, 105.0512, 106.0346, 105.2080, 106.0346, 105.2427, 104.6008,
        106.1637, 105.1863])
new_beam_scores: tensor([[107.1637, 107.0346, 105.7059, 107.0346, 107.1637, 107.0346, 106.1132,
         107.0346, 106.0512, 107.0346, 106.2080, 107.0346, 106.2427, 105.6008,
         107.1637, 106.1863]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[107.1637, 107.0346, 105.7059, 107.0346, 107.1637, 107.0346, 106.1132,
         107.0346, 106.0512, 107.0346, 106.2080, 107.0346, 106.2427, 105.6008,
         107.1637, 106.1863]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  108
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([107.1637, 107.0346, 105.7059, 107.0346, 107.1637, 107.0346, 106.1132,
        107.0346, 106.0512, 107.0346, 106.2080, 107.0346, 106.2427, 105.6008,
        107.1637, 106.1863])
new_beam_scores: tensor([[108.1637, 108.0346, 106.7059, 108.0346, 108.1637, 108.0346, 107.1132,
         108.0346, 107.0512, 108.0346, 107.2080, 108.0346, 107.2427, 106.6008,
         108.1637, 107.1863]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[108.1637, 108.0346, 106.7059, 108.0346, 108.1637, 108.0346, 107.1132,
         108.0346, 107.0512, 108.0346, 107.2080, 108.0346, 107.2427, 106.6008,
         108.1637, 107.1863]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  109
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([108.1637, 108.0346, 106.7059, 108.0346, 108.1637, 108.0346, 107.1132,
        108.0346, 107.0512, 108.0346, 107.2080, 108.0346, 107.2427, 106.6008,
        108.1637, 107.1863])
new_beam_scores: tensor([[109.1637, 109.0346, 107.7059, 109.0346, 109.1637, 109.0346, 108.1132,
         109.0346, 108.0512, 109.0346, 108.2080, 109.0346, 108.2427, 107.6008,
         109.1637, 108.1863]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[109.1637, 109.0346, 107.7059, 109.0346, 109.1637, 109.0346, 108.1132,
         109.0346, 108.0512, 109.0346, 108.2080, 109.0346, 108.2427, 107.6008,
         109.1637, 108.1863]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  110
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([109.1637, 109.0346, 107.7059, 109.0346, 109.1637, 109.0346, 108.1132,
        109.0346, 108.0512, 109.0346, 108.2080, 109.0346, 108.2427, 107.6008,
        109.1637, 108.1863])
new_beam_scores: tensor([[110.1637, 110.0346, 108.7059, 110.0346, 110.1637, 110.0346, 109.1132,
         110.0346, 109.0512, 110.0346, 109.2080, 110.0346, 109.2427, 108.6008,
         110.1637, 109.1863]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[110.1637, 110.0346, 108.7059, 110.0346, 110.1637, 110.0346, 109.1132,
         110.0346, 109.0512, 110.0346, 109.2080, 110.0346, 109.2427, 108.6008,
         110.1637, 109.1863]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  111
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([110.1637, 110.0346, 108.7059, 110.0346, 110.1637, 110.0346, 109.1132,
        110.0346, 109.0512, 110.0346, 109.2080, 110.0346, 109.2427, 108.6008,
        110.1637, 109.1863])
new_beam_scores: tensor([[111.1637, 111.0346, 109.7059, 111.0346, 111.1637, 111.0346, 110.1132,
         111.0346, 110.0512, 111.0346, 110.2080, 111.0346, 110.2427, 109.6008,
         111.1637, 110.1863]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[111.1637, 111.0346, 109.7059, 111.0346, 111.1637, 111.0346, 110.1132,
         111.0346, 110.0512, 111.0346, 110.2080, 111.0346, 110.2427, 109.6008,
         111.1637, 110.1863]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  112
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([111.1637, 111.0346, 109.7059, 111.0346, 111.1637, 111.0346, 110.1132,
        111.0346, 110.0512, 111.0346, 110.2080, 111.0346, 110.2427, 109.6008,
        111.1637, 110.1863])
new_beam_scores: tensor([[112.1637, 112.0346, 110.7059, 112.0346, 112.1637, 112.0346, 111.1132,
         112.0346, 111.0512, 112.0346, 111.2080, 112.0346, 111.2427, 110.6008,
         112.1637, 111.1863]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[112.1637, 112.0346, 110.7059, 112.0346, 112.1637, 112.0346, 111.1132,
         112.0346, 111.0512, 112.0346, 111.2080, 112.0346, 111.2427, 110.6008,
         112.1637, 111.1863]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  113
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([112.1637, 112.0346, 110.7059, 112.0346, 112.1637, 112.0346, 111.1132,
        112.0346, 111.0512, 112.0346, 111.2080, 112.0346, 111.2427, 110.6008,
        112.1637, 111.1863])
new_beam_scores: tensor([[113.1637, 113.0346, 111.7059, 113.0346, 113.1637, 113.0346, 112.1132,
         113.0346, 112.0512, 113.0346, 112.2080, 113.0346, 112.2427, 111.6008,
         113.1637, 112.1863]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[113.1637, 113.0346, 111.7059, 113.0346, 113.1637, 113.0346, 112.1132,
         113.0346, 112.0512, 113.0346, 112.2080, 113.0346, 112.2427, 111.6008,
         113.1637, 112.1863]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  114
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([113.1637, 113.0346, 111.7059, 113.0346, 113.1637, 113.0346, 112.1132,
        113.0346, 112.0512, 113.0346, 112.2080, 113.0346, 112.2427, 111.6008,
        113.1637, 112.1863])
new_beam_scores: tensor([[114.1637, 114.0346, 112.7059, 114.0346, 114.1637, 114.0346, 113.1132,
         114.0346, 113.0512, 114.0346, 113.2080, 114.0346, 113.2427, 112.6008,
         114.1637, 113.1863]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[114.1637, 114.0346, 112.7059, 114.0346, 114.1637, 114.0346, 113.1132,
         114.0346, 113.0512, 114.0346, 113.2080, 114.0346, 113.2427, 112.6008,
         114.1637, 113.1863]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  115
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([114.1637, 114.0346, 112.7059, 114.0346, 114.1637, 114.0346, 113.1132,
        114.0346, 113.0512, 114.0346, 113.2080, 114.0346, 113.2427, 112.6008,
        114.1637, 113.1863])
new_beam_scores: tensor([[115.1637, 115.0346, 113.7059, 115.0346, 115.1637, 115.0346, 114.1132,
         115.0346, 114.0512, 115.0346, 114.2080, 115.0346, 114.2427, 113.6008,
         115.1637, 114.1863]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[115.1637, 115.0346, 113.7059, 115.0346, 115.1637, 115.0346, 114.1132,
         115.0346, 114.0512, 115.0346, 114.2080, 115.0346, 114.2427, 113.6008,
         115.1637, 114.1863]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  116
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([115.1637, 115.0346, 113.7059, 115.0346, 115.1637, 115.0346, 114.1132,
        115.0346, 114.0512, 115.0346, 114.2080, 115.0346, 114.2427, 113.6008,
        115.1637, 114.1863])
new_beam_scores: tensor([[116.1637, 116.0346, 114.7059, 116.0346, 116.1637, 116.0346, 115.1132,
         116.0346, 115.0512, 116.0346, 115.2080, 116.0346, 115.2427, 114.6008,
         116.1637, 115.1863]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[116.1637, 116.0346, 114.7059, 116.0346, 116.1637, 116.0346, 115.1132,
         116.0346, 115.0512, 116.0346, 115.2080, 116.0346, 115.2427, 114.6008,
         116.1637, 115.1863]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  117
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990, 0.9992,
         0.9990, 0.9998, 0.9990, 0.9990, 0.9990, 0.9990, 0.9990]])
scores: tensor([116.1637, 116.0346, 114.7059, 116.0346, 116.1637, 116.0346, 115.1132,
        116.0346, 115.0512, 116.0346, 115.2080, 116.0346, 115.2427, 114.6008,
        116.1637, 115.1863])
new_beam_scores: tensor([[117.1627, 117.0336, 115.7048, 117.0336, 117.1627, 117.0336, 116.1122,
         117.0336, 116.0504, 117.0336, 116.2078, 117.0336, 116.2417, 115.5998,
         117.1627, 116.1853]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[117.1627, 117.0336, 115.7048, 117.0336, 117.1627, 117.0336, 116.1122,
         117.0336, 116.0504, 117.0336, 116.2078, 117.0336, 116.2417, 115.5998,
         117.1627, 116.1853]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  118
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([117.1627, 117.0336, 115.7048, 117.0336, 117.1627, 117.0336, 116.1122,
        117.0336, 116.0504, 117.0336, 116.2078, 117.0336, 116.2417, 115.5998,
        117.1627, 116.1853])
new_beam_scores: tensor([[118.1627, 118.0336, 116.7048, 118.0336, 118.1627, 118.0336, 117.1122,
         118.0336, 117.0504, 118.0336, 117.2078, 118.0336, 117.2417, 116.5998,
         118.1627, 117.1853]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[118.1627, 118.0336, 116.7048, 118.0336, 118.1627, 118.0336, 117.1122,
         118.0336, 117.0504, 118.0336, 117.2078, 118.0336, 117.2417, 116.5998,
         118.1627, 117.1853]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  119
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([118.1627, 118.0336, 116.7048, 118.0336, 118.1627, 118.0336, 117.1122,
        118.0336, 117.0504, 118.0336, 117.2078, 118.0336, 117.2417, 116.5998,
        118.1627, 117.1853])
new_beam_scores: tensor([[119.1627, 119.0336, 117.7048, 119.0336, 119.1627, 119.0336, 118.1122,
         119.0336, 118.0504, 119.0336, 118.2078, 119.0336, 118.2417, 117.5998,
         119.1627, 118.1853]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[119.1627, 119.0336, 117.7048, 119.0336, 119.1627, 119.0336, 118.1122,
         119.0336, 118.0504, 119.0336, 118.2078, 119.0336, 118.2417, 117.5998,
         119.1627, 118.1853]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  120
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([119.1627, 119.0336, 117.7048, 119.0336, 119.1627, 119.0336, 118.1122,
        119.0336, 118.0504, 119.0336, 118.2078, 119.0336, 118.2417, 117.5998,
        119.1627, 118.1853])
new_beam_scores: tensor([[120.1627, 120.0336, 118.7048, 120.0336, 120.1627, 120.0336, 119.1122,
         120.0336, 119.0504, 120.0336, 119.2078, 120.0336, 119.2417, 118.5998,
         120.1627, 119.1853]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[120.1627, 120.0336, 118.7048, 120.0336, 120.1627, 120.0336, 119.1122,
         120.0336, 119.0504, 120.0336, 119.2078, 120.0336, 119.2417, 118.5998,
         120.1627, 119.1853]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  121
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([120.1627, 120.0336, 118.7048, 120.0336, 120.1627, 120.0336, 119.1122,
        120.0336, 119.0504, 120.0336, 119.2078, 120.0336, 119.2417, 118.5998,
        120.1627, 119.1853])
new_beam_scores: tensor([[121.1627, 121.0336, 119.7048, 121.0336, 121.1627, 121.0336, 120.1122,
         121.0336, 120.0504, 121.0336, 120.2078, 121.0336, 120.2417, 119.5998,
         121.1627, 120.1853]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[121.1627, 121.0336, 119.7048, 121.0336, 121.1627, 121.0336, 120.1122,
         121.0336, 120.0504, 121.0336, 120.2078, 121.0336, 120.2417, 119.5998,
         121.1627, 120.1853]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  122
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([121.1627, 121.0336, 119.7048, 121.0336, 121.1627, 121.0336, 120.1122,
        121.0336, 120.0504, 121.0336, 120.2078, 121.0336, 120.2417, 119.5998,
        121.1627, 120.1853])
new_beam_scores: tensor([[122.1627, 122.0336, 120.7048, 122.0336, 122.1627, 122.0336, 121.1122,
         122.0336, 121.0504, 122.0336, 121.2078, 122.0336, 121.2417, 120.5998,
         122.1627, 121.1853]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[122.1627, 122.0336, 120.7048, 122.0336, 122.1627, 122.0336, 121.1122,
         122.0336, 121.0504, 122.0336, 121.2078, 122.0336, 121.2417, 120.5998,
         122.1627, 121.1853]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  123
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([122.1627, 122.0336, 120.7048, 122.0336, 122.1627, 122.0336, 121.1122,
        122.0336, 121.0504, 122.0336, 121.2078, 122.0336, 121.2417, 120.5998,
        122.1627, 121.1853])
new_beam_scores: tensor([[123.1627, 123.0336, 121.7048, 123.0336, 123.1627, 123.0336, 122.1122,
         123.0336, 122.0504, 123.0336, 122.2078, 123.0336, 122.2417, 121.5998,
         123.1627, 122.1853]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[123.1627, 123.0336, 121.7048, 123.0336, 123.1627, 123.0336, 122.1122,
         123.0336, 122.0504, 123.0336, 122.2078, 123.0336, 122.2417, 121.5998,
         123.1627, 122.1853]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  124
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([123.1627, 123.0336, 121.7048, 123.0336, 123.1627, 123.0336, 122.1122,
        123.0336, 122.0504, 123.0336, 122.2078, 123.0336, 122.2417, 121.5998,
        123.1627, 122.1853])
new_beam_scores: tensor([[124.1627, 124.0336, 122.7048, 124.0336, 124.1627, 124.0336, 123.1122,
         124.0336, 123.0504, 124.0336, 123.2078, 124.0336, 123.2417, 122.5998,
         124.1627, 123.1853]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[124.1627, 124.0336, 122.7048, 124.0336, 124.1627, 124.0336, 123.1122,
         124.0336, 123.0504, 124.0336, 123.2078, 124.0336, 123.2417, 122.5998,
         124.1627, 123.1853]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  125
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [1],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9902, 0.9903, 0.9903, 0.9903, 0.9902, 0.9903, 0.9903, 0.9903, 0.9704,
         0.9903, 0.0258, 0.9903, 0.9903, 0.9902, 0.9902, 0.9902]])
scores: tensor([124.1627, 124.0336, 122.7048, 124.0336, 124.1627, 124.0336, 123.1122,
        124.0336, 123.0504, 124.0336, 123.2078, 124.0336, 123.2417, 122.5998,
        124.1627, 123.1853])
new_beam_scores: tensor([[125.1530, 125.0239, 123.6951, 125.0239, 125.1530, 125.0239, 124.1024,
         125.0239, 124.0208, 125.0239, 123.2336, 125.0239, 124.2320, 123.5901,
         125.1530, 124.1755]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[125.1530, 125.0239, 123.6951, 125.0239, 125.1530, 125.0239, 124.1024,
         125.0239, 124.0208, 125.0239, 123.2336, 125.0239, 124.2320, 123.5901,
         125.1530, 124.1755]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  126
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 1.0000,
         0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998]])
scores: tensor([125.1530, 125.0239, 123.6951, 125.0239, 125.1530, 125.0239, 124.1024,
        125.0239, 124.0208, 125.0239, 123.2336, 125.0239, 124.2320, 123.5901,
        125.1530, 124.1755])
new_beam_scores: tensor([[126.1528, 126.0237, 124.6949, 126.0237, 126.1528, 126.0237, 125.1023,
         126.0237, 125.0208, 126.0237, 124.2334, 126.0237, 125.2318, 124.5899,
         126.1528, 125.1754]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[126.1528, 126.0237, 124.6949, 126.0237, 126.1528, 126.0237, 125.1023,
         126.0237, 125.0208, 126.0237, 124.2334, 126.0237, 125.2318, 124.5899,
         126.1528, 125.1754]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  127
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 0.9985, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([126.1528, 126.0237, 124.6949, 126.0237, 126.1528, 126.0237, 125.1023,
        126.0237, 125.0208, 126.0237, 124.2334, 126.0237, 125.2318, 124.5899,
        126.1528, 125.1754])
new_beam_scores: tensor([[127.1528, 127.0237, 125.6949, 127.0237, 127.1528, 127.0237, 126.1023,
         127.0237, 126.0208, 127.0237, 125.2319, 127.0237, 126.2318, 125.5899,
         127.1528, 126.1754]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[127.1528, 127.0237, 125.6949, 127.0237, 127.1528, 127.0237, 126.1023,
         127.0237, 126.0208, 127.0237, 125.2319, 127.0237, 126.2318, 125.5899,
         127.1528, 126.1754]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  128
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [0],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9908,
         0.9997, 0.2833, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997]])
scores: tensor([127.1528, 127.0237, 125.6949, 127.0237, 127.1528, 127.0237, 126.1023,
        127.0237, 126.0208, 127.0237, 125.2319, 127.0237, 126.2318, 125.5899,
        127.1528, 126.1754])
new_beam_scores: tensor([[128.1525, 128.0234, 126.6946, 128.0234, 128.1525, 128.0234, 127.1020,
         128.0234, 127.0116, 128.0234, 125.5152, 128.0234, 127.2315, 126.5896,
         128.1525, 127.1751]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[128.1525, 128.0234, 126.6946, 128.0234, 128.1525, 128.0234, 127.1020,
         128.0234, 127.0116, 128.0234, 125.5152, 128.0234, 127.2315, 126.5896,
         128.1525, 127.1751]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  129
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [2],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9981, 0.9981, 0.9981, 0.9981, 0.9981, 0.9981, 0.9980, 0.9981, 0.9550,
         0.9981, 0.8612, 0.9981, 0.9980, 0.9981, 0.9981, 0.9981]])
scores: tensor([128.1525, 128.0234, 126.6946, 128.0234, 128.1525, 128.0234, 127.1020,
        128.0234, 127.0116, 128.0234, 125.5152, 128.0234, 127.2315, 126.5896,
        128.1525, 127.1751])
new_beam_scores: tensor([[129.1505, 129.0215, 127.6927, 129.0215, 129.1505, 129.0215, 128.1000,
         129.0215, 127.9666, 129.0215, 126.3763, 129.0215, 128.2295, 127.5877,
         129.1505, 128.1731]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[129.1505, 129.0215, 127.6927, 129.0215, 129.1505, 129.0215, 128.1000,
         129.0215, 127.9666, 129.0215, 126.3763, 129.0215, 128.2295, 127.5877,
         129.1505, 128.1731]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  130
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 1.0000,
         0.9998, 0.9890, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998]])
scores: tensor([129.1505, 129.0215, 127.6927, 129.0215, 129.1505, 129.0215, 128.1000,
        129.0215, 127.9666, 129.0215, 126.3763, 129.0215, 128.2295, 127.5877,
        129.1505, 128.1731])
new_beam_scores: tensor([[130.1504, 130.0213, 128.6925, 130.0213, 130.1504, 130.0213, 129.0998,
         130.0213, 128.9665, 130.0213, 127.3653, 130.0213, 129.2294, 128.5875,
         130.1504, 129.1729]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[130.1504, 130.0213, 128.6925, 130.0213, 130.1504, 130.0213, 129.0998,
         130.0213, 128.9665, 130.0213, 127.3653, 130.0213, 129.2294, 128.5875,
         130.1504, 129.1729]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  131
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([130.1504, 130.0213, 128.6925, 130.0213, 130.1504, 130.0213, 129.0998,
        130.0213, 128.9665, 130.0213, 127.3653, 130.0213, 129.2294, 128.5875,
        130.1504, 129.1729])
new_beam_scores: tensor([[131.1504, 131.0213, 129.6925, 131.0213, 131.1504, 131.0213, 130.0998,
         131.0213, 129.9665, 131.0213, 128.3653, 131.0213, 130.2294, 129.5875,
         131.1504, 130.1729]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[131.1504, 131.0213, 129.6925, 131.0213, 131.1504, 131.0213, 130.0998,
         131.0213, 129.9665, 131.0213, 128.3653, 131.0213, 130.2294, 129.5875,
         131.1504, 130.1729]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  132
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([131.1504, 131.0213, 129.6925, 131.0213, 131.1504, 131.0213, 130.0998,
        131.0213, 129.9665, 131.0213, 128.3653, 131.0213, 130.2294, 129.5875,
        131.1504, 130.1729])
new_beam_scores: tensor([[132.1504, 132.0213, 130.6925, 132.0213, 132.1504, 132.0213, 131.0998,
         132.0213, 130.9665, 132.0213, 129.3653, 132.0213, 131.2294, 130.5875,
         132.1504, 131.1729]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[132.1504, 132.0213, 130.6925, 132.0213, 132.1504, 132.0213, 131.0998,
         132.0213, 130.9665, 132.0213, 129.3653, 132.0213, 131.2294, 130.5875,
         132.1504, 131.1729]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  133
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([132.1504, 132.0213, 130.6925, 132.0213, 132.1504, 132.0213, 131.0998,
        132.0213, 130.9665, 132.0213, 129.3653, 132.0213, 131.2294, 130.5875,
        132.1504, 131.1729])
new_beam_scores: tensor([[133.1504, 133.0213, 131.6925, 133.0213, 133.1504, 133.0213, 132.0998,
         133.0213, 131.9665, 133.0213, 130.3653, 133.0213, 132.2294, 131.5875,
         133.1504, 132.1729]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[133.1504, 133.0213, 131.6925, 133.0213, 133.1504, 133.0213, 132.0998,
         133.0213, 131.9665, 133.0213, 130.3653, 133.0213, 132.2294, 131.5875,
         133.1504, 132.1729]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  134
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999,
         0.9999, 0.9998, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999]])
scores: tensor([133.1504, 133.0213, 131.6925, 133.0213, 133.1504, 133.0213, 132.0998,
        133.0213, 131.9665, 133.0213, 130.3653, 133.0213, 132.2294, 131.5875,
        133.1504, 132.1729])
new_beam_scores: tensor([[134.1503, 134.0212, 132.6924, 134.0212, 134.1503, 134.0212, 133.0997,
         134.0212, 132.9664, 134.0212, 131.3651, 134.0212, 133.2292, 132.5874,
         134.1503, 133.1728]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[134.1503, 134.0212, 132.6924, 134.0212, 134.1503, 134.0212, 133.0997,
         134.0212, 132.9664, 134.0212, 131.3651, 134.0212, 133.2292, 132.5874,
         134.1503, 133.1728]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  135
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([134.1503, 134.0212, 132.6924, 134.0212, 134.1503, 134.0212, 133.0997,
        134.0212, 132.9664, 134.0212, 131.3651, 134.0212, 133.2292, 132.5874,
        134.1503, 133.1728])
new_beam_scores: tensor([[135.1503, 135.0212, 133.6924, 135.0212, 135.1503, 135.0212, 134.0997,
         135.0212, 133.9664, 135.0212, 132.3651, 135.0212, 134.2292, 133.5874,
         135.1503, 134.1728]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[135.1503, 135.0212, 133.6924, 135.0212, 135.1503, 135.0212, 134.0997,
         135.0212, 133.9664, 135.0212, 132.3651, 135.0212, 134.2292, 133.5874,
         135.1503, 134.1728]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  136
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([135.1503, 135.0212, 133.6924, 135.0212, 135.1503, 135.0212, 134.0997,
        135.0212, 133.9664, 135.0212, 132.3651, 135.0212, 134.2292, 133.5874,
        135.1503, 134.1728])
new_beam_scores: tensor([[136.1503, 136.0212, 134.6924, 136.0212, 136.1503, 136.0212, 135.0997,
         136.0212, 134.9664, 136.0212, 133.3651, 136.0212, 135.2292, 134.5874,
         136.1503, 135.1728]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[136.1503, 136.0212, 134.6924, 136.0212, 136.1503, 136.0212, 135.0997,
         136.0212, 134.9664, 136.0212, 133.3651, 136.0212, 135.2292, 134.5874,
         136.1503, 135.1728]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  137
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [1],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([136.1503, 136.0212, 134.6924, 136.0212, 136.1503, 136.0212, 135.0997,
        136.0212, 134.9664, 136.0212, 133.3651, 136.0212, 135.2292, 134.5874,
        136.1503, 135.1728])
new_beam_scores: tensor([[137.1503, 137.0212, 135.6924, 137.0212, 137.1503, 137.0212, 136.0997,
         137.0212, 135.9664, 137.0212, 134.3651, 137.0212, 136.2292, 135.5874,
         137.1503, 136.1728]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[137.1503, 137.0212, 135.6924, 137.0212, 137.1503, 137.0212, 136.0997,
         137.0212, 135.9664, 137.0212, 134.3651, 137.0212, 136.2292, 135.5874,
         137.1503, 136.1728]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  138
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [3],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([137.1503, 137.0212, 135.6924, 137.0212, 137.1503, 137.0212, 136.0997,
        137.0212, 135.9664, 137.0212, 134.3651, 137.0212, 136.2292, 135.5874,
        137.1503, 136.1728])
new_beam_scores: tensor([[138.1503, 138.0212, 136.6924, 138.0212, 138.1503, 138.0212, 137.0997,
         138.0212, 136.9664, 138.0212, 135.3651, 138.0212, 137.2292, 136.5874,
         138.1503, 137.1728]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[138.1503, 138.0212, 136.6924, 138.0212, 138.1503, 138.0212, 137.0997,
         138.0212, 136.9664, 138.0212, 135.3651, 138.0212, 137.2292, 136.5874,
         138.1503, 137.1728]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  139
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([138.1503, 138.0212, 136.6924, 138.0212, 138.1503, 138.0212, 137.0997,
        138.0212, 136.9664, 138.0212, 135.3651, 138.0212, 137.2292, 136.5874,
        138.1503, 137.1728])
new_beam_scores: tensor([[139.1503, 139.0212, 137.6924, 139.0212, 139.1503, 139.0212, 138.0997,
         139.0212, 137.9664, 139.0212, 136.3651, 139.0212, 138.2292, 137.5874,
         139.1503, 138.1728]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[139.1503, 139.0212, 137.6924, 139.0212, 139.1503, 139.0212, 138.0997,
         139.0212, 137.9664, 139.0212, 136.3651, 139.0212, 138.2292, 137.5874,
         139.1503, 138.1728]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  140
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([139.1503, 139.0212, 137.6924, 139.0212, 139.1503, 139.0212, 138.0997,
        139.0212, 137.9664, 139.0212, 136.3651, 139.0212, 138.2292, 137.5874,
        139.1503, 138.1728])
new_beam_scores: tensor([[140.1503, 140.0212, 138.6924, 140.0212, 140.1503, 140.0212, 139.0997,
         140.0212, 138.9664, 140.0212, 137.3651, 140.0212, 139.2292, 138.5874,
         140.1503, 139.1728]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[140.1503, 140.0212, 138.6924, 140.0212, 140.1503, 140.0212, 139.0997,
         140.0212, 138.9664, 140.0212, 137.3651, 140.0212, 139.2292, 138.5874,
         140.1503, 139.1728]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  141
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [2],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([140.1503, 140.0212, 138.6924, 140.0212, 140.1503, 140.0212, 139.0997,
        140.0212, 138.9664, 140.0212, 137.3651, 140.0212, 139.2292, 138.5874,
        140.1503, 139.1728])
new_beam_scores: tensor([[141.1503, 141.0212, 139.6924, 141.0212, 141.1503, 141.0212, 140.0997,
         141.0212, 139.9664, 141.0212, 138.3651, 141.0212, 140.2292, 139.5874,
         141.1503, 140.1728]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[141.1503, 141.0212, 139.6924, 141.0212, 141.1503, 141.0212, 140.0997,
         141.0212, 139.9664, 141.0212, 138.3651, 141.0212, 140.2292, 139.5874,
         141.1503, 140.1728]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  142
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([141.1503, 141.0212, 139.6924, 141.0212, 141.1503, 141.0212, 140.0997,
        141.0212, 139.9664, 141.0212, 138.3651, 141.0212, 140.2292, 139.5874,
        141.1503, 140.1728])
new_beam_scores: tensor([[142.1503, 142.0212, 140.6924, 142.0212, 142.1503, 142.0212, 141.0997,
         142.0212, 140.9664, 142.0212, 139.3651, 142.0212, 141.2292, 140.5874,
         142.1503, 141.1728]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[142.1503, 142.0212, 140.6924, 142.0212, 142.1503, 142.0212, 141.0997,
         142.0212, 140.9664, 142.0212, 139.3651, 142.0212, 141.2292, 140.5874,
         142.1503, 141.1728]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  143
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([142.1503, 142.0212, 140.6924, 142.0212, 142.1503, 142.0212, 141.0997,
        142.0212, 140.9664, 142.0212, 139.3651, 142.0212, 141.2292, 140.5874,
        142.1503, 141.1728])
new_beam_scores: tensor([[143.1503, 143.0212, 141.6924, 143.0212, 143.1503, 143.0212, 142.0997,
         143.0212, 141.9664, 143.0212, 140.3651, 143.0212, 142.2292, 141.5874,
         143.1503, 142.1728]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[143.1503, 143.0212, 141.6924, 143.0212, 143.1503, 143.0212, 142.0997,
         143.0212, 141.9664, 143.0212, 140.3651, 143.0212, 142.2292, 141.5874,
         143.1503, 142.1728]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  144
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([143.1503, 143.0212, 141.6924, 143.0212, 143.1503, 143.0212, 142.0997,
        143.0212, 141.9664, 143.0212, 140.3651, 143.0212, 142.2292, 141.5874,
        143.1503, 142.1728])
new_beam_scores: tensor([[144.1503, 144.0212, 142.6924, 144.0212, 144.1503, 144.0212, 143.0997,
         144.0212, 142.9664, 144.0212, 141.3651, 144.0212, 143.2292, 142.5874,
         144.1503, 143.1728]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[144.1503, 144.0212, 142.6924, 144.0212, 144.1503, 144.0212, 143.0997,
         144.0212, 142.9664, 144.0212, 141.3651, 144.0212, 143.2292, 142.5874,
         144.1503, 143.1728]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  145
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([144.1503, 144.0212, 142.6924, 144.0212, 144.1503, 144.0212, 143.0997,
        144.0212, 142.9664, 144.0212, 141.3651, 144.0212, 143.2292, 142.5874,
        144.1503, 143.1728])
new_beam_scores: tensor([[145.1503, 145.0212, 143.6924, 145.0212, 145.1503, 145.0212, 144.0997,
         145.0212, 143.9664, 145.0212, 142.3651, 145.0212, 144.2292, 143.5874,
         145.1503, 144.1728]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[145.1503, 145.0212, 143.6924, 145.0212, 145.1503, 145.0212, 144.0997,
         145.0212, 143.9664, 145.0212, 142.3651, 145.0212, 144.2292, 143.5874,
         145.1503, 144.1728]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  146
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([145.1503, 145.0212, 143.6924, 145.0212, 145.1503, 145.0212, 144.0997,
        145.0212, 143.9664, 145.0212, 142.3651, 145.0212, 144.2292, 143.5874,
        145.1503, 144.1728])
new_beam_scores: tensor([[146.1503, 146.0212, 144.6924, 146.0212, 146.1503, 146.0212, 145.0997,
         146.0212, 144.9664, 146.0212, 143.3651, 146.0212, 145.2292, 144.5874,
         146.1503, 145.1728]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[146.1503, 146.0212, 144.6924, 146.0212, 146.1503, 146.0212, 145.0997,
         146.0212, 144.9664, 146.0212, 143.3651, 146.0212, 145.2292, 144.5874,
         146.1503, 145.1728]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  147
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([146.1503, 146.0212, 144.6924, 146.0212, 146.1503, 146.0212, 145.0997,
        146.0212, 144.9664, 146.0212, 143.3651, 146.0212, 145.2292, 144.5874,
        146.1503, 145.1728])
new_beam_scores: tensor([[147.1503, 147.0212, 145.6924, 147.0212, 147.1503, 147.0212, 146.0997,
         147.0212, 145.9664, 147.0212, 144.3651, 147.0212, 146.2292, 145.5874,
         147.1503, 146.1728]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[147.1503, 147.0212, 145.6924, 147.0212, 147.1503, 147.0212, 146.0997,
         147.0212, 145.9664, 147.0212, 144.3651, 147.0212, 146.2292, 145.5874,
         147.1503, 146.1728]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  148
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([147.1503, 147.0212, 145.6924, 147.0212, 147.1503, 147.0212, 146.0997,
        147.0212, 145.9664, 147.0212, 144.3651, 147.0212, 146.2292, 145.5874,
        147.1503, 146.1728])
new_beam_scores: tensor([[148.1503, 148.0212, 146.6924, 148.0212, 148.1503, 148.0212, 147.0997,
         148.0212, 146.9664, 148.0212, 145.3651, 148.0212, 147.2292, 146.5874,
         148.1503, 147.1728]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[148.1503, 148.0212, 146.6924, 148.0212, 148.1503, 148.0212, 147.0997,
         148.0212, 146.9664, 148.0212, 145.3651, 148.0212, 147.2292, 146.5874,
         148.1503, 147.1728]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  149
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([148.1503, 148.0212, 146.6924, 148.0212, 148.1503, 148.0212, 147.0997,
        148.0212, 146.9664, 148.0212, 145.3651, 148.0212, 147.2292, 146.5874,
        148.1503, 147.1728])
new_beam_scores: tensor([[149.1503, 149.0212, 147.6924, 149.0212, 149.1503, 149.0212, 148.0997,
         149.0212, 147.9664, 149.0212, 146.3651, 149.0212, 148.2292, 147.5874,
         149.1503, 148.1728]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[149.1503, 149.0212, 147.6924, 149.0212, 149.1503, 149.0212, 148.0997,
         149.0212, 147.9664, 149.0212, 146.3651, 149.0212, 148.2292, 147.5874,
         149.1503, 148.1728]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  150
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([149.1503, 149.0212, 147.6924, 149.0212, 149.1503, 149.0212, 148.0997,
        149.0212, 147.9664, 149.0212, 146.3651, 149.0212, 148.2292, 147.5874,
        149.1503, 148.1728])
new_beam_scores: tensor([[150.1503, 150.0212, 148.6924, 150.0212, 150.1503, 150.0212, 149.0997,
         150.0212, 148.9664, 150.0212, 147.3651, 150.0212, 149.2292, 148.5874,
         150.1503, 149.1728]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[150.1503, 150.0212, 148.6924, 150.0212, 150.1503, 150.0212, 149.0997,
         150.0212, 148.9664, 150.0212, 147.3651, 150.0212, 149.2292, 148.5874,
         150.1503, 149.1728]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  151
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9997, 0.9996, 0.9996, 0.9996, 0.9997, 0.9996, 0.9809, 0.9996, 0.9951,
         0.9996, 0.9935, 0.9996, 0.9880, 0.9997, 0.9997, 0.9996]])
scores: tensor([150.1503, 150.0212, 148.6924, 150.0212, 150.1503, 150.0212, 149.0997,
        150.0212, 148.9664, 150.0212, 147.3651, 150.0212, 149.2292, 148.5874,
        150.1503, 149.1728])
new_beam_scores: tensor([[151.1500, 151.0208, 149.6920, 151.0208, 151.1500, 151.0208, 150.0806,
         151.0208, 149.9615, 151.0208, 148.3586, 151.0208, 150.2172, 149.5871,
         151.1500, 150.1724]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[151.1500, 151.0208, 149.6920, 151.0208, 151.1500, 151.0208, 150.0806,
         151.0208, 149.9615, 151.0208, 148.3586, 151.0208, 150.2172, 149.5871,
         151.1500, 150.1724]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  152
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([151.1500, 151.0208, 149.6920, 151.0208, 151.1500, 151.0208, 150.0806,
        151.0208, 149.9615, 151.0208, 148.3586, 151.0208, 150.2172, 149.5871,
        151.1500, 150.1724])
new_beam_scores: tensor([[152.1500, 152.0208, 150.6920, 152.0208, 152.1500, 152.0208, 151.0806,
         152.0208, 150.9615, 152.0208, 149.3586, 152.0208, 151.2172, 150.5871,
         152.1500, 151.1724]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[152.1500, 152.0208, 150.6920, 152.0208, 152.1500, 152.0208, 151.0806,
         152.0208, 150.9615, 152.0208, 149.3586, 152.0208, 151.2172, 150.5871,
         152.1500, 151.1724]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  153
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([152.1500, 152.0208, 150.6920, 152.0208, 152.1500, 152.0208, 151.0806,
        152.0208, 150.9615, 152.0208, 149.3586, 152.0208, 151.2172, 150.5871,
        152.1500, 151.1724])
new_beam_scores: tensor([[153.1500, 153.0208, 151.6920, 153.0208, 153.1500, 153.0208, 152.0806,
         153.0208, 151.9615, 153.0208, 150.3586, 153.0208, 152.2172, 151.5871,
         153.1500, 152.1724]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[153.1500, 153.0208, 151.6920, 153.0208, 153.1500, 153.0208, 152.0806,
         153.0208, 151.9615, 153.0208, 150.3586, 153.0208, 152.2172, 151.5871,
         153.1500, 152.1724]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  154
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([153.1500, 153.0208, 151.6920, 153.0208, 153.1500, 153.0208, 152.0806,
        153.0208, 151.9615, 153.0208, 150.3586, 153.0208, 152.2172, 151.5871,
        153.1500, 152.1724])
new_beam_scores: tensor([[154.1500, 154.0208, 152.6920, 154.0208, 154.1500, 154.0208, 153.0806,
         154.0208, 152.9615, 154.0208, 151.3586, 154.0208, 153.2172, 152.5871,
         154.1500, 153.1724]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[154.1500, 154.0208, 152.6920, 154.0208, 154.1500, 154.0208, 153.0806,
         154.0208, 152.9615, 154.0208, 151.3586, 154.0208, 153.2172, 152.5871,
         154.1500, 153.1724]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  155
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [0],
        [2],
        [0],
        [2],
        [3],
        [2],
        [0],
        [3],
        [0],
        [0],
        [0],
        [2],
        [0],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.6709, 0.6410, 0.3148, 0.6410, 0.2868, 0.6410, 0.1842, 0.6410, 0.5724,
         0.0424, 0.4948, 0.3167, 0.3662, 0.6309, 0.2868, 0.9638]])
scores: tensor([154.1500, 154.0208, 152.6920, 154.0208, 154.1500, 154.0208, 153.0806,
        154.0208, 152.9615, 154.0208, 151.3586, 154.0208, 153.2172, 152.5871,
        154.1500, 153.1724])
new_beam_scores: tensor([[154.8209, 154.6617, 153.0068, 154.6617, 154.4368, 154.6617, 153.2648,
         154.6617, 153.5340, 154.0631, 151.8534, 154.3374, 153.5834, 153.2180,
         154.4368, 154.1362]])
new_beam seq: tensor([[2, 2, 0, 2, 0, 2, 3, 2, 0, 3, 0, 0, 0, 2, 0, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[154.8209, 154.6617, 153.0068, 154.6617, 154.4368, 154.6617, 153.2648,
         154.6617, 153.5340, 154.0631, 151.8534, 154.3374, 153.5834, 153.2180,
         154.4368, 154.1362]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([2, 2, 0, 2, 0, 2, 3, 2, 0, 3, 0, 0, 0, 2, 0, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 2, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [-0.0120, -1.4182,  0.4363,  0.0722],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  156
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [2],
        [0],
        [2],
        [0],
        [2],
        [0],
        [2],
        [2],
        [2],
        [2],
        [2],
        [0],
        [2],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.8668, 0.8737, 1.0000, 0.8737, 1.0000, 0.8737, 0.9995, 0.8737, 1.0000,
         0.9997, 1.0000, 1.0000, 1.0000, 0.8611, 1.0000, 0.6407]])
scores: tensor([154.8209, 154.6617, 153.0068, 154.6617, 154.4368, 154.6617, 153.2648,
        154.6617, 153.5340, 154.0631, 151.8534, 154.3374, 153.5834, 153.2180,
        154.4368, 154.1362])
new_beam_scores: tensor([[155.6877, 155.5354, 154.0068, 155.5354, 155.4368, 155.5354, 154.2644,
         155.5354, 154.5340, 155.0628, 152.8534, 155.3374, 154.5834, 154.0791,
         155.4368, 154.7769]])
new_beam seq: tensor([[0, 0, 2, 0, 2, 0, 2, 0, 2, 2, 2, 2, 2, 0, 2, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[155.6877, 155.5354, 154.0068, 155.5354, 155.4368, 155.5354, 154.2644,
         155.5354, 154.5340, 155.0628, 152.8534, 155.3374, 154.5834, 154.0791,
         155.4368, 154.7769]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 2, 0, 2, 0, 2, 0, 2, 2, 2, 2, 2, 0, 2, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 2, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [-0.0120, -1.4182,  0.4363,  0.0722],
        [ 0.6885, -1.7299,  0.6306, -0.2598],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([2528, 4])
Iteration :  157
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 2528])
size of new_beam_h_S: torch.Size([1, 2528, 4])
size of new_beam_logits: torch.Size([1, 2528, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9784, 0.9784, 0.9999, 0.9784, 0.9999, 0.9784, 1.0000, 0.9784, 0.9999,
         1.0000, 0.9999, 0.9999, 0.9999, 0.9795, 0.9999, 0.9635]])
scores: tensor([155.6877, 155.5354, 154.0068, 155.5354, 155.4368, 155.5354, 154.2644,
        155.5354, 154.5340, 155.0628, 152.8534, 155.3374, 154.5834, 154.0791,
        155.4368, 154.7769])
new_beam_scores: tensor([[156.6661, 156.5138, 155.0068, 156.5138, 156.4368, 156.5138, 155.2644,
         156.5138, 155.5339, 156.0628, 153.8533, 156.3374, 155.5833, 155.0586,
         156.4368, 155.7404]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 2528, 4])
new_beam_h_S size: torch.Size([1, 2528, 4])
sorted_scores: tensor([[156.6661, 156.5138, 155.0068, 156.5138, 156.4368, 156.5138, 155.2644,
         156.5138, 155.5339, 156.0628, 153.8533, 156.3374, 155.5833, 155.0586,
         156.4368, 155.7404]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 2528])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 1,  ..., 2, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.9065,  1.4511, -0.8763, -0.7222],
        [ 0.3480,  2.7429, -0.8713, -1.1953],
        [-0.0177,  2.9705, -0.7547, -1.1302],
        ...,
        [-0.0120, -1.4182,  0.4363,  0.0722],
        [ 0.6885, -1.7299,  0.6306, -0.2598],
        [ 0.7776, -0.8175, -1.2832,  0.4504]])
h_S size: torch.Size([2528, 4])
tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size expanded indices: torch.Size([1, 16, 158])
tensor([[[1, 1, 1,  ..., 2, 0, 0],
         [1, 1, 1,  ..., 2, 0, 0],
         [1, 1, 1,  ..., 0, 2, 0],
         ...,
         [1, 1, 1,  ..., 2, 0, 0],
         [1, 1, 1,  ..., 0, 2, 0],
         [1, 1, 1,  ..., 2, 0, 0]]], dtype=torch.int32)
final_scores: tensor([156.6661, 156.5138, 155.0068, 156.5138, 156.4368, 156.5138, 155.2644,
        156.5138, 155.5339, 156.0628, 153.8533, 156.3374, 155.5833, 155.0586,
        156.4368, 155.7404])
final_seq: tensor([[1, 1, 1,  ..., 2, 0, 0],
        [1, 1, 1,  ..., 2, 0, 0],
        [1, 1, 1,  ..., 0, 2, 0],
        ...,
        [1, 1, 1,  ..., 2, 0, 0],
        [1, 1, 1,  ..., 0, 2, 0],
        [1, 1, 1,  ..., 2, 0, 0]], dtype=torch.int32)
final_logits: tensor([[[ 0.9065,  1.4511, -0.8763, -0.7222],
         [ 0.3480,  2.7429, -0.8713, -1.1953],
         [-0.0177,  2.9705, -0.7547, -1.1302],
         ...,
         [ 0.1720, -1.4350,  0.2569, -0.0195],
         [ 0.7381, -1.7811,  0.5508, -0.2626],
         [ 0.8586, -1.0315, -1.2826,  0.4773]],

        [[ 0.9065,  1.4511, -0.8763, -0.7222],
         [ 0.3480,  2.7429, -0.8713, -1.1953],
         [-0.0177,  2.9705, -0.7547, -1.1302],
         ...,
         [ 0.1799, -1.4343,  0.2505, -0.0212],
         [ 0.7423, -1.7798,  0.5489, -0.2656],
         [ 0.8575, -1.0295, -1.2820,  0.4762]],

        [[ 0.9065,  1.4511, -0.8763, -0.7222],
         [ 0.3480,  2.7429, -0.8713, -1.1953],
         [-0.0177,  2.9705, -0.7547, -1.1302],
         ...,
         [ 0.1768, -1.4161,  0.2487, -0.0318],
         [ 0.1348, -1.7824,  1.4137, -0.3498],
         [ 1.2856, -1.3713, -1.2627,  0.3123]],

        ...,

        [[ 0.9065,  1.4511, -0.8763, -0.7222],
         [ 0.3480,  2.7429, -0.8713, -1.1953],
         [-0.0177,  2.9705, -0.7547, -1.1302],
         ...,
         [ 0.1770, -1.4196,  0.2431, -0.0246],
         [ 0.7322, -1.7752,  0.5498, -0.2613],
         [ 0.8582, -1.0230, -1.2837,  0.4715]],

        [[ 0.9065,  1.4511, -0.8763, -0.7222],
         [ 0.3480,  2.7429, -0.8713, -1.1953],
         [-0.0177,  2.9705, -0.7547, -1.1302],
         ...,
         [ 0.1720, -1.4350,  0.2569, -0.0195],
         [ 0.1319, -1.7937,  1.4228, -0.3452],
         [ 1.2817, -1.3784, -1.2609,  0.3220]],

        [[ 0.9065,  1.4511, -0.8763, -0.7222],
         [ 0.3480,  2.7429, -0.8713, -1.1953],
         [-0.0177,  2.9705, -0.7547, -1.1302],
         ...,
         [-0.0120, -1.4182,  0.4363,  0.0722],
         [ 0.6885, -1.7299,  0.6306, -0.2598],
         [ 0.7776, -0.8175, -1.2832,  0.4504]]])
Coords: 22
Sequence: GCGUCAGGUCGCGGAAGCAGGC
Len sequence: 22
Detected base pairs: [[  0 452]
 [ 20 429]
 [ 63 406]
 [ 83 384]
 [103 364]
 [125 341]
 [148 319]
 [171 297]
 [191 274]
 [211 234]]
Secondary structure: '((.(((((((().)))))))))'
Sequence length: 22
Number of residues: 22
Chain IDs: ['A' 'B']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
((.(((((((().)))))))))
Batch size:  (20, 20)
Number of nodes:  20
edge_index: tensor([[[ 0,  0,  0,  ..., 19, 19, 19],
         [ 1,  2,  3,  ..., 16, 17, 18]],

        [[ 0,  0,  0,  ..., 19, 19, 19],
         [ 1,  2,  3,  ..., 16, 17, 18]],

        [[ 0,  0,  0,  ..., 19, 19, 19],
         [ 1,  2,  3,  ..., 16, 17, 18]],

        ...,

        [[ 0,  0,  0,  ..., 19, 19, 19],
         [ 1,  2,  3,  ..., 16, 17, 18]],

        [[ 0,  0,  0,  ..., 19, 19, 19],
         [ 1,  2,  3,  ..., 16, 17, 18]],

        [[ 0,  0,  0,  ..., 19, 19, 19],
         [ 1,  2,  3,  ..., 16, 17, 18]]])
offset size: torch.Size([16, 1, 1])
offset: tensor([[[  0]],

        [[ 20]],

        [[ 40]],

        [[ 60]],

        [[ 80]],

        [[100]],

        [[120]],

        [[140]],

        [[160]],

        [[180]],

        [[200]],

        [[220]],

        [[240]],

        [[260]],

        [[280]],

        [[300]]])
Iteration :  0
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998,
         0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998]])
scores: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
new_beam_scores: tensor([[0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998,
         0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998,
         0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.4023,  1.0276,  1.8793, -1.3244],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  1
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998,
        0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998])
new_beam_scores: tensor([[1.9998, 1.9998, 1.9998, 1.9998, 1.9998, 1.9998, 1.9998, 1.9998, 1.9998,
         1.9998, 1.9998, 1.9998, 1.9998, 1.9998, 1.9998, 1.9998]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[1.9998, 1.9998, 1.9998, 1.9998, 1.9998, 1.9998, 1.9998, 1.9998, 1.9998,
         1.9998, 1.9998, 1.9998, 1.9998, 1.9998, 1.9998, 1.9998]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.4023,  1.0276,  1.8793, -1.3244],
        [ 2.5718,  0.8657, -0.9923, -1.0560],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  2
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9882, 0.9882, 0.9882, 0.9882, 0.9882, 0.9882, 0.9882, 0.9882, 0.9882,
         0.9882, 0.9882, 0.9882, 0.9882, 0.9882, 0.9882, 0.9882]])
scores: tensor([1.9998, 1.9998, 1.9998, 1.9998, 1.9998, 1.9998, 1.9998, 1.9998, 1.9998,
        1.9998, 1.9998, 1.9998, 1.9998, 1.9998, 1.9998, 1.9998])
new_beam_scores: tensor([[2.9880, 2.9880, 2.9880, 2.9880, 2.9880, 2.9880, 2.9880, 2.9880, 2.9880,
         2.9880, 2.9880, 2.9880, 2.9880, 2.9880, 2.9880, 2.9880]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[2.9880, 2.9880, 2.9880, 2.9880, 2.9880, 2.9880, 2.9880, 2.9880, 2.9880,
         2.9880, 2.9880, 2.9880, 2.9880, 2.9880, 2.9880, 2.9880]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.4023,  1.0276,  1.8793, -1.3244],
        [ 2.5718,  0.8657, -0.9923, -1.0560],
        [-1.8177, -1.6456,  1.5243,  1.9669],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  3
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([2.9880, 2.9880, 2.9880, 2.9880, 2.9880, 2.9880, 2.9880, 2.9880, 2.9880,
        2.9880, 2.9880, 2.9880, 2.9880, 2.9880, 2.9880, 2.9880])
new_beam_scores: tensor([[3.9880, 3.9880, 3.9880, 3.9880, 3.9880, 3.9880, 3.9880, 3.9880, 3.9880,
         3.9880, 3.9880, 3.9880, 3.9880, 3.9880, 3.9880, 3.9880]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[3.9880, 3.9880, 3.9880, 3.9880, 3.9880, 3.9880, 3.9880, 3.9880, 3.9880,
         3.9880, 3.9880, 3.9880, 3.9880, 3.9880, 3.9880, 3.9880]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.4023,  1.0276,  1.8793, -1.3244],
        [ 2.5718,  0.8657, -0.9923, -1.0560],
        [-1.8177, -1.6456,  1.5243,  1.9669],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  4
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([3.9880, 3.9880, 3.9880, 3.9880, 3.9880, 3.9880, 3.9880, 3.9880, 3.9880,
        3.9880, 3.9880, 3.9880, 3.9880, 3.9880, 3.9880, 3.9880])
new_beam_scores: tensor([[4.9880, 4.9880, 4.9880, 4.9880, 4.9880, 4.9880, 4.9880, 4.9880, 4.9880,
         4.9880, 4.9880, 4.9880, 4.9880, 4.9880, 4.9880, 4.9880]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[4.9880, 4.9880, 4.9880, 4.9880, 4.9880, 4.9880, 4.9880, 4.9880, 4.9880,
         4.9880, 4.9880, 4.9880, 4.9880, 4.9880, 4.9880, 4.9880]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.4023,  1.0276,  1.8793, -1.3244],
        [ 2.5718,  0.8657, -0.9923, -1.0560],
        [-1.8177, -1.6456,  1.5243,  1.9669],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  5
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9908, 0.9908, 0.9908, 0.9908, 0.9908, 0.9908, 0.9908, 0.9908, 0.9908,
         0.9908, 0.9908, 0.9908, 0.9908, 0.9908, 0.9908, 0.9908]])
scores: tensor([4.9880, 4.9880, 4.9880, 4.9880, 4.9880, 4.9880, 4.9880, 4.9880, 4.9880,
        4.9880, 4.9880, 4.9880, 4.9880, 4.9880, 4.9880, 4.9880])
new_beam_scores: tensor([[5.9787, 5.9787, 5.9787, 5.9787, 5.9787, 5.9787, 5.9787, 5.9787, 5.9787,
         5.9787, 5.9787, 5.9787, 5.9787, 5.9787, 5.9787, 5.9787]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[5.9787, 5.9787, 5.9787, 5.9787, 5.9787, 5.9787, 5.9787, 5.9787, 5.9787,
         5.9787, 5.9787, 5.9787, 5.9787, 5.9787, 5.9787, 5.9787]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 3, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.4023,  1.0276,  1.8793, -1.3244],
        [ 2.5718,  0.8657, -0.9923, -1.0560],
        [-1.8177, -1.6456,  1.5243,  1.9669],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  6
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([5.9787, 5.9787, 5.9787, 5.9787, 5.9787, 5.9787, 5.9787, 5.9787, 5.9787,
        5.9787, 5.9787, 5.9787, 5.9787, 5.9787, 5.9787, 5.9787])
new_beam_scores: tensor([[6.9787, 6.9787, 6.9787, 6.9787, 6.9787, 6.9787, 6.9787, 6.9787, 6.9787,
         6.9787, 6.9787, 6.9787, 6.9787, 6.9787, 6.9787, 6.9787]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[6.9787, 6.9787, 6.9787, 6.9787, 6.9787, 6.9787, 6.9787, 6.9787, 6.9787,
         6.9787, 6.9787, 6.9787, 6.9787, 6.9787, 6.9787, 6.9787]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 3, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.4023,  1.0276,  1.8793, -1.3244],
        [ 2.5718,  0.8657, -0.9923, -1.0560],
        [-1.8177, -1.6456,  1.5243,  1.9669],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  7
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([6.9787, 6.9787, 6.9787, 6.9787, 6.9787, 6.9787, 6.9787, 6.9787, 6.9787,
        6.9787, 6.9787, 6.9787, 6.9787, 6.9787, 6.9787, 6.9787])
new_beam_scores: tensor([[7.9787, 7.9787, 7.9787, 7.9787, 7.9787, 7.9787, 7.9787, 7.9787, 7.9787,
         7.9787, 7.9787, 7.9787, 7.9787, 7.9787, 7.9787, 7.9787]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[7.9787, 7.9787, 7.9787, 7.9787, 7.9787, 7.9787, 7.9787, 7.9787, 7.9787,
         7.9787, 7.9787, 7.9787, 7.9787, 7.9787, 7.9787, 7.9787]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 3, 1, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.4023,  1.0276,  1.8793, -1.3244],
        [ 2.5718,  0.8657, -0.9923, -1.0560],
        [-1.8177, -1.6456,  1.5243,  1.9669],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  8
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([7.9787, 7.9787, 7.9787, 7.9787, 7.9787, 7.9787, 7.9787, 7.9787, 7.9787,
        7.9787, 7.9787, 7.9787, 7.9787, 7.9787, 7.9787, 7.9787])
new_beam_scores: tensor([[8.9787, 8.9787, 8.9787, 8.9787, 8.9787, 8.9787, 8.9787, 8.9787, 8.9787,
         8.9787, 8.9787, 8.9787, 8.9787, 8.9787, 8.9787, 8.9787]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[8.9787, 8.9787, 8.9787, 8.9787, 8.9787, 8.9787, 8.9787, 8.9787, 8.9787,
         8.9787, 8.9787, 8.9787, 8.9787, 8.9787, 8.9787, 8.9787]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 3, 1, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.4023,  1.0276,  1.8793, -1.3244],
        [ 2.5718,  0.8657, -0.9923, -1.0560],
        [-1.8177, -1.6456,  1.5243,  1.9669],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  9
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([8.9787, 8.9787, 8.9787, 8.9787, 8.9787, 8.9787, 8.9787, 8.9787, 8.9787,
        8.9787, 8.9787, 8.9787, 8.9787, 8.9787, 8.9787, 8.9787])
new_beam_scores: tensor([[9.9787, 9.9787, 9.9787, 9.9787, 9.9787, 9.9787, 9.9787, 9.9787, 9.9787,
         9.9787, 9.9787, 9.9787, 9.9787, 9.9787, 9.9787, 9.9787]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[9.9787, 9.9787, 9.9787, 9.9787, 9.9787, 9.9787, 9.9787, 9.9787, 9.9787,
         9.9787, 9.9787, 9.9787, 9.9787, 9.9787, 9.9787, 9.9787]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.4023,  1.0276,  1.8793, -1.3244],
        [ 2.5718,  0.8657, -0.9923, -1.0560],
        [-1.8177, -1.6456,  1.5243,  1.9669],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  10
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([9.9787, 9.9787, 9.9787, 9.9787, 9.9787, 9.9787, 9.9787, 9.9787, 9.9787,
        9.9787, 9.9787, 9.9787, 9.9787, 9.9787, 9.9787, 9.9787])
new_beam_scores: tensor([[10.9787, 10.9787, 10.9787, 10.9787, 10.9787, 10.9787, 10.9787, 10.9787,
         10.9787, 10.9787, 10.9787, 10.9787, 10.9787, 10.9787, 10.9787, 10.9787]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[10.9787, 10.9787, 10.9787, 10.9787, 10.9787, 10.9787, 10.9787, 10.9787,
         10.9787, 10.9787, 10.9787, 10.9787, 10.9787, 10.9787, 10.9787, 10.9787]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.4023,  1.0276,  1.8793, -1.3244],
        [ 2.5718,  0.8657, -0.9923, -1.0560],
        [-1.8177, -1.6456,  1.5243,  1.9669],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  11
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([10.9787, 10.9787, 10.9787, 10.9787, 10.9787, 10.9787, 10.9787, 10.9787,
        10.9787, 10.9787, 10.9787, 10.9787, 10.9787, 10.9787, 10.9787, 10.9787])
new_beam_scores: tensor([[11.9787, 11.9787, 11.9787, 11.9787, 11.9787, 11.9787, 11.9787, 11.9787,
         11.9787, 11.9787, 11.9787, 11.9787, 11.9787, 11.9787, 11.9787, 11.9787]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[11.9787, 11.9787, 11.9787, 11.9787, 11.9787, 11.9787, 11.9787, 11.9787,
         11.9787, 11.9787, 11.9787, 11.9787, 11.9787, 11.9787, 11.9787, 11.9787]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.4023,  1.0276,  1.8793, -1.3244],
        [ 2.5718,  0.8657, -0.9923, -1.0560],
        [-1.8177, -1.6456,  1.5243,  1.9669],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  12
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([11.9787, 11.9787, 11.9787, 11.9787, 11.9787, 11.9787, 11.9787, 11.9787,
        11.9787, 11.9787, 11.9787, 11.9787, 11.9787, 11.9787, 11.9787, 11.9787])
new_beam_scores: tensor([[12.9787, 12.9787, 12.9787, 12.9787, 12.9787, 12.9787, 12.9787, 12.9787,
         12.9787, 12.9787, 12.9787, 12.9787, 12.9787, 12.9787, 12.9787, 12.9787]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[12.9787, 12.9787, 12.9787, 12.9787, 12.9787, 12.9787, 12.9787, 12.9787,
         12.9787, 12.9787, 12.9787, 12.9787, 12.9787, 12.9787, 12.9787, 12.9787]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.4023,  1.0276,  1.8793, -1.3244],
        [ 2.5718,  0.8657, -0.9923, -1.0560],
        [-1.8177, -1.6456,  1.5243,  1.9669],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  13
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([12.9787, 12.9787, 12.9787, 12.9787, 12.9787, 12.9787, 12.9787, 12.9787,
        12.9787, 12.9787, 12.9787, 12.9787, 12.9787, 12.9787, 12.9787, 12.9787])
new_beam_scores: tensor([[13.9787, 13.9787, 13.9787, 13.9787, 13.9787, 13.9787, 13.9787, 13.9787,
         13.9787, 13.9787, 13.9787, 13.9787, 13.9787, 13.9787, 13.9787, 13.9787]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[13.9787, 13.9787, 13.9787, 13.9787, 13.9787, 13.9787, 13.9787, 13.9787,
         13.9787, 13.9787, 13.9787, 13.9787, 13.9787, 13.9787, 13.9787, 13.9787]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.4023,  1.0276,  1.8793, -1.3244],
        [ 2.5718,  0.8657, -0.9923, -1.0560],
        [-1.8177, -1.6456,  1.5243,  1.9669],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  14
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([13.9787, 13.9787, 13.9787, 13.9787, 13.9787, 13.9787, 13.9787, 13.9787,
        13.9787, 13.9787, 13.9787, 13.9787, 13.9787, 13.9787, 13.9787, 13.9787])
new_beam_scores: tensor([[14.9787, 14.9787, 14.9787, 14.9787, 14.9787, 14.9787, 14.9787, 14.9787,
         14.9787, 14.9787, 14.9787, 14.9787, 14.9787, 14.9787, 14.9787, 14.9787]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[14.9787, 14.9787, 14.9787, 14.9787, 14.9787, 14.9787, 14.9787, 14.9787,
         14.9787, 14.9787, 14.9787, 14.9787, 14.9787, 14.9787, 14.9787, 14.9787]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 1, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 1, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 0,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 1, 0, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.4023,  1.0276,  1.8793, -1.3244],
        [ 2.5718,  0.8657, -0.9923, -1.0560],
        [-1.8177, -1.6456,  1.5243,  1.9669],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  15
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([14.9787, 14.9787, 14.9787, 14.9787, 14.9787, 14.9787, 14.9787, 14.9787,
        14.9787, 14.9787, 14.9787, 14.9787, 14.9787, 14.9787, 14.9787, 14.9787])
new_beam_scores: tensor([[15.9787, 15.9787, 15.9787, 15.9787, 15.9787, 15.9787, 15.9787, 15.9787,
         15.9787, 15.9787, 15.9787, 15.9787, 15.9787, 15.9787, 15.9787, 15.9787]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[15.9787, 15.9787, 15.9787, 15.9787, 15.9787, 15.9787, 15.9787, 15.9787,
         15.9787, 15.9787, 15.9787, 15.9787, 15.9787, 15.9787, 15.9787, 15.9787]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 1, 3, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 1, 3, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 1, 3, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 1, 3, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 1, 3, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 1, 3, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.4023,  1.0276,  1.8793, -1.3244],
        [ 2.5718,  0.8657, -0.9923, -1.0560],
        [-1.8177, -1.6456,  1.5243,  1.9669],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  16
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([15.9787, 15.9787, 15.9787, 15.9787, 15.9787, 15.9787, 15.9787, 15.9787,
        15.9787, 15.9787, 15.9787, 15.9787, 15.9787, 15.9787, 15.9787, 15.9787])
new_beam_scores: tensor([[16.9787, 16.9787, 16.9787, 16.9787, 16.9787, 16.9787, 16.9787, 16.9787,
         16.9787, 16.9787, 16.9787, 16.9787, 16.9787, 16.9787, 16.9787, 16.9787]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[16.9787, 16.9787, 16.9787, 16.9787, 16.9787, 16.9787, 16.9787, 16.9787,
         16.9787, 16.9787, 16.9787, 16.9787, 16.9787, 16.9787, 16.9787, 16.9787]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 1, 3, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 1, 3, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 1, 3, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 1, 3, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
        0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 0, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 0, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 1, 3, 0, 0, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 1, 3, 0, 0, 0, 0], dtype=torch.int32)
logits: tensor([[-1.4023,  1.0276,  1.8793, -1.3244],
        [ 2.5718,  0.8657, -0.9923, -1.0560],
        [-1.8177, -1.6456,  1.5243,  1.9669],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  17
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([16.9787, 16.9787, 16.9787, 16.9787, 16.9787, 16.9787, 16.9787, 16.9787,
        16.9787, 16.9787, 16.9787, 16.9787, 16.9787, 16.9787, 16.9787, 16.9787])
new_beam_scores: tensor([[17.9787, 17.9787, 17.9787, 17.9787, 17.9787, 17.9787, 17.9787, 17.9787,
         17.9787, 17.9787, 17.9787, 17.9787, 17.9787, 17.9787, 17.9787, 17.9787]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[17.9787, 17.9787, 17.9787, 17.9787, 17.9787, 17.9787, 17.9787, 17.9787,
         17.9787, 17.9787, 17.9787, 17.9787, 17.9787, 17.9787, 17.9787, 17.9787]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 1, 3, 0, 1, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
        0, 1, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 1, 3, 0, 1, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
        0, 1, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 0, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 0, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 0, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 1, 3, 0, 1, 0, 0], dtype=torch.int32)
logits: tensor([[-1.4023,  1.0276,  1.8793, -1.3244],
        [ 2.5718,  0.8657, -0.9923, -1.0560],
        [-1.8177, -1.6456,  1.5243,  1.9669],
        ...,
        [-0.8105,  3.3794, -0.9963, -1.2256],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  18
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([17.9787, 17.9787, 17.9787, 17.9787, 17.9787, 17.9787, 17.9787, 17.9787,
        17.9787, 17.9787, 17.9787, 17.9787, 17.9787, 17.9787, 17.9787, 17.9787])
new_beam_scores: tensor([[18.9787, 18.9787, 18.9787, 18.9787, 18.9787, 18.9787, 18.9787, 18.9787,
         18.9787, 18.9787, 18.9787, 18.9787, 18.9787, 18.9787, 18.9787, 18.9787]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[18.9787, 18.9787, 18.9787, 18.9787, 18.9787, 18.9787, 18.9787, 18.9787,
         18.9787, 18.9787, 18.9787, 18.9787, 18.9787, 18.9787, 18.9787, 18.9787]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 1, 3, 0, 1, 1, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
        0, 1, 1, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 1, 3, 0, 1, 1, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
        0, 1, 1, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 0,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 0, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 0, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 0, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 1, 3, 0, 1, 1, 0], dtype=torch.int32)
logits: tensor([[-1.4023,  1.0276,  1.8793, -1.3244],
        [ 2.5718,  0.8657, -0.9923, -1.0560],
        [-1.8177, -1.6456,  1.5243,  1.9669],
        ...,
        [-0.8105,  3.3794, -0.9963, -1.2256],
        [-1.4723,  3.2520, -1.0812, -1.4428],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([320, 4])
Iteration :  19
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 320])
size of new_beam_h_S: torch.Size([1, 320, 4])
size of new_beam_logits: torch.Size([1, 320, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([18.9787, 18.9787, 18.9787, 18.9787, 18.9787, 18.9787, 18.9787, 18.9787,
        18.9787, 18.9787, 18.9787, 18.9787, 18.9787, 18.9787, 18.9787, 18.9787])
new_beam_scores: tensor([[19.9787, 19.9787, 19.9787, 19.9787, 19.9787, 19.9787, 19.9787, 19.9787,
         19.9787, 19.9787, 19.9787, 19.9787, 19.9787, 19.9787, 19.9787, 19.9787]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 320, 4])
new_beam_h_S size: torch.Size([1, 320, 4])
sorted_scores: tensor([[19.9787, 19.9787, 19.9787, 19.9787, 19.9787, 19.9787, 19.9787, 19.9787,
         19.9787, 19.9787, 19.9787, 19.9787, 19.9787, 19.9787, 19.9787, 19.9787]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 320])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 1, 3, 0, 1, 1, 2, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
        0, 1, 1, 2, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 1, 3, 0, 1, 1, 2, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
        0, 1, 1, 2, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2,
        2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2, 2, 0, 3, 1,
        0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2, 2, 0, 3, 1, 0, 1, 1, 2,
        2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2, 2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1,
        1, 0, 1, 3, 0, 1, 1, 2], dtype=torch.int32)
logits: tensor([[-1.4023e+00,  1.0276e+00,  1.8793e+00, -1.3244e+00],
        [ 2.5718e+00,  8.6572e-01, -9.9229e-01, -1.0560e+00],
        [-1.8177e+00, -1.6456e+00,  1.5243e+00,  1.9669e+00],
        ...,
        [-8.1054e-01,  3.3794e+00, -9.9626e-01, -1.2256e+00],
        [-1.4723e+00,  3.2520e+00, -1.0812e+00, -1.4428e+00],
        [-1.7155e+00, -1.1300e-03,  2.1276e+00, -1.3570e+00]])
h_S size: torch.Size([320, 4])
tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size expanded indices: torch.Size([1, 16, 20])
tensor([[[2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
         [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
         [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
         [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
         [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
         [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
         [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
         [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
         [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
         [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
         [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
         [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
         [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
         [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
         [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
         [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2]]],
       dtype=torch.int32)
final_scores: tensor([19.9787, 19.9787, 19.9787, 19.9787, 19.9787, 19.9787, 19.9787, 19.9787,
        19.9787, 19.9787, 19.9787, 19.9787, 19.9787, 19.9787, 19.9787, 19.9787])
final_seq: tensor([[2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
        [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
        [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
        [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
        [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
        [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
        [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
        [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
        [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
        [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
        [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
        [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
        [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
        [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
        [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2],
        [2, 0, 3, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 0, 1, 3, 0, 1, 1, 2]],
       dtype=torch.int32)
final_logits: tensor([[[-1.4023e+00,  1.0276e+00,  1.8793e+00, -1.3244e+00],
         [ 2.5718e+00,  8.6572e-01, -9.9229e-01, -1.0560e+00],
         [-1.8177e+00, -1.6456e+00,  1.5243e+00,  1.9669e+00],
         ...,
         [-8.1054e-01,  3.3794e+00, -9.9626e-01, -1.2256e+00],
         [-1.4723e+00,  3.2520e+00, -1.0812e+00, -1.4428e+00],
         [-1.7155e+00, -1.1300e-03,  2.1276e+00, -1.3570e+00]],

        [[-1.4023e+00,  1.0276e+00,  1.8793e+00, -1.3244e+00],
         [ 2.5718e+00,  8.6572e-01, -9.9229e-01, -1.0560e+00],
         [-1.8177e+00, -1.6456e+00,  1.5243e+00,  1.9669e+00],
         ...,
         [-8.1054e-01,  3.3794e+00, -9.9626e-01, -1.2256e+00],
         [-1.4723e+00,  3.2520e+00, -1.0812e+00, -1.4428e+00],
         [-1.7155e+00, -1.1300e-03,  2.1276e+00, -1.3570e+00]],

        [[-1.4023e+00,  1.0276e+00,  1.8793e+00, -1.3244e+00],
         [ 2.5718e+00,  8.6572e-01, -9.9229e-01, -1.0560e+00],
         [-1.8177e+00, -1.6456e+00,  1.5243e+00,  1.9669e+00],
         ...,
         [-8.1054e-01,  3.3794e+00, -9.9626e-01, -1.2256e+00],
         [-1.4723e+00,  3.2520e+00, -1.0812e+00, -1.4428e+00],
         [-1.7155e+00, -1.1300e-03,  2.1276e+00, -1.3570e+00]],

        ...,

        [[-1.4023e+00,  1.0276e+00,  1.8793e+00, -1.3244e+00],
         [ 2.5718e+00,  8.6572e-01, -9.9229e-01, -1.0560e+00],
         [-1.8177e+00, -1.6456e+00,  1.5243e+00,  1.9669e+00],
         ...,
         [-8.1054e-01,  3.3794e+00, -9.9626e-01, -1.2256e+00],
         [-1.4723e+00,  3.2520e+00, -1.0812e+00, -1.4428e+00],
         [-1.7155e+00, -1.1300e-03,  2.1276e+00, -1.3570e+00]],

        [[-1.4023e+00,  1.0276e+00,  1.8793e+00, -1.3244e+00],
         [ 2.5718e+00,  8.6572e-01, -9.9229e-01, -1.0560e+00],
         [-1.8177e+00, -1.6456e+00,  1.5243e+00,  1.9669e+00],
         ...,
         [-8.1054e-01,  3.3794e+00, -9.9626e-01, -1.2256e+00],
         [-1.4723e+00,  3.2520e+00, -1.0812e+00, -1.4428e+00],
         [-1.7155e+00, -1.1300e-03,  2.1276e+00, -1.3570e+00]],

        [[-1.4023e+00,  1.0276e+00,  1.8793e+00, -1.3244e+00],
         [ 2.5718e+00,  8.6572e-01, -9.9229e-01, -1.0560e+00],
         [-1.8177e+00, -1.6456e+00,  1.5243e+00,  1.9669e+00],
         ...,
         [-8.1054e-01,  3.3794e+00, -9.9626e-01, -1.2256e+00],
         [-1.4723e+00,  3.2520e+00, -1.0812e+00, -1.4428e+00],
         [-1.7155e+00, -1.1300e-03,  2.1276e+00, -1.3570e+00]]])
Coords: 27
Sequence: GCGCGGCACCGUCCGCGGAACAAACGG
Len sequence: 27
Detected base pairs: [[ 23 340]
 [ 43 320]
 [ 66 297]
 [ 86 277]
 [109 257]
 [174 559]
 [194 536]
 [214 516]]
Secondary structure: '.(((((..[[[.))))).......]]]'
Sequence length: 27
Number of residues: 27
Chain IDs: ['A']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
.(((((......)))))..........
Batch size:  (27, 27)
Number of nodes:  27
edge_index: tensor([[[ 0,  0,  0,  ..., 26, 26, 26],
         [ 1,  2,  3,  ..., 23, 24, 25]],

        [[ 0,  0,  0,  ..., 26, 26, 26],
         [ 1,  2,  3,  ..., 23, 24, 25]],

        [[ 0,  0,  0,  ..., 26, 26, 26],
         [ 1,  2,  3,  ..., 23, 24, 25]],

        ...,

        [[ 0,  0,  0,  ..., 26, 26, 26],
         [ 1,  2,  3,  ..., 23, 24, 25]],

        [[ 0,  0,  0,  ..., 26, 26, 26],
         [ 1,  2,  3,  ..., 23, 24, 25]],

        [[ 0,  0,  0,  ..., 26, 26, 26],
         [ 1,  2,  3,  ..., 23, 24, 25]]])
offset size: torch.Size([16, 1, 1])
offset: tensor([[[  0]],

        [[ 27]],

        [[ 54]],

        [[ 81]],

        [[108]],

        [[135]],

        [[162]],

        [[189]],

        [[216]],

        [[243]],

        [[270]],

        [[297]],

        [[324]],

        [[351]],

        [[378]],

        [[405]]])
Iteration :  0
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
new_beam_scores: tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  1
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
new_beam_scores: tensor([[2.0000, 2.0000, 2.0000, 2.0000, 2.0000, 2.0000, 2.0000, 2.0000, 2.0000,
         2.0000, 2.0000, 2.0000, 2.0000, 2.0000, 2.0000, 2.0000]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[2.0000, 2.0000, 2.0000, 2.0000, 2.0000, 2.0000, 2.0000, 2.0000, 2.0000,
         2.0000, 2.0000, 2.0000, 2.0000, 2.0000, 2.0000, 2.0000]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  2
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999,
         0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999]])
scores: tensor([2.0000, 2.0000, 2.0000, 2.0000, 2.0000, 2.0000, 2.0000, 2.0000, 2.0000,
        2.0000, 2.0000, 2.0000, 2.0000, 2.0000, 2.0000, 2.0000])
new_beam_scores: tensor([[2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999,
         2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999,
         2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  3
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999,
        2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999, 2.9999])
new_beam_scores: tensor([[3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999,
         3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999,
         3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  4
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999,
        3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999, 3.9999])
new_beam_scores: tensor([[4.9999, 4.9999, 4.9999, 4.9999, 4.9999, 4.9999, 4.9999, 4.9999, 4.9999,
         4.9999, 4.9999, 4.9999, 4.9999, 4.9999, 4.9999, 4.9999]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[4.9999, 4.9999, 4.9999, 4.9999, 4.9999, 4.9999, 4.9999, 4.9999, 4.9999,
         4.9999, 4.9999, 4.9999, 4.9999, 4.9999, 4.9999, 4.9999]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  5
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([4.9999, 4.9999, 4.9999, 4.9999, 4.9999, 4.9999, 4.9999, 4.9999, 4.9999,
        4.9999, 4.9999, 4.9999, 4.9999, 4.9999, 4.9999, 4.9999])
new_beam_scores: tensor([[5.9999, 5.9999, 5.9999, 5.9999, 5.9999, 5.9999, 5.9999, 5.9999, 5.9999,
         5.9999, 5.9999, 5.9999, 5.9999, 5.9999, 5.9999, 5.9999]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[5.9999, 5.9999, 5.9999, 5.9999, 5.9999, 5.9999, 5.9999, 5.9999, 5.9999,
         5.9999, 5.9999, 5.9999, 5.9999, 5.9999, 5.9999, 5.9999]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  6
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9964, 0.9964, 0.9964, 0.9964, 0.9964, 0.9964, 0.9964, 0.9964, 0.9964,
         0.9964, 0.9964, 0.9964, 0.9964, 0.9964, 0.9964, 0.9964]])
scores: tensor([5.9999, 5.9999, 5.9999, 5.9999, 5.9999, 5.9999, 5.9999, 5.9999, 5.9999,
        5.9999, 5.9999, 5.9999, 5.9999, 5.9999, 5.9999, 5.9999])
new_beam_scores: tensor([[6.9963, 6.9963, 6.9963, 6.9963, 6.9963, 6.9963, 6.9963, 6.9963, 6.9963,
         6.9963, 6.9963, 6.9963, 6.9963, 6.9963, 6.9963, 6.9963]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[6.9963, 6.9963, 6.9963, 6.9963, 6.9963, 6.9963, 6.9963, 6.9963, 6.9963,
         6.9963, 6.9963, 6.9963, 6.9963, 6.9963, 6.9963, 6.9963]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  7
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([6.9963, 6.9963, 6.9963, 6.9963, 6.9963, 6.9963, 6.9963, 6.9963, 6.9963,
        6.9963, 6.9963, 6.9963, 6.9963, 6.9963, 6.9963, 6.9963])
new_beam_scores: tensor([[7.9963, 7.9963, 7.9963, 7.9963, 7.9963, 7.9963, 7.9963, 7.9963, 7.9963,
         7.9963, 7.9963, 7.9963, 7.9963, 7.9963, 7.9963, 7.9963]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[7.9963, 7.9963, 7.9963, 7.9963, 7.9963, 7.9963, 7.9963, 7.9963, 7.9963,
         7.9963, 7.9963, 7.9963, 7.9963, 7.9963, 7.9963, 7.9963]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  8
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9900, 0.9900, 0.9900, 0.9900, 0.9900, 0.9900, 0.9900, 0.9900, 0.9900,
         0.9900, 0.9900, 0.9900, 0.9900, 0.9900, 0.9900, 0.9900]])
scores: tensor([7.9963, 7.9963, 7.9963, 7.9963, 7.9963, 7.9963, 7.9963, 7.9963, 7.9963,
        7.9963, 7.9963, 7.9963, 7.9963, 7.9963, 7.9963, 7.9963])
new_beam_scores: tensor([[8.9863, 8.9863, 8.9863, 8.9863, 8.9863, 8.9863, 8.9863, 8.9863, 8.9863,
         8.9863, 8.9863, 8.9863, 8.9863, 8.9863, 8.9863, 8.9863]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[8.9863, 8.9863, 8.9863, 8.9863, 8.9863, 8.9863, 8.9863, 8.9863, 8.9863,
         8.9863, 8.9863, 8.9863, 8.9863, 8.9863, 8.9863, 8.9863]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 1, 1, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  9
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([8.9863, 8.9863, 8.9863, 8.9863, 8.9863, 8.9863, 8.9863, 8.9863, 8.9863,
        8.9863, 8.9863, 8.9863, 8.9863, 8.9863, 8.9863, 8.9863])
new_beam_scores: tensor([[9.9863, 9.9863, 9.9863, 9.9863, 9.9863, 9.9863, 9.9863, 9.9863, 9.9863,
         9.9863, 9.9863, 9.9863, 9.9863, 9.9863, 9.9863, 9.9863]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[9.9863, 9.9863, 9.9863, 9.9863, 9.9863, 9.9863, 9.9863, 9.9863, 9.9863,
         9.9863, 9.9863, 9.9863, 9.9863, 9.9863, 9.9863, 9.9863]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  10
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([9.9863, 9.9863, 9.9863, 9.9863, 9.9863, 9.9863, 9.9863, 9.9863, 9.9863,
        9.9863, 9.9863, 9.9863, 9.9863, 9.9863, 9.9863, 9.9863])
new_beam_scores: tensor([[10.9863, 10.9863, 10.9863, 10.9863, 10.9863, 10.9863, 10.9863, 10.9863,
         10.9863, 10.9863, 10.9863, 10.9863, 10.9863, 10.9863, 10.9863, 10.9863]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[10.9863, 10.9863, 10.9863, 10.9863, 10.9863, 10.9863, 10.9863, 10.9863,
         10.9863, 10.9863, 10.9863, 10.9863, 10.9863, 10.9863, 10.9863, 10.9863]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  11
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.8724, 0.8724, 0.8724, 0.8724, 0.8724, 0.8724, 0.8724, 0.8724, 0.8724,
         0.8724, 0.8724, 0.8724, 0.8724, 0.8724, 0.8724, 0.1273]])
scores: tensor([10.9863, 10.9863, 10.9863, 10.9863, 10.9863, 10.9863, 10.9863, 10.9863,
        10.9863, 10.9863, 10.9863, 10.9863, 10.9863, 10.9863, 10.9863, 10.9863])
new_beam_scores: tensor([[11.8587, 11.8587, 11.8587, 11.8587, 11.8587, 11.8587, 11.8587, 11.8587,
         11.8587, 11.8587, 11.8587, 11.8587, 11.8587, 11.8587, 11.8587, 11.1136]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[11.8587, 11.8587, 11.8587, 11.8587, 11.8587, 11.8587, 11.8587, 11.8587,
         11.8587, 11.8587, 11.8587, 11.8587, 11.8587, 11.8587, 11.8587, 11.1136]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  12
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([11.8587, 11.8587, 11.8587, 11.8587, 11.8587, 11.8587, 11.8587, 11.8587,
        11.8587, 11.8587, 11.8587, 11.8587, 11.8587, 11.8587, 11.8587, 11.1136])
new_beam_scores: tensor([[12.8587, 12.8587, 12.8587, 12.8587, 12.8587, 12.8587, 12.8587, 12.8587,
         12.8587, 12.8587, 12.8587, 12.8587, 12.8587, 12.8587, 12.8587, 12.1136]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[12.8587, 12.8587, 12.8587, 12.8587, 12.8587, 12.8587, 12.8587, 12.8587,
         12.8587, 12.8587, 12.8587, 12.8587, 12.8587, 12.8587, 12.8587, 12.1136]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  13
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([12.8587, 12.8587, 12.8587, 12.8587, 12.8587, 12.8587, 12.8587, 12.8587,
        12.8587, 12.8587, 12.8587, 12.8587, 12.8587, 12.8587, 12.8587, 12.1136])
new_beam_scores: tensor([[13.8587, 13.8587, 13.8587, 13.8587, 13.8587, 13.8587, 13.8587, 13.8587,
         13.8587, 13.8587, 13.8587, 13.8587, 13.8587, 13.8587, 13.8587, 13.1136]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[13.8587, 13.8587, 13.8587, 13.8587, 13.8587, 13.8587, 13.8587, 13.8587,
         13.8587, 13.8587, 13.8587, 13.8587, 13.8587, 13.8587, 13.8587, 13.1136]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  14
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([13.8587, 13.8587, 13.8587, 13.8587, 13.8587, 13.8587, 13.8587, 13.8587,
        13.8587, 13.8587, 13.8587, 13.8587, 13.8587, 13.8587, 13.8587, 13.1136])
new_beam_scores: tensor([[14.8587, 14.8587, 14.8587, 14.8587, 14.8587, 14.8587, 14.8587, 14.8587,
         14.8587, 14.8587, 14.8587, 14.8587, 14.8587, 14.8587, 14.8587, 14.1136]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[14.8587, 14.8587, 14.8587, 14.8587, 14.8587, 14.8587, 14.8587, 14.8587,
         14.8587, 14.8587, 14.8587, 14.8587, 14.8587, 14.8587, 14.8587, 14.1136]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  15
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([14.8587, 14.8587, 14.8587, 14.8587, 14.8587, 14.8587, 14.8587, 14.8587,
        14.8587, 14.8587, 14.8587, 14.8587, 14.8587, 14.8587, 14.8587, 14.1136])
new_beam_scores: tensor([[15.8587, 15.8587, 15.8587, 15.8587, 15.8587, 15.8587, 15.8587, 15.8587,
         15.8587, 15.8587, 15.8587, 15.8587, 15.8587, 15.8587, 15.8587, 15.1136]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[15.8587, 15.8587, 15.8587, 15.8587, 15.8587, 15.8587, 15.8587, 15.8587,
         15.8587, 15.8587, 15.8587, 15.8587, 15.8587, 15.8587, 15.8587, 15.1136]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  16
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([15.8587, 15.8587, 15.8587, 15.8587, 15.8587, 15.8587, 15.8587, 15.8587,
        15.8587, 15.8587, 15.8587, 15.8587, 15.8587, 15.8587, 15.8587, 15.1136])
new_beam_scores: tensor([[16.8587, 16.8587, 16.8587, 16.8587, 16.8587, 16.8587, 16.8587, 16.8587,
         16.8587, 16.8587, 16.8587, 16.8587, 16.8587, 16.8587, 16.8587, 16.1136]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[16.8587, 16.8587, 16.8587, 16.8587, 16.8587, 16.8587, 16.8587, 16.8587,
         16.8587, 16.8587, 16.8587, 16.8587, 16.8587, 16.8587, 16.8587, 16.1136]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 0, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  17
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9935, 0.9935, 0.9935, 0.9935, 0.9935, 0.9935, 0.9935, 0.9935, 0.9935,
         0.9935, 0.9935, 0.9935, 0.9935, 0.9935, 0.9935, 0.9999]])
scores: tensor([16.8587, 16.8587, 16.8587, 16.8587, 16.8587, 16.8587, 16.8587, 16.8587,
        16.8587, 16.8587, 16.8587, 16.8587, 16.8587, 16.8587, 16.8587, 16.1136])
new_beam_scores: tensor([[17.8522, 17.8522, 17.8522, 17.8522, 17.8522, 17.8522, 17.8522, 17.8522,
         17.8522, 17.8522, 17.8522, 17.8522, 17.8522, 17.8522, 17.8522, 17.1136]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[17.8522, 17.8522, 17.8522, 17.8522, 17.8522, 17.8522, 17.8522, 17.8522,
         17.8522, 17.8522, 17.8522, 17.8522, 17.8522, 17.8522, 17.8522, 17.1136]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 0, 2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  18
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([17.8522, 17.8522, 17.8522, 17.8522, 17.8522, 17.8522, 17.8522, 17.8522,
        17.8522, 17.8522, 17.8522, 17.8522, 17.8522, 17.8522, 17.8522, 17.1136])
new_beam_scores: tensor([[18.8522, 18.8522, 18.8522, 18.8522, 18.8522, 18.8522, 18.8522, 18.8522,
         18.8522, 18.8522, 18.8522, 18.8522, 18.8522, 18.8522, 18.8522, 18.1136]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[18.8522, 18.8522, 18.8522, 18.8522, 18.8522, 18.8522, 18.8522, 18.8522,
         18.8522, 18.8522, 18.8522, 18.8522, 18.8522, 18.8522, 18.8522, 18.1136]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 0, 2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  19
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [2],
        [2],
        [2],
        [0],
        [2],
        [2],
        [0],
        [2],
        [0],
        [0],
        [0],
        [2],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.4504, 0.5464, 0.5464, 0.5464, 0.4504, 0.5464, 0.5464, 0.4504, 0.5464,
         0.4504, 0.4504, 0.4504, 0.5464, 0.4504, 0.4504, 0.9861]])
scores: tensor([18.8522, 18.8522, 18.8522, 18.8522, 18.8522, 18.8522, 18.8522, 18.8522,
        18.8522, 18.8522, 18.8522, 18.8522, 18.8522, 18.8522, 18.8522, 18.1136])
new_beam_scores: tensor([[19.3026, 19.3986, 19.3986, 19.3986, 19.3026, 19.3986, 19.3986, 19.3026,
         19.3986, 19.3026, 19.3026, 19.3026, 19.3986, 19.3026, 19.3026, 19.0996]])
new_beam seq: tensor([[0, 2, 2, 2, 0, 2, 2, 0, 2, 0, 0, 0, 2, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[19.3026, 19.3986, 19.3986, 19.3986, 19.3026, 19.3986, 19.3986, 19.3026,
         19.3986, 19.3026, 19.3026, 19.3026, 19.3986, 19.3026, 19.3026, 19.0996]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([0, 2, 2, 2, 0, 2, 2, 0, 2, 0, 0, 0, 2, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3,
        0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 0, 2, 2, 2, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  20
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [0],
        [0],
        [0],
        [2],
        [0],
        [0],
        [2],
        [0],
        [2],
        [2],
        [2],
        [0],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9985, 0.9949, 0.9949, 0.9949, 0.9985, 0.9949, 0.9949, 0.9985, 0.9949,
         0.9985, 0.9985, 0.9985, 0.9949, 0.9985, 0.9985, 0.9998]])
scores: tensor([19.3026, 19.3986, 19.3986, 19.3986, 19.3026, 19.3986, 19.3986, 19.3026,
        19.3986, 19.3026, 19.3026, 19.3026, 19.3986, 19.3026, 19.3026, 19.0996])
new_beam_scores: tensor([[20.3011, 20.3935, 20.3935, 20.3935, 20.3011, 20.3935, 20.3935, 20.3011,
         20.3935, 20.3011, 20.3011, 20.3011, 20.3935, 20.3011, 20.3011, 20.0995]])
new_beam seq: tensor([[2, 0, 0, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[20.3011, 20.3935, 20.3935, 20.3935, 20.3011, 20.3935, 20.3935, 20.3011,
         20.3935, 20.3011, 20.3011, 20.3011, 20.3935, 20.3011, 20.3011, 20.0995]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([2, 0, 0, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3,
        0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3,
        0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 1, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 0, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  21
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([20.3011, 20.3935, 20.3935, 20.3935, 20.3011, 20.3935, 20.3935, 20.3011,
        20.3935, 20.3011, 20.3011, 20.3011, 20.3935, 20.3011, 20.3011, 20.0995])
new_beam_scores: tensor([[21.3011, 21.3935, 21.3935, 21.3935, 21.3011, 21.3935, 21.3935, 21.3011,
         21.3935, 21.3011, 21.3011, 21.3011, 21.3935, 21.3011, 21.3011, 21.0995]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[21.3011, 21.3935, 21.3935, 21.3935, 21.3011, 21.3935, 21.3935, 21.3011,
         21.3935, 21.3011, 21.3011, 21.3011, 21.3935, 21.3011, 21.3011, 21.0995]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3,
        0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3,
        0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 1, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 0, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  22
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([21.3011, 21.3935, 21.3935, 21.3935, 21.3011, 21.3935, 21.3935, 21.3011,
        21.3935, 21.3011, 21.3011, 21.3011, 21.3935, 21.3011, 21.3011, 21.0995])
new_beam_scores: tensor([[22.3011, 22.3935, 22.3935, 22.3935, 22.3011, 22.3935, 22.3935, 22.3011,
         22.3935, 22.3011, 22.3011, 22.3011, 22.3935, 22.3011, 22.3011, 22.0995]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[22.3011, 22.3935, 22.3935, 22.3935, 22.3011, 22.3935, 22.3935, 22.3011,
         22.3935, 22.3011, 22.3011, 22.3011, 22.3935, 22.3011, 22.3011, 22.0995]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3,
        0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0,
        0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3,
        0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 1, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 0, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  23
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [1],
        [1],
        [1],
        [0],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [1],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.7488, 0.2799, 0.7201, 0.7201, 0.2512, 0.2799, 0.7201, 0.2512, 0.2799,
         0.7488, 0.7488, 0.7488, 0.7201, 0.7488, 0.7488, 0.9965]])
scores: tensor([22.3011, 22.3935, 22.3935, 22.3935, 22.3011, 22.3935, 22.3935, 22.3011,
        22.3935, 22.3011, 22.3011, 22.3011, 22.3935, 22.3011, 22.3011, 22.0995])
new_beam_scores: tensor([[23.0499, 22.6734, 23.1136, 23.1136, 22.5523, 22.6734, 23.1136, 22.5523,
         22.6734, 23.0499, 23.0499, 23.0499, 23.1136, 23.0499, 23.0499, 23.0960]])
new_beam seq: tensor([[0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[23.0499, 22.6734, 23.1136, 23.1136, 22.5523, 22.6734, 23.1136, 22.5523,
         22.6734, 23.0499, 23.0499, 23.0499, 23.1136, 23.0499, 23.0499, 23.0960]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3,
        0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 1, 3, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 1, 0, 0, 0,
        0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3,
        0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 1, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 0, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  24
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([23.0499, 22.6734, 23.1136, 23.1136, 22.5523, 22.6734, 23.1136, 22.5523,
        22.6734, 23.0499, 23.0499, 23.0499, 23.1136, 23.0499, 23.0499, 23.0960])
new_beam_scores: tensor([[24.0499, 23.6734, 24.1136, 24.1136, 23.5523, 23.6734, 24.1136, 23.5523,
         23.6734, 24.0499, 24.0499, 24.0499, 24.1136, 24.0499, 24.0499, 24.0960]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[24.0499, 23.6734, 24.1136, 24.1136, 23.5523, 23.6734, 24.1136, 23.5523,
         23.6734, 24.0499, 24.0499, 24.0499, 24.1136, 24.0499, 24.0499, 24.0960]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0,
        3, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0,
        0, 0, 0, 3, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3,
        0, 2, 0, 0, 0, 1, 3, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 1, 3, 0, 2, 0, 0, 0, 1, 3, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 1, 3, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0, 3, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 1, 3, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 1, 3, 0, 0,
        0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0,
        3, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2,
        0, 0, 0, 3, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3,
        0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 1, 3, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 1, 3, 0, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 0, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 3, 0, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [-2.1004, -2.3204, -1.8476,  2.3001],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  25
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([24.0499, 23.6734, 24.1136, 24.1136, 23.5523, 23.6734, 24.1136, 23.5523,
        23.6734, 24.0499, 24.0499, 24.0499, 24.1136, 24.0499, 24.0499, 24.0960])
new_beam_scores: tensor([[25.0499, 24.6734, 25.1136, 25.1136, 24.5523, 24.6734, 25.1136, 24.5523,
         24.6734, 25.0499, 25.0499, 25.0499, 25.1136, 25.0499, 25.0499, 25.0960]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[25.0499, 24.6734, 25.1136, 25.1136, 24.5523, 24.6734, 25.1136, 24.5523,
         24.6734, 25.0499, 25.0499, 25.0499, 25.1136, 25.0499, 25.0499, 25.0960]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0,
        3, 1, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0,
        0, 0, 0, 3, 1, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3,
        0, 2, 0, 0, 0, 1, 3, 1, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 1, 3, 0, 2, 0, 0, 0, 1, 3, 1, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 1, 3, 1, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 1, 3, 1, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 1, 3, 1, 0,
        0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0,
        3, 1, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2,
        0, 0, 0, 3, 1, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3,
        0, 0, 2, 0, 0, 0, 3, 1, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 1, 3, 0, 0, 2, 0, 0, 0, 3, 1, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 1, 3, 1, 0, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 3, 1, 0, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 3, 1, 0, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 0, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 3, 1, 0],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [-2.1004, -2.3204, -1.8476,  2.3001],
        [-1.2412,  3.3984, -0.8570, -0.9444],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([432, 4])
Iteration :  26
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 432])
size of new_beam_h_S: torch.Size([1, 432, 4])
size of new_beam_logits: torch.Size([1, 432, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([25.0499, 24.6734, 25.1136, 25.1136, 24.5523, 24.6734, 25.1136, 24.5523,
        24.6734, 25.0499, 25.0499, 25.0499, 25.1136, 25.0499, 25.0499, 25.0960])
new_beam_scores: tensor([[26.0499, 25.6734, 26.1136, 26.1136, 25.5523, 25.6734, 26.1136, 25.5523,
         25.6734, 26.0499, 26.0499, 26.0499, 26.1136, 26.0499, 26.0499, 26.0960]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 432, 4])
new_beam_h_S size: torch.Size([1, 432, 4])
sorted_scores: tensor([[26.0499, 25.6734, 26.1136, 26.1136, 25.5523, 25.6734, 26.1136, 25.5523,
         25.6734, 26.0499, 26.0499, 26.0499, 26.1136, 26.0499, 26.0499, 26.0960]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 432])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0,
        3, 1, 2, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0,
        0, 0, 0, 3, 1, 2, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3,
        0, 2, 0, 0, 0, 1, 3, 1, 2, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 1, 3, 0, 2, 0, 0, 0, 1, 3, 1, 2, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 1, 3, 1, 2, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0, 3, 1, 2, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 1, 3, 1, 2, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 1, 3, 1, 2,
        0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0,
        3, 1, 2, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2,
        0, 0, 0, 3, 1, 2, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3,
        0, 0, 2, 0, 0, 0, 3, 1, 2, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2,
        1, 1, 3, 0, 0, 2, 0, 0, 0, 3, 1, 2, 0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2,
        2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 1, 3, 1, 2, 0, 2, 2, 1, 1, 1, 2, 0, 1,
        2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 3, 1, 2, 0, 2, 2, 1, 1, 1,
        2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 3, 1, 2, 0, 2, 2,
        1, 1, 1, 2, 0, 1, 2, 0, 0, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0, 3, 1, 2],
       dtype=torch.int32)
logits: tensor([[ 2.1037, -0.6372, -0.7374, -0.9118],
        [-0.3497, -0.6433,  1.2159, -0.0442],
        [-1.2839,  1.2263,  2.2134, -0.9752],
        ...,
        [-2.1004, -2.3204, -1.8476,  2.3001],
        [-1.2412,  3.3984, -0.8570, -0.9444],
        [-1.9079, -1.5859,  2.7321, -0.3714]])
h_S size: torch.Size([432, 4])
tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size expanded indices: torch.Size([1, 16, 27])
tensor([[[0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0,
          0, 3, 1, 2],
         [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0,
          0, 3, 1, 2],
         [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0,
          1, 3, 1, 2],
         [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0,
          1, 3, 1, 2],
         [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0,
          1, 3, 1, 2],
         [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0,
          0, 3, 1, 2],
         [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0,
          1, 3, 1, 2],
         [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0,
          1, 3, 1, 2],
         [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0,
          0, 3, 1, 2],
         [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0,
          0, 3, 1, 2],
         [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0,
          0, 3, 1, 2],
         [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0,
          0, 3, 1, 2],
         [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0,
          1, 3, 1, 2],
         [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0,
          0, 3, 1, 2],
         [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0,
          0, 3, 1, 2],
         [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 0, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0,
          0, 3, 1, 2]]], dtype=torch.int32)
final_scores: tensor([26.0499, 25.6734, 26.1136, 26.1136, 25.5523, 25.6734, 26.1136, 25.5523,
        25.6734, 26.0499, 26.0499, 26.0499, 26.1136, 26.0499, 26.0499, 26.0960])
final_seq: tensor([[0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0,
         3, 1, 2],
        [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0,
         3, 1, 2],
        [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 1,
         3, 1, 2],
        [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 1,
         3, 1, 2],
        [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 1,
         3, 1, 2],
        [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0,
         3, 1, 2],
        [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 1,
         3, 1, 2],
        [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 1,
         3, 1, 2],
        [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 0,
         3, 1, 2],
        [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0,
         3, 1, 2],
        [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0,
         3, 1, 2],
        [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0,
         3, 1, 2],
        [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 2, 0, 0, 0, 1,
         3, 1, 2],
        [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0,
         3, 1, 2],
        [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 2, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0,
         3, 1, 2],
        [0, 2, 2, 1, 1, 1, 2, 0, 1, 2, 0, 0, 2, 2, 2, 1, 1, 3, 0, 0, 2, 0, 0, 0,
         3, 1, 2]], dtype=torch.int32)
final_logits: tensor([[[ 2.1037, -0.6372, -0.7374, -0.9118],
         [-0.3497, -0.6433,  1.2159, -0.0442],
         [-1.2839,  1.2263,  2.2134, -0.9752],
         ...,
         [-2.0728, -2.2857, -1.8988,  2.2317],
         [-1.3391,  3.3468, -0.9408, -0.9906],
         [-1.8978, -1.5936,  2.6878, -0.5053]],

        [[ 2.1037, -0.6372, -0.7374, -0.9118],
         [-0.3497, -0.6433,  1.2159, -0.0442],
         [-1.2839,  1.2263,  2.2134, -0.9752],
         ...,
         [-2.0672, -2.2914, -1.8919,  2.2253],
         [-1.3435,  3.3457, -0.9466, -0.9954],
         [-1.8935, -1.5883,  2.6861, -0.5208]],

        [[ 2.1037, -0.6372, -0.7374, -0.9118],
         [-0.3497, -0.6433,  1.2159, -0.0442],
         [-1.2839,  1.2263,  2.2134, -0.9752],
         ...,
         [-2.0441, -2.2727, -1.9060,  2.2268],
         [-1.4363,  3.3355, -0.9879, -1.0412],
         [-2.1286, -1.6942,  2.3875, -0.1792]],

        ...,

        [[ 2.1037, -0.6372, -0.7374, -0.9118],
         [-0.3497, -0.6433,  1.2159, -0.0442],
         [-1.2839,  1.2263,  2.2134, -0.9752],
         ...,
         [-2.0728, -2.2857, -1.8988,  2.2317],
         [-1.3391,  3.3468, -0.9408, -0.9906],
         [-1.8978, -1.5936,  2.6878, -0.5053]],

        [[ 2.1037, -0.6372, -0.7374, -0.9118],
         [-0.3497, -0.6433,  1.2159, -0.0442],
         [-1.2839,  1.2263,  2.2134, -0.9752],
         ...,
         [-2.0728, -2.2857, -1.8988,  2.2317],
         [-1.3391,  3.3468, -0.9408, -0.9906],
         [-1.8978, -1.5936,  2.6878, -0.5053]],

        [[ 2.1037, -0.6372, -0.7374, -0.9118],
         [-0.3497, -0.6433,  1.2159, -0.0442],
         [-1.2839,  1.2263,  2.2134, -0.9752],
         ...,
         [-2.1004, -2.3204, -1.8476,  2.3001],
         [-1.2412,  3.3984, -0.8570, -0.9444],
         [-1.9079, -1.5859,  2.7321, -0.3714]]])
Coords: 122
Sequence: GGCUUUAAGUUGACGAGGGCAGGGUUUAUCGAGACAUCGGCGGGUGCCCUGCGGUCUUCCUGCGACCGUUAGAGGACUGGUAAAACCACAGGCGACUGUGGCAUAGAGCAGUCCGGGCAGGA
Len sequence: 122
Detected base pairs: [[ 278  645]
 [ 298  625]
 [ 321  605]
 [ 412 1075]
 [ 432 1055]
 [ 454 1035]
 [ 477 1015]
 [ 500  995]
 [ 523  972]
 [1098 1432]
 [1118 1412]
 [1141 1392]
 [1164 1370]
 [1184 1347]
 [1224 2594]
 [1244 2571]
 [1264 2548]
 [1284 2526]
 [1304 2506]
 [1327 2483]
 [1540 2437]
 [1562 2417]
 [1585 2397]
 [1608 2377]
 [1630 2354]
 [1650 2332]
 [1670 2312]
 [1772 2180]
 [1794 2160]
 [1816 2137]
 [1836 2114]
 [1856 2094]
 [1878 2071]
 [1898 2051]
 [1920 2031]
 [1943 2009]]
Secondary structure: '.............[[[...((((((...]]]..............))))))[[[[[.((((((]]]]]....(((((((....(((((((((..))))))))).....))))))).))))))'
Sequence length: 122
Number of residues: 122
Chain IDs: ['B']
Base atoms present: ["C1'" 'C2' "C2'" "C3'" 'C4' "C4'" 'C5' "C5'" 'C6' 'C8' 'N1' 'N2' 'N3'
 'N4' 'N6' 'N7' 'N9' 'O2' "O2'" "O3'" 'O4' "O4'" "O5'" 'O6' 'OP1' 'OP2'
 'P']
...................((((((....................))))))......((((((.........(((((((....(((((((((..))))))))).....))))))).))))))
Batch size:  (121, 121)
Number of nodes:  121
edge_index: tensor([[[  0,   0,   0,  ..., 120, 120, 120],
         [  1,   2,   3,  ..., 117, 118, 119]],

        [[  0,   0,   0,  ..., 120, 120, 120],
         [  1,   2,   3,  ..., 117, 118, 119]],

        [[  0,   0,   0,  ..., 120, 120, 120],
         [  1,   2,   3,  ..., 117, 118, 119]],

        ...,

        [[  0,   0,   0,  ..., 120, 120, 120],
         [  1,   2,   3,  ..., 117, 118, 119]],

        [[  0,   0,   0,  ..., 120, 120, 120],
         [  1,   2,   3,  ..., 117, 118, 119]],

        [[  0,   0,   0,  ..., 120, 120, 120],
         [  1,   2,   3,  ..., 117, 118, 119]]])
offset size: torch.Size([16, 1, 1])
offset: tensor([[[   0]],

        [[ 121]],

        [[ 242]],

        [[ 363]],

        [[ 484]],

        [[ 605]],

        [[ 726]],

        [[ 847]],

        [[ 968]],

        [[1089]],

        [[1210]],

        [[1331]],

        [[1452]],

        [[1573]],

        [[1694]],

        [[1815]]])
Iteration :  0
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
new_beam_scores: tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 0, 0,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  1
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9856, 0.9856, 0.9856, 0.9856, 0.9856, 0.9856, 0.9856, 0.9856, 0.9856,
         0.9856, 0.9856, 0.9856, 0.9856, 0.9856, 0.9856, 0.9856]])
scores: tensor([1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000])
new_beam_scores: tensor([[1.9856, 1.9856, 1.9856, 1.9856, 1.9856, 1.9856, 1.9856, 1.9856, 1.9856,
         1.9856, 1.9856, 1.9856, 1.9856, 1.9856, 1.9856, 1.9856]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[1.9856, 1.9856, 1.9856, 1.9856, 1.9856, 1.9856, 1.9856, 1.9856, 1.9856,
         1.9856, 1.9856, 1.9856, 1.9856, 1.9856, 1.9856, 1.9856]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 0,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  2
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9994, 0.9994, 0.9994, 0.9994, 0.9994, 0.9994, 0.9994, 0.9994, 0.9994,
         0.9994, 0.9994, 0.9994, 0.9994, 0.9994, 0.9994, 0.9994]])
scores: tensor([1.9856, 1.9856, 1.9856, 1.9856, 1.9856, 1.9856, 1.9856, 1.9856, 1.9856,
        1.9856, 1.9856, 1.9856, 1.9856, 1.9856, 1.9856, 1.9856])
new_beam_scores: tensor([[2.9849, 2.9849, 2.9849, 2.9849, 2.9849, 2.9849, 2.9849, 2.9849, 2.9849,
         2.9849, 2.9849, 2.9849, 2.9849, 2.9849, 2.9849, 2.9849]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[2.9849, 2.9849, 2.9849, 2.9849, 2.9849, 2.9849, 2.9849, 2.9849, 2.9849,
         2.9849, 2.9849, 2.9849, 2.9849, 2.9849, 2.9849, 2.9849]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  3
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997,
         0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997]])
scores: tensor([2.9849, 2.9849, 2.9849, 2.9849, 2.9849, 2.9849, 2.9849, 2.9849, 2.9849,
        2.9849, 2.9849, 2.9849, 2.9849, 2.9849, 2.9849, 2.9849])
new_beam_scores: tensor([[3.9846, 3.9846, 3.9846, 3.9846, 3.9846, 3.9846, 3.9846, 3.9846, 3.9846,
         3.9846, 3.9846, 3.9846, 3.9846, 3.9846, 3.9846, 3.9846]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[3.9846, 3.9846, 3.9846, 3.9846, 3.9846, 3.9846, 3.9846, 3.9846, 3.9846,
         3.9846, 3.9846, 3.9846, 3.9846, 3.9846, 3.9846, 3.9846]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  4
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([3.9846, 3.9846, 3.9846, 3.9846, 3.9846, 3.9846, 3.9846, 3.9846, 3.9846,
        3.9846, 3.9846, 3.9846, 3.9846, 3.9846, 3.9846, 3.9846])
new_beam_scores: tensor([[4.9845, 4.9845, 4.9845, 4.9845, 4.9845, 4.9845, 4.9845, 4.9845, 4.9845,
         4.9845, 4.9845, 4.9845, 4.9845, 4.9845, 4.9845, 4.9845]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[4.9845, 4.9845, 4.9845, 4.9845, 4.9845, 4.9845, 4.9845, 4.9845, 4.9845,
         4.9845, 4.9845, 4.9845, 4.9845, 4.9845, 4.9845, 4.9845]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  5
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [2],
        [1],
        [1],
        [1],
        [1],
        [1],
        [2],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.7724, 0.7724, 0.7724, 0.7724, 0.7724, 0.1509, 0.7724, 0.7724, 0.7724,
         0.7724, 0.7724, 0.1509, 0.7724, 0.7724, 0.7724, 0.7724]])
scores: tensor([4.9845, 4.9845, 4.9845, 4.9845, 4.9845, 4.9845, 4.9845, 4.9845, 4.9845,
        4.9845, 4.9845, 4.9845, 4.9845, 4.9845, 4.9845, 4.9845])
new_beam_scores: tensor([[5.7569, 5.7569, 5.7569, 5.7569, 5.7569, 5.1355, 5.7569, 5.7569, 5.7569,
         5.7569, 5.7569, 5.1355, 5.7569, 5.7569, 5.7569, 5.7569]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[5.7569, 5.7569, 5.7569, 5.7569, 5.7569, 5.1355, 5.7569, 5.7569, 5.7569,
         5.7569, 5.7569, 5.1355, 5.7569, 5.7569, 5.7569, 5.7569]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  6
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9918, 0.9997, 0.9997, 0.9997,
         0.9997, 0.9997, 0.9918, 0.9997, 0.9997, 0.9997, 0.9997]])
scores: tensor([5.7569, 5.7569, 5.7569, 5.7569, 5.7569, 5.1355, 5.7569, 5.7569, 5.7569,
        5.7569, 5.7569, 5.1355, 5.7569, 5.7569, 5.7569, 5.7569])
new_beam_scores: tensor([[6.7566, 6.7566, 6.7566, 6.7566, 6.7566, 6.1273, 6.7566, 6.7566, 6.7566,
         6.7566, 6.7566, 6.1273, 6.7566, 6.7566, 6.7566, 6.7566]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[6.7566, 6.7566, 6.7566, 6.7566, 6.7566, 6.1273, 6.7566, 6.7566, 6.7566,
         6.7566, 6.7566, 6.1273, 6.7566, 6.7566, 6.7566, 6.7566]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  7
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9976, 0.9999, 0.9999, 0.9999,
         0.9999, 0.9999, 0.9976, 0.9999, 0.9999, 0.9999, 0.9999]])
scores: tensor([6.7566, 6.7566, 6.7566, 6.7566, 6.7566, 6.1273, 6.7566, 6.7566, 6.7566,
        6.7566, 6.7566, 6.1273, 6.7566, 6.7566, 6.7566, 6.7566])
new_beam_scores: tensor([[7.7564, 7.7564, 7.7564, 7.7564, 7.7564, 7.1249, 7.7564, 7.7564, 7.7564,
         7.7564, 7.7564, 7.1249, 7.7564, 7.7564, 7.7564, 7.7564]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[7.7564, 7.7564, 7.7564, 7.7564, 7.7564, 7.1249, 7.7564, 7.7564, 7.7564,
         7.7564, 7.7564, 7.1249, 7.7564, 7.7564, 7.7564, 7.7564]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  8
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([7.7564, 7.7564, 7.7564, 7.7564, 7.7564, 7.1249, 7.7564, 7.7564, 7.7564,
        7.7564, 7.7564, 7.1249, 7.7564, 7.7564, 7.7564, 7.7564])
new_beam_scores: tensor([[8.7564, 8.7564, 8.7564, 8.7564, 8.7564, 8.1249, 8.7564, 8.7564, 8.7564,
         8.7564, 8.7564, 8.1249, 8.7564, 8.7564, 8.7564, 8.7564]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[8.7564, 8.7564, 8.7564, 8.7564, 8.7564, 8.1249, 8.7564, 8.7564, 8.7564,
         8.7564, 8.7564, 8.1249, 8.7564, 8.7564, 8.7564, 8.7564]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  9
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [1],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.8760, 0.8760, 0.8760, 0.1239, 0.8760, 0.9658, 0.8760, 0.8760, 0.8760,
         0.8760, 0.8760, 0.9658, 0.8760, 0.8760, 0.8760, 0.8760]])
scores: tensor([8.7564, 8.7564, 8.7564, 8.7564, 8.7564, 8.1249, 8.7564, 8.7564, 8.7564,
        8.7564, 8.7564, 8.1249, 8.7564, 8.7564, 8.7564, 8.7564])
new_beam_scores: tensor([[9.6325, 9.6325, 9.6325, 8.8804, 9.6325, 9.0907, 9.6325, 9.6325, 9.6325,
         9.6325, 9.6325, 9.0907, 9.6325, 9.6325, 9.6325, 9.6325]])
new_beam seq: tensor([[2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[9.6325, 9.6325, 9.6325, 8.8804, 9.6325, 9.0907, 9.6325, 9.6325, 9.6325,
         9.6325, 9.6325, 9.0907, 9.6325, 9.6325, 9.6325, 9.6325]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  10
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([9.6325, 9.6325, 9.6325, 8.8804, 9.6325, 9.0907, 9.6325, 9.6325, 9.6325,
        9.6325, 9.6325, 9.0907, 9.6325, 9.6325, 9.6325, 9.6325])
new_beam_scores: tensor([[10.6325, 10.6325, 10.6325,  9.8804, 10.6325, 10.0907, 10.6325, 10.6325,
         10.6325, 10.6325, 10.6325, 10.0907, 10.6325, 10.6325, 10.6325, 10.6325]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[10.6325, 10.6325, 10.6325,  9.8804, 10.6325, 10.0907, 10.6325, 10.6325,
         10.6325, 10.6325, 10.6325, 10.0907, 10.6325, 10.6325, 10.6325, 10.6325]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  11
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([10.6325, 10.6325, 10.6325,  9.8804, 10.6325, 10.0907, 10.6325, 10.6325,
        10.6325, 10.6325, 10.6325, 10.0907, 10.6325, 10.6325, 10.6325, 10.6325])
new_beam_scores: tensor([[11.6325, 11.6325, 11.6325, 10.8803, 11.6325, 11.0907, 11.6325, 11.6325,
         11.6325, 11.6325, 11.6325, 11.0907, 11.6325, 11.6325, 11.6325, 11.6325]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[11.6325, 11.6325, 11.6325, 10.8803, 11.6325, 11.0907, 11.6325, 11.6325,
         11.6325, 11.6325, 11.6325, 11.0907, 11.6325, 11.6325, 11.6325, 11.6325]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  12
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([11.6325, 11.6325, 11.6325, 10.8803, 11.6325, 11.0907, 11.6325, 11.6325,
        11.6325, 11.6325, 11.6325, 11.0907, 11.6325, 11.6325, 11.6325, 11.6325])
new_beam_scores: tensor([[12.6325, 12.6325, 12.6325, 11.8803, 12.6325, 12.0907, 12.6325, 12.6325,
         12.6325, 12.6325, 12.6325, 12.0907, 12.6325, 12.6325, 12.6325, 12.6325]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[12.6325, 12.6325, 12.6325, 11.8803, 12.6325, 12.0907, 12.6325, 12.6325,
         12.6325, 12.6325, 12.6325, 12.0907, 12.6325, 12.6325, 12.6325, 12.6325]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  13
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([12.6325, 12.6325, 12.6325, 11.8803, 12.6325, 12.0907, 12.6325, 12.6325,
        12.6325, 12.6325, 12.6325, 12.0907, 12.6325, 12.6325, 12.6325, 12.6325])
new_beam_scores: tensor([[13.6325, 13.6325, 13.6325, 12.8803, 13.6325, 13.0907, 13.6325, 13.6325,
         13.6325, 13.6325, 13.6325, 13.0907, 13.6325, 13.6325, 13.6325, 13.6325]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[13.6325, 13.6325, 13.6325, 12.8803, 13.6325, 13.0907, 13.6325, 13.6325,
         13.6325, 13.6325, 13.6325, 13.0907, 13.6325, 13.6325, 13.6325, 13.6325]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  14
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([13.6325, 13.6325, 13.6325, 12.8803, 13.6325, 13.0907, 13.6325, 13.6325,
        13.6325, 13.6325, 13.6325, 13.0907, 13.6325, 13.6325, 13.6325, 13.6325])
new_beam_scores: tensor([[14.6325, 14.6325, 14.6325, 13.8803, 14.6325, 14.0907, 14.6325, 14.6325,
         14.6325, 14.6325, 14.6325, 14.0907, 14.6325, 14.6325, 14.6325, 14.6325]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[14.6325, 14.6325, 14.6325, 13.8803, 14.6325, 14.0907, 14.6325, 14.6325,
         14.6325, 14.6325, 14.6325, 14.0907, 14.6325, 14.6325, 14.6325, 14.6325]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  15
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([14.6325, 14.6325, 14.6325, 13.8803, 14.6325, 14.0907, 14.6325, 14.6325,
        14.6325, 14.6325, 14.6325, 14.0907, 14.6325, 14.6325, 14.6325, 14.6325])
new_beam_scores: tensor([[15.6325, 15.6325, 15.6325, 14.8803, 15.6325, 15.0907, 15.6325, 15.6325,
         15.6325, 15.6325, 15.6325, 15.0907, 15.6325, 15.6325, 15.6325, 15.6325]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[15.6325, 15.6325, 15.6325, 14.8803, 15.6325, 15.0907, 15.6325, 15.6325,
         15.6325, 15.6325, 15.6325, 15.0907, 15.6325, 15.6325, 15.6325, 15.6325]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  16
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9946, 0.9946, 0.9946, 0.9955, 0.9946, 0.9945, 0.9946, 0.9946, 0.9946,
         0.9946, 0.9946, 0.9945, 0.9946, 0.9946, 0.9946, 0.9946]])
scores: tensor([15.6325, 15.6325, 15.6325, 14.8803, 15.6325, 15.0907, 15.6325, 15.6325,
        15.6325, 15.6325, 15.6325, 15.0907, 15.6325, 15.6325, 15.6325, 15.6325])
new_beam_scores: tensor([[16.6271, 16.6271, 16.6271, 15.8758, 16.6271, 16.0852, 16.6271, 16.6271,
         16.6271, 16.6271, 16.6271, 16.0852, 16.6271, 16.6271, 16.6271, 16.6271]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[16.6271, 16.6271, 16.6271, 15.8758, 16.6271, 16.0852, 16.6271, 16.6271,
         16.6271, 16.6271, 16.6271, 16.0852, 16.6271, 16.6271, 16.6271, 16.6271]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  17
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([16.6271, 16.6271, 16.6271, 15.8758, 16.6271, 16.0852, 16.6271, 16.6271,
        16.6271, 16.6271, 16.6271, 16.0852, 16.6271, 16.6271, 16.6271, 16.6271])
new_beam_scores: tensor([[17.6271, 17.6271, 17.6271, 16.8758, 17.6271, 17.0852, 17.6271, 17.6271,
         17.6271, 17.6271, 17.6271, 17.0852, 17.6271, 17.6271, 17.6271, 17.6271]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[17.6271, 17.6271, 17.6271, 16.8758, 17.6271, 17.0852, 17.6271, 17.6271,
         17.6271, 17.6271, 17.6271, 17.0852, 17.6271, 17.6271, 17.6271, 17.6271]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  18
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998,
         0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998]])
scores: tensor([17.6271, 17.6271, 17.6271, 16.8758, 17.6271, 17.0852, 17.6271, 17.6271,
        17.6271, 17.6271, 17.6271, 17.0852, 17.6271, 17.6271, 17.6271, 17.6271])
new_beam_scores: tensor([[18.6268, 18.6268, 18.6268, 17.8756, 18.6268, 18.0850, 18.6268, 18.6268,
         18.6268, 18.6268, 18.6268, 18.0850, 18.6268, 18.6268, 18.6268, 18.6268]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[18.6268, 18.6268, 18.6268, 17.8756, 18.6268, 18.0850, 18.6268, 18.6268,
         18.6268, 18.6268, 18.6268, 18.0850, 18.6268, 18.6268, 18.6268, 18.6268]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  19
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([18.6268, 18.6268, 18.6268, 17.8756, 18.6268, 18.0850, 18.6268, 18.6268,
        18.6268, 18.6268, 18.6268, 18.0850, 18.6268, 18.6268, 18.6268, 18.6268])
new_beam_scores: tensor([[19.6268, 19.6268, 19.6268, 18.8756, 19.6268, 19.0850, 19.6268, 19.6268,
         19.6268, 19.6268, 19.6268, 19.0850, 19.6268, 19.6268, 19.6268, 19.6268]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[19.6268, 19.6268, 19.6268, 18.8756, 19.6268, 19.0850, 19.6268, 19.6268,
         19.6268, 19.6268, 19.6268, 19.0850, 19.6268, 19.6268, 19.6268, 19.6268]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  20
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([19.6268, 19.6268, 19.6268, 18.8756, 19.6268, 19.0850, 19.6268, 19.6268,
        19.6268, 19.6268, 19.6268, 19.0850, 19.6268, 19.6268, 19.6268, 19.6268])
new_beam_scores: tensor([[20.6268, 20.6268, 20.6268, 19.8756, 20.6268, 20.0850, 20.6268, 20.6268,
         20.6268, 20.6268, 20.6268, 20.0850, 20.6268, 20.6268, 20.6268, 20.6268]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[20.6268, 20.6268, 20.6268, 19.8756, 20.6268, 20.0850, 20.6268, 20.6268,
         20.6268, 20.6268, 20.6268, 20.0850, 20.6268, 20.6268, 20.6268, 20.6268]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  21
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9991, 0.9991, 0.9991, 0.9991, 0.9991, 0.9992, 0.9991, 0.9991, 0.9991,
         0.9991, 0.9991, 0.9992, 0.9991, 0.9991, 0.9991, 0.9991]])
scores: tensor([20.6268, 20.6268, 20.6268, 19.8756, 20.6268, 20.0850, 20.6268, 20.6268,
        20.6268, 20.6268, 20.6268, 20.0850, 20.6268, 20.6268, 20.6268, 20.6268])
new_beam_scores: tensor([[21.6260, 21.6260, 21.6260, 20.8747, 21.6260, 21.0842, 21.6260, 21.6260,
         21.6260, 21.6260, 21.6260, 21.0842, 21.6260, 21.6260, 21.6260, 21.6260]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[21.6260, 21.6260, 21.6260, 20.8747, 21.6260, 21.0842, 21.6260, 21.6260,
         21.6260, 21.6260, 21.6260, 21.0842, 21.6260, 21.6260, 21.6260, 21.6260]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  22
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [2],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9671, 0.9671, 0.9671, 0.9672, 0.9671, 0.9671, 0.0321, 0.9671, 0.9671,
         0.9671, 0.9671, 0.9671, 0.9671, 0.9671, 0.9671, 0.9671]])
scores: tensor([21.6260, 21.6260, 21.6260, 20.8747, 21.6260, 21.0842, 21.6260, 21.6260,
        21.6260, 21.6260, 21.6260, 21.0842, 21.6260, 21.6260, 21.6260, 21.6260])
new_beam_scores: tensor([[22.5931, 22.5931, 22.5931, 21.8419, 22.5931, 22.0513, 21.6581, 22.5931,
         22.5931, 22.5931, 22.5931, 22.0513, 22.5931, 22.5931, 22.5931, 22.5931]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[22.5931, 22.5931, 22.5931, 21.8419, 22.5931, 22.0513, 21.6581, 22.5931,
         22.5931, 22.5931, 22.5931, 22.0513, 22.5931, 22.5931, 22.5931, 22.5931]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  23
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([22.5931, 22.5931, 22.5931, 21.8419, 22.5931, 22.0513, 21.6581, 22.5931,
        22.5931, 22.5931, 22.5931, 22.0513, 22.5931, 22.5931, 22.5931, 22.5931])
new_beam_scores: tensor([[23.5931, 23.5931, 23.5931, 22.8419, 23.5931, 23.0513, 22.6581, 23.5931,
         23.5931, 23.5931, 23.5931, 23.0513, 23.5931, 23.5931, 23.5931, 23.5931]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[23.5931, 23.5931, 23.5931, 22.8419, 23.5931, 23.0513, 22.6581, 23.5931,
         23.5931, 23.5931, 23.5931, 23.0513, 23.5931, 23.5931, 23.5931, 23.5931]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  24
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([23.5931, 23.5931, 23.5931, 22.8419, 23.5931, 23.0513, 22.6581, 23.5931,
        23.5931, 23.5931, 23.5931, 23.0513, 23.5931, 23.5931, 23.5931, 23.5931])
new_beam_scores: tensor([[24.5931, 24.5931, 24.5931, 23.8419, 24.5931, 24.0513, 23.6581, 24.5931,
         24.5931, 24.5931, 24.5931, 24.0513, 24.5931, 24.5931, 24.5931, 24.5931]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[24.5931, 24.5931, 24.5931, 23.8419, 24.5931, 24.0513, 23.6581, 24.5931,
         24.5931, 24.5931, 24.5931, 24.0513, 24.5931, 24.5931, 24.5931, 24.5931]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  25
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999,
         0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999]])
scores: tensor([24.5931, 24.5931, 24.5931, 23.8419, 24.5931, 24.0513, 23.6581, 24.5931,
        24.5931, 24.5931, 24.5931, 24.0513, 24.5931, 24.5931, 24.5931, 24.5931])
new_beam_scores: tensor([[25.5931, 25.5931, 25.5931, 24.8418, 25.5931, 25.0512, 24.6580, 25.5931,
         25.5931, 25.5931, 25.5931, 25.0512, 25.5931, 25.5931, 25.5931, 25.5931]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[25.5931, 25.5931, 25.5931, 24.8418, 25.5931, 25.0512, 24.6580, 25.5931,
         25.5931, 25.5931, 25.5931, 25.0512, 25.5931, 25.5931, 25.5931, 25.5931]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  26
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [3],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9821, 0.0179, 0.9821, 0.9760, 0.9821, 0.9826, 0.9956, 0.9821, 0.9821,
         0.9821, 0.9821, 0.9826, 0.9821, 0.9821, 0.9821, 0.9821]])
scores: tensor([25.5931, 25.5931, 25.5931, 24.8418, 25.5931, 25.0512, 24.6580, 25.5931,
        25.5931, 25.5931, 25.5931, 25.0512, 25.5931, 25.5931, 25.5931, 25.5931])
new_beam_scores: tensor([[26.5752, 25.6110, 26.5752, 25.8178, 26.5752, 26.0338, 25.6536, 26.5752,
         26.5752, 26.5752, 26.5752, 26.0338, 26.5752, 26.5752, 26.5752, 26.5752]])
new_beam seq: tensor([[2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[26.5752, 25.6110, 26.5752, 25.8178, 26.5752, 26.0338, 25.6536, 26.5752,
         26.5752, 26.5752, 26.5752, 26.0338, 26.5752, 26.5752, 26.5752, 26.5752]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  27
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([26.5752, 25.6110, 26.5752, 25.8178, 26.5752, 26.0338, 25.6536, 26.5752,
        26.5752, 26.5752, 26.5752, 26.0338, 26.5752, 26.5752, 26.5752, 26.5752])
new_beam_scores: tensor([[27.5752, 26.6110, 27.5752, 26.8178, 27.5752, 27.0338, 26.6536, 27.5752,
         27.5752, 27.5752, 27.5752, 27.0338, 27.5752, 27.5752, 27.5752, 27.5752]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[27.5752, 26.6110, 27.5752, 26.8178, 27.5752, 27.0338, 26.6536, 27.5752,
         27.5752, 27.5752, 27.5752, 27.0338, 27.5752, 27.5752, 27.5752, 27.5752]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  28
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([27.5752, 26.6110, 27.5752, 26.8178, 27.5752, 27.0338, 26.6536, 27.5752,
        27.5752, 27.5752, 27.5752, 27.0338, 27.5752, 27.5752, 27.5752, 27.5752])
new_beam_scores: tensor([[28.5752, 27.6110, 28.5752, 27.8178, 28.5752, 28.0338, 27.6536, 28.5752,
         28.5752, 28.5752, 28.5752, 28.0338, 28.5752, 28.5752, 28.5752, 28.5752]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[28.5752, 27.6110, 28.5752, 27.8178, 28.5752, 28.0338, 27.6536, 28.5752,
         28.5752, 28.5752, 28.5752, 28.0338, 28.5752, 28.5752, 28.5752, 28.5752]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  29
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([28.5752, 27.6110, 28.5752, 27.8178, 28.5752, 28.0338, 27.6536, 28.5752,
        28.5752, 28.5752, 28.5752, 28.0338, 28.5752, 28.5752, 28.5752, 28.5752])
new_beam_scores: tensor([[29.5752, 28.6110, 29.5752, 28.8178, 29.5752, 29.0338, 28.6536, 29.5752,
         29.5752, 29.5752, 29.5752, 29.0338, 29.5752, 29.5752, 29.5752, 29.5752]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[29.5752, 28.6110, 29.5752, 28.8178, 29.5752, 29.0338, 28.6536, 29.5752,
         29.5752, 29.5752, 29.5752, 29.0338, 29.5752, 29.5752, 29.5752, 29.5752]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  30
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([29.5752, 28.6110, 29.5752, 28.8178, 29.5752, 29.0338, 28.6536, 29.5752,
        29.5752, 29.5752, 29.5752, 29.0338, 29.5752, 29.5752, 29.5752, 29.5752])
new_beam_scores: tensor([[30.5752, 29.6110, 30.5752, 29.8178, 30.5752, 30.0338, 29.6536, 30.5752,
         30.5752, 30.5752, 30.5752, 30.0338, 30.5752, 30.5752, 30.5752, 30.5752]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[30.5752, 29.6110, 30.5752, 29.8178, 30.5752, 30.0338, 29.6536, 30.5752,
         30.5752, 30.5752, 30.5752, 30.0338, 30.5752, 30.5752, 30.5752, 30.5752]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  31
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([30.5752, 29.6110, 30.5752, 29.8178, 30.5752, 30.0338, 29.6536, 30.5752,
        30.5752, 30.5752, 30.5752, 30.0338, 30.5752, 30.5752, 30.5752, 30.5752])
new_beam_scores: tensor([[31.5752, 30.6110, 31.5752, 30.8178, 31.5752, 31.0338, 30.6536, 31.5752,
         31.5752, 31.5752, 31.5752, 31.0338, 31.5752, 31.5752, 31.5752, 31.5752]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[31.5752, 30.6110, 31.5752, 30.8178, 31.5752, 31.0338, 30.6536, 31.5752,
         31.5752, 31.5752, 31.5752, 31.0338, 31.5752, 31.5752, 31.5752, 31.5752]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  32
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9998, 0.9997, 0.9998, 0.9998, 0.9998, 0.9999, 0.9998, 0.9998, 0.9998,
         0.9998, 0.9998, 0.9999, 0.9998, 0.9998, 0.9998, 0.9998]])
scores: tensor([31.5752, 30.6110, 31.5752, 30.8178, 31.5752, 31.0338, 30.6536, 31.5752,
        31.5752, 31.5752, 31.5752, 31.0338, 31.5752, 31.5752, 31.5752, 31.5752])
new_beam_scores: tensor([[32.5750, 31.6107, 32.5750, 31.8175, 32.5750, 32.0337, 31.6534, 32.5750,
         32.5750, 32.5750, 32.5750, 32.0337, 32.5750, 32.5750, 32.5750, 32.5750]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[32.5750, 31.6107, 32.5750, 31.8175, 32.5750, 32.0337, 31.6534, 32.5750,
         32.5750, 32.5750, 32.5750, 32.0337, 32.5750, 32.5750, 32.5750, 32.5750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  33
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([32.5750, 31.6107, 32.5750, 31.8175, 32.5750, 32.0337, 31.6534, 32.5750,
        32.5750, 32.5750, 32.5750, 32.0337, 32.5750, 32.5750, 32.5750, 32.5750])
new_beam_scores: tensor([[33.5750, 32.6107, 33.5750, 32.8175, 33.5750, 33.0337, 32.6534, 33.5750,
         33.5750, 33.5750, 33.5750, 33.0337, 33.5750, 33.5750, 33.5750, 33.5750]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[33.5750, 32.6107, 33.5750, 32.8175, 33.5750, 33.0337, 32.6534, 33.5750,
         33.5750, 33.5750, 33.5750, 33.0337, 33.5750, 33.5750, 33.5750, 33.5750]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  34
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9918, 0.7775, 0.9918, 0.9924, 0.9918, 0.9743, 0.9915, 0.9918, 0.9918,
         0.9918, 0.9918, 0.9743, 0.9918, 0.9918, 0.9918, 0.9918]])
scores: tensor([33.5750, 32.6107, 33.5750, 32.8175, 33.5750, 33.0337, 32.6534, 33.5750,
        33.5750, 33.5750, 33.5750, 33.0337, 33.5750, 33.5750, 33.5750, 33.5750])
new_beam_scores: tensor([[34.5668, 33.3882, 34.5668, 33.8100, 34.5668, 34.0080, 33.6450, 34.5668,
         34.5668, 34.5668, 34.5668, 34.0080, 34.5668, 34.5668, 34.5668, 34.5668]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[34.5668, 33.3882, 34.5668, 33.8100, 34.5668, 34.0080, 33.6450, 34.5668,
         34.5668, 34.5668, 34.5668, 34.0080, 34.5668, 34.5668, 34.5668, 34.5668]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  35
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([34.5668, 33.3882, 34.5668, 33.8100, 34.5668, 34.0080, 33.6450, 34.5668,
        34.5668, 34.5668, 34.5668, 34.0080, 34.5668, 34.5668, 34.5668, 34.5668])
new_beam_scores: tensor([[35.5668, 34.3882, 35.5668, 34.8100, 35.5668, 35.0080, 34.6450, 35.5668,
         35.5668, 35.5668, 35.5668, 35.0080, 35.5668, 35.5668, 35.5668, 35.5668]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[35.5668, 34.3882, 35.5668, 34.8100, 35.5668, 35.0080, 34.6450, 35.5668,
         35.5668, 35.5668, 35.5668, 35.0080, 35.5668, 35.5668, 35.5668, 35.5668]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  36
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([35.5668, 34.3882, 35.5668, 34.8100, 35.5668, 35.0080, 34.6450, 35.5668,
        35.5668, 35.5668, 35.5668, 35.0080, 35.5668, 35.5668, 35.5668, 35.5668])
new_beam_scores: tensor([[36.5668, 35.3882, 36.5668, 35.8100, 36.5668, 36.0080, 35.6450, 36.5668,
         36.5668, 36.5668, 36.5668, 36.0080, 36.5668, 36.5668, 36.5668, 36.5668]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[36.5668, 35.3882, 36.5668, 35.8100, 36.5668, 36.0080, 35.6450, 36.5668,
         36.5668, 36.5668, 36.5668, 36.0080, 36.5668, 36.5668, 36.5668, 36.5668]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  37
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([36.5668, 35.3882, 36.5668, 35.8100, 36.5668, 36.0080, 35.6450, 36.5668,
        36.5668, 36.5668, 36.5668, 36.0080, 36.5668, 36.5668, 36.5668, 36.5668])
new_beam_scores: tensor([[37.5668, 36.3882, 37.5668, 36.8100, 37.5668, 37.0080, 36.6450, 37.5668,
         37.5668, 37.5668, 37.5668, 37.0080, 37.5668, 37.5668, 37.5668, 37.5668]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[37.5668, 36.3882, 37.5668, 36.8100, 37.5668, 37.0080, 36.6450, 37.5668,
         37.5668, 37.5668, 37.5668, 37.0080, 37.5668, 37.5668, 37.5668, 37.5668]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  38
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([37.5668, 36.3882, 37.5668, 36.8100, 37.5668, 37.0080, 36.6450, 37.5668,
        37.5668, 37.5668, 37.5668, 37.0080, 37.5668, 37.5668, 37.5668, 37.5668])
new_beam_scores: tensor([[38.5668, 37.3882, 38.5668, 37.8100, 38.5668, 38.0080, 37.6450, 38.5668,
         38.5668, 38.5668, 38.5668, 38.0080, 38.5668, 38.5668, 38.5668, 38.5668]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[38.5668, 37.3882, 38.5668, 37.8100, 38.5668, 38.0080, 37.6450, 38.5668,
         38.5668, 38.5668, 38.5668, 38.0080, 38.5668, 38.5668, 38.5668, 38.5668]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  39
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9634, 0.7663, 0.9634, 0.8847, 0.9634, 0.9784, 0.9485, 0.9634, 0.9634,
         0.9634, 0.9634, 0.9784, 0.9634, 0.9634, 0.9634, 0.9634]])
scores: tensor([38.5668, 37.3882, 38.5668, 37.8100, 38.5668, 38.0080, 37.6450, 38.5668,
        38.5668, 38.5668, 38.5668, 38.0080, 38.5668, 38.5668, 38.5668, 38.5668])
new_beam_scores: tensor([[39.5302, 38.1545, 39.5302, 38.6947, 39.5302, 38.9864, 38.5935, 39.5302,
         39.5302, 39.5302, 39.5302, 38.9864, 39.5302, 39.5302, 39.5302, 39.5302]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[39.5302, 38.1545, 39.5302, 38.6947, 39.5302, 38.9864, 38.5935, 39.5302,
         39.5302, 39.5302, 39.5302, 38.9864, 39.5302, 39.5302, 39.5302, 39.5302]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  40
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9999, 0.9984, 0.9999, 0.9998, 0.9999, 1.0000, 0.9999, 0.9999, 0.9999,
         0.9999, 0.9999, 1.0000, 0.9999, 0.9999, 0.9999, 0.9999]])
scores: tensor([39.5302, 38.1545, 39.5302, 38.6947, 39.5302, 38.9864, 38.5935, 39.5302,
        39.5302, 39.5302, 39.5302, 38.9864, 39.5302, 39.5302, 39.5302, 39.5302])
new_beam_scores: tensor([[40.5302, 39.1530, 40.5302, 39.6944, 40.5302, 39.9863, 39.5934, 40.5302,
         40.5302, 40.5302, 40.5302, 39.9863, 40.5302, 40.5302, 40.5302, 40.5302]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[40.5302, 39.1530, 40.5302, 39.6944, 40.5302, 39.9863, 39.5934, 40.5302,
         40.5302, 40.5302, 40.5302, 39.9863, 40.5302, 40.5302, 40.5302, 40.5302]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  41
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([40.5302, 39.1530, 40.5302, 39.6944, 40.5302, 39.9863, 39.5934, 40.5302,
        40.5302, 40.5302, 40.5302, 39.9863, 40.5302, 40.5302, 40.5302, 40.5302])
new_beam_scores: tensor([[41.5302, 40.1530, 41.5302, 40.6944, 41.5302, 40.9863, 40.5934, 41.5302,
         41.5302, 41.5302, 41.5302, 40.9863, 41.5302, 41.5302, 41.5302, 41.5302]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[41.5302, 40.1530, 41.5302, 40.6944, 41.5302, 40.9863, 40.5934, 41.5302,
         41.5302, 41.5302, 41.5302, 40.9863, 41.5302, 41.5302, 41.5302, 41.5302]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  42
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [0],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9888, 0.3272, 0.9888, 0.9950, 0.9888, 0.9635, 0.9487, 0.9888, 0.9888,
         0.9888, 0.9888, 0.9635, 0.9888, 0.9888, 0.9888, 0.9888]])
scores: tensor([41.5302, 40.1530, 41.5302, 40.6944, 41.5302, 40.9863, 40.5934, 41.5302,
        41.5302, 41.5302, 41.5302, 40.9863, 41.5302, 41.5302, 41.5302, 41.5302])
new_beam_scores: tensor([[42.5189, 40.4802, 42.5189, 41.6894, 42.5189, 41.9498, 41.5421, 42.5189,
         42.5189, 42.5189, 42.5189, 41.9498, 42.5189, 42.5189, 42.5189, 42.5189]])
new_beam seq: tensor([[3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[42.5189, 40.4802, 42.5189, 41.6894, 42.5189, 41.9498, 41.5421, 42.5189,
         42.5189, 42.5189, 42.5189, 41.9498, 42.5189, 42.5189, 42.5189, 42.5189]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  43
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([42.5189, 40.4802, 42.5189, 41.6894, 42.5189, 41.9498, 41.5421, 42.5189,
        42.5189, 42.5189, 42.5189, 41.9498, 42.5189, 42.5189, 42.5189, 42.5189])
new_beam_scores: tensor([[43.5189, 41.4802, 43.5189, 42.6894, 43.5189, 42.9498, 42.5421, 43.5189,
         43.5189, 43.5189, 43.5189, 42.9498, 43.5189, 43.5189, 43.5189, 43.5189]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[43.5189, 41.4802, 43.5189, 42.6894, 43.5189, 42.9498, 42.5421, 43.5189,
         43.5189, 43.5189, 43.5189, 42.9498, 43.5189, 43.5189, 43.5189, 43.5189]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  44
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [0],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 0.5862, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([43.5189, 41.4802, 43.5189, 42.6894, 43.5189, 42.9498, 42.5421, 43.5189,
        43.5189, 43.5189, 43.5189, 42.9498, 43.5189, 43.5189, 43.5189, 43.5189])
new_beam_scores: tensor([[44.5189, 42.0664, 44.5189, 43.6894, 44.5189, 43.9498, 43.5421, 44.5189,
         44.5189, 44.5189, 44.5189, 43.9498, 44.5189, 44.5189, 44.5189, 44.5189]])
new_beam seq: tensor([[3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[44.5189, 42.0664, 44.5189, 43.6894, 44.5189, 43.9498, 43.5421, 44.5189,
         44.5189, 44.5189, 44.5189, 43.9498, 44.5189, 44.5189, 44.5189, 44.5189]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  45
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([44.5189, 42.0664, 44.5189, 43.6894, 44.5189, 43.9498, 43.5421, 44.5189,
        44.5189, 44.5189, 44.5189, 43.9498, 44.5189, 44.5189, 44.5189, 44.5189])
new_beam_scores: tensor([[45.5189, 43.0664, 45.5189, 44.6894, 45.5189, 44.9498, 44.5421, 45.5189,
         45.5189, 45.5189, 45.5189, 44.9498, 45.5189, 45.5189, 45.5189, 45.5189]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[45.5189, 43.0664, 45.5189, 44.6894, 45.5189, 44.9498, 44.5421, 45.5189,
         45.5189, 45.5189, 45.5189, 44.9498, 45.5189, 45.5189, 45.5189, 45.5189]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  46
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([45.5189, 43.0664, 45.5189, 44.6894, 45.5189, 44.9498, 44.5421, 45.5189,
        45.5189, 45.5189, 45.5189, 44.9498, 45.5189, 45.5189, 45.5189, 45.5189])
new_beam_scores: tensor([[46.5189, 44.0664, 46.5189, 45.6894, 46.5189, 45.9498, 45.5421, 46.5189,
         46.5189, 46.5189, 46.5189, 45.9498, 46.5189, 46.5189, 46.5189, 46.5189]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[46.5189, 44.0664, 46.5189, 45.6894, 46.5189, 45.9498, 45.5421, 46.5189,
         46.5189, 46.5189, 46.5189, 45.9498, 46.5189, 46.5189, 46.5189, 46.5189]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  47
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [1],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([46.5189, 44.0664, 46.5189, 45.6894, 46.5189, 45.9498, 45.5421, 46.5189,
        46.5189, 46.5189, 46.5189, 45.9498, 46.5189, 46.5189, 46.5189, 46.5189])
new_beam_scores: tensor([[47.5189, 45.0664, 47.5189, 46.6894, 47.5189, 46.9498, 46.5421, 47.5189,
         47.5189, 47.5189, 47.5189, 46.9498, 47.5189, 47.5189, 47.5189, 47.5189]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[47.5189, 45.0664, 47.5189, 46.6894, 47.5189, 46.9498, 46.5421, 47.5189,
         47.5189, 47.5189, 47.5189, 46.9498, 47.5189, 47.5189, 47.5189, 47.5189]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  48
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([47.5189, 45.0664, 47.5189, 46.6894, 47.5189, 46.9498, 46.5421, 47.5189,
        47.5189, 47.5189, 47.5189, 46.9498, 47.5189, 47.5189, 47.5189, 47.5189])
new_beam_scores: tensor([[48.5189, 46.0664, 48.5189, 47.6894, 48.5189, 47.9498, 47.5421, 48.5189,
         48.5189, 48.5189, 48.5189, 47.9498, 48.5189, 48.5189, 48.5189, 48.5189]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[48.5189, 46.0664, 48.5189, 47.6894, 48.5189, 47.9498, 47.5421, 48.5189,
         48.5189, 48.5189, 48.5189, 47.9498, 48.5189, 48.5189, 48.5189, 48.5189]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  49
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([48.5189, 46.0664, 48.5189, 47.6894, 48.5189, 47.9498, 47.5421, 48.5189,
        48.5189, 48.5189, 48.5189, 47.9498, 48.5189, 48.5189, 48.5189, 48.5189])
new_beam_scores: tensor([[49.5189, 47.0664, 49.5189, 48.6894, 49.5189, 48.9498, 48.5421, 49.5189,
         49.5189, 49.5189, 49.5189, 48.9498, 49.5189, 49.5189, 49.5189, 49.5189]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[49.5189, 47.0664, 49.5189, 48.6894, 49.5189, 48.9498, 48.5421, 49.5189,
         49.5189, 49.5189, 49.5189, 48.9498, 49.5189, 49.5189, 49.5189, 49.5189]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  50
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([49.5189, 47.0664, 49.5189, 48.6894, 49.5189, 48.9498, 48.5421, 49.5189,
        49.5189, 49.5189, 49.5189, 48.9498, 49.5189, 49.5189, 49.5189, 49.5189])
new_beam_scores: tensor([[50.5189, 48.0664, 50.5189, 49.6894, 50.5189, 49.9498, 49.5421, 50.5189,
         50.5189, 50.5189, 50.5189, 49.9498, 50.5189, 50.5189, 50.5189, 50.5189]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[50.5189, 48.0664, 50.5189, 49.6894, 50.5189, 49.9498, 49.5421, 50.5189,
         50.5189, 50.5189, 50.5189, 49.9498, 50.5189, 50.5189, 50.5189, 50.5189]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  51
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([50.5189, 48.0664, 50.5189, 49.6894, 50.5189, 49.9498, 49.5421, 50.5189,
        50.5189, 50.5189, 50.5189, 49.9498, 50.5189, 50.5189, 50.5189, 50.5189])
new_beam_scores: tensor([[51.5189, 49.0664, 51.5189, 50.6894, 51.5189, 50.9498, 50.5421, 51.5189,
         51.5189, 51.5189, 51.5189, 50.9498, 51.5189, 51.5189, 51.5189, 51.5189]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[51.5189, 49.0664, 51.5189, 50.6894, 51.5189, 50.9498, 50.5421, 51.5189,
         51.5189, 51.5189, 51.5189, 50.9498, 51.5189, 51.5189, 51.5189, 51.5189]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  52
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [2],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9756, 0.9807, 0.9756, 0.0243, 0.9756, 0.9755, 0.7775, 0.9756, 0.9756,
         0.9756, 0.9756, 0.9755, 0.9756, 0.9756, 0.9756, 0.9756]])
scores: tensor([51.5189, 49.0664, 51.5189, 50.6894, 51.5189, 50.9498, 50.5421, 51.5189,
        51.5189, 51.5189, 51.5189, 50.9498, 51.5189, 51.5189, 51.5189, 51.5189])
new_beam_scores: tensor([[52.4946, 50.0471, 52.4946, 50.7137, 52.4946, 51.9253, 51.3196, 52.4946,
         52.4946, 52.4946, 52.4946, 51.9253, 52.4946, 52.4946, 52.4946, 52.4946]])
new_beam seq: tensor([[1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[52.4946, 50.0471, 52.4946, 50.7137, 52.4946, 51.9253, 51.3196, 52.4946,
         52.4946, 52.4946, 52.4946, 51.9253, 52.4946, 52.4946, 52.4946, 52.4946]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  53
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9982, 0.9960, 0.9982, 1.0000, 0.9982, 0.9981, 0.9634, 0.9982, 0.9982,
         0.9982, 0.9982, 0.9981, 0.9982, 0.9982, 0.9982, 0.9982]])
scores: tensor([52.4946, 50.0471, 52.4946, 50.7137, 52.4946, 51.9253, 51.3196, 52.4946,
        52.4946, 52.4946, 52.4946, 51.9253, 52.4946, 52.4946, 52.4946, 52.4946])
new_beam_scores: tensor([[53.4927, 51.0431, 53.4927, 51.7137, 53.4927, 52.9235, 52.2830, 53.4927,
         53.4927, 53.4927, 53.4927, 52.9235, 53.4927, 53.4927, 53.4927, 53.4927]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[53.4927, 51.0431, 53.4927, 51.7137, 53.4927, 52.9235, 52.2830, 53.4927,
         53.4927, 53.4927, 53.4927, 52.9235, 53.4927, 53.4927, 53.4927, 53.4927]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  54
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9971, 0.9967, 0.9971, 0.9992, 0.9971, 0.9971, 0.9983, 0.9971, 0.9971,
         0.9971, 0.9971, 0.9971, 0.9971, 0.9971, 0.9971, 0.9971]])
scores: tensor([53.4927, 51.0431, 53.4927, 51.7137, 53.4927, 52.9235, 52.2830, 53.4927,
        53.4927, 53.4927, 53.4927, 52.9235, 53.4927, 53.4927, 53.4927, 53.4927])
new_beam_scores: tensor([[54.4899, 52.0398, 54.4899, 52.7128, 54.4899, 53.9206, 53.2813, 54.4899,
         54.4899, 54.4899, 54.4899, 53.9206, 54.4899, 54.4899, 54.4899, 54.4899]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[54.4899, 52.0398, 54.4899, 52.7128, 54.4899, 53.9206, 53.2813, 54.4899,
         54.4899, 54.4899, 54.4899, 53.9206, 54.4899, 54.4899, 54.4899, 54.4899]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  55
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([54.4899, 52.0398, 54.4899, 52.7128, 54.4899, 53.9206, 53.2813, 54.4899,
        54.4899, 54.4899, 54.4899, 53.9206, 54.4899, 54.4899, 54.4899, 54.4899])
new_beam_scores: tensor([[55.4899, 53.0398, 55.4899, 53.7128, 55.4899, 54.9206, 54.2813, 55.4899,
         55.4899, 55.4899, 55.4899, 54.9206, 55.4899, 55.4899, 55.4899, 55.4899]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[55.4899, 53.0398, 55.4899, 53.7128, 55.4899, 54.9206, 54.2813, 55.4899,
         55.4899, 55.4899, 55.4899, 54.9206, 55.4899, 55.4899, 55.4899, 55.4899]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  56
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([55.4899, 53.0398, 55.4899, 53.7128, 55.4899, 54.9206, 54.2813, 55.4899,
        55.4899, 55.4899, 55.4899, 54.9206, 55.4899, 55.4899, 55.4899, 55.4899])
new_beam_scores: tensor([[56.4899, 54.0398, 56.4899, 54.7128, 56.4899, 55.9206, 55.2813, 56.4899,
         56.4899, 56.4899, 56.4899, 55.9206, 56.4899, 56.4899, 56.4899, 56.4899]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[56.4899, 54.0398, 56.4899, 54.7128, 56.4899, 55.9206, 55.2813, 56.4899,
         56.4899, 56.4899, 56.4899, 55.9206, 56.4899, 56.4899, 56.4899, 56.4899]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  57
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([56.4899, 54.0398, 56.4899, 54.7128, 56.4899, 55.9206, 55.2813, 56.4899,
        56.4899, 56.4899, 56.4899, 55.9206, 56.4899, 56.4899, 56.4899, 56.4899])
new_beam_scores: tensor([[57.4899, 55.0398, 57.4899, 55.7128, 57.4899, 56.9206, 56.2813, 57.4899,
         57.4899, 57.4899, 57.4899, 56.9206, 57.4899, 57.4899, 57.4899, 57.4899]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[57.4899, 55.0398, 57.4899, 55.7128, 57.4899, 56.9206, 56.2813, 57.4899,
         57.4899, 57.4899, 57.4899, 56.9206, 57.4899, 57.4899, 57.4899, 57.4899]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  58
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([57.4899, 55.0398, 57.4899, 55.7128, 57.4899, 56.9206, 56.2813, 57.4899,
        57.4899, 57.4899, 57.4899, 56.9206, 57.4899, 57.4899, 57.4899, 57.4899])
new_beam_scores: tensor([[58.4899, 56.0398, 58.4899, 56.7128, 58.4899, 57.9206, 57.2813, 58.4899,
         58.4899, 58.4899, 58.4899, 57.9206, 58.4899, 58.4899, 58.4899, 58.4899]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[58.4899, 56.0398, 58.4899, 56.7128, 58.4899, 57.9206, 57.2813, 58.4899,
         58.4899, 58.4899, 58.4899, 57.9206, 58.4899, 58.4899, 58.4899, 58.4899]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  59
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9868, 0.9882, 0.9868, 0.9892, 0.9868, 0.9868, 0.9883, 0.9868, 0.9868,
         0.9868, 0.9868, 0.9868, 0.9868, 0.9868, 0.9868, 0.9868]])
scores: tensor([58.4899, 56.0398, 58.4899, 56.7128, 58.4899, 57.9206, 57.2813, 58.4899,
        58.4899, 58.4899, 58.4899, 57.9206, 58.4899, 58.4899, 58.4899, 58.4899])
new_beam_scores: tensor([[59.4767, 57.0280, 59.4767, 57.7021, 59.4767, 58.9074, 58.2696, 59.4767,
         59.4767, 59.4767, 59.4767, 58.9074, 59.4767, 59.4767, 59.4767, 59.4767]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[59.4767, 57.0280, 59.4767, 57.7021, 59.4767, 58.9074, 58.2696, 59.4767,
         59.4767, 59.4767, 59.4767, 58.9074, 59.4767, 59.4767, 59.4767, 59.4767]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  60
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([59.4767, 57.0280, 59.4767, 57.7021, 59.4767, 58.9074, 58.2696, 59.4767,
        59.4767, 59.4767, 59.4767, 58.9074, 59.4767, 59.4767, 59.4767, 59.4767])
new_beam_scores: tensor([[60.4767, 58.0280, 60.4767, 58.7021, 60.4767, 59.9074, 59.2696, 60.4767,
         60.4767, 60.4767, 60.4767, 59.9074, 60.4767, 60.4767, 60.4767, 60.4767]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[60.4767, 58.0280, 60.4767, 58.7021, 60.4767, 59.9074, 59.2696, 60.4767,
         60.4767, 60.4767, 60.4767, 59.9074, 60.4767, 60.4767, 60.4767, 60.4767]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  61
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9999, 1.0000, 0.9999, 0.9998, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999,
         0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999]])
scores: tensor([60.4767, 58.0280, 60.4767, 58.7021, 60.4767, 59.9074, 59.2696, 60.4767,
        60.4767, 60.4767, 60.4767, 59.9074, 60.4767, 60.4767, 60.4767, 60.4767])
new_beam_scores: tensor([[61.4766, 59.0280, 61.4766, 59.7018, 61.4766, 60.9074, 60.2695, 61.4766,
         61.4766, 61.4766, 61.4766, 60.9074, 61.4766, 61.4766, 61.4766, 61.4766]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[61.4766, 59.0280, 61.4766, 59.7018, 61.4766, 60.9074, 60.2695, 61.4766,
         61.4766, 61.4766, 61.4766, 60.9074, 61.4766, 61.4766, 61.4766, 61.4766]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  62
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([61.4766, 59.0280, 61.4766, 59.7018, 61.4766, 60.9074, 60.2695, 61.4766,
        61.4766, 61.4766, 61.4766, 60.9074, 61.4766, 61.4766, 61.4766, 61.4766])
new_beam_scores: tensor([[62.4766, 60.0280, 62.4766, 60.7018, 62.4766, 61.9074, 61.2695, 62.4766,
         62.4766, 62.4766, 62.4766, 61.9074, 62.4766, 62.4766, 62.4766, 62.4766]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[62.4766, 60.0280, 62.4766, 60.7018, 62.4766, 61.9074, 61.2695, 62.4766,
         62.4766, 62.4766, 62.4766, 61.9074, 62.4766, 62.4766, 62.4766, 62.4766]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  63
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([62.4766, 60.0280, 62.4766, 60.7018, 62.4766, 61.9074, 61.2695, 62.4766,
        62.4766, 62.4766, 62.4766, 61.9074, 62.4766, 62.4766, 62.4766, 62.4766])
new_beam_scores: tensor([[63.4766, 61.0280, 63.4766, 61.7018, 63.4766, 62.9074, 62.2695, 63.4766,
         63.4766, 63.4766, 63.4766, 62.9074, 63.4766, 63.4766, 63.4766, 63.4766]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[63.4766, 61.0280, 63.4766, 61.7018, 63.4766, 62.9074, 62.2695, 63.4766,
         63.4766, 63.4766, 63.4766, 62.9074, 63.4766, 63.4766, 63.4766, 63.4766]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  64
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([63.4766, 61.0280, 63.4766, 61.7018, 63.4766, 62.9074, 62.2695, 63.4766,
        63.4766, 63.4766, 63.4766, 62.9074, 63.4766, 63.4766, 63.4766, 63.4766])
new_beam_scores: tensor([[64.4766, 62.0280, 64.4766, 62.7018, 64.4766, 63.9074, 63.2695, 64.4766,
         64.4766, 64.4766, 64.4766, 63.9074, 64.4766, 64.4766, 64.4766, 64.4766]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[64.4766, 62.0280, 64.4766, 62.7018, 64.4766, 63.9074, 63.2695, 64.4766,
         64.4766, 64.4766, 64.4766, 63.9074, 64.4766, 64.4766, 64.4766, 64.4766]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  65
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([64.4766, 62.0280, 64.4766, 62.7018, 64.4766, 63.9074, 63.2695, 64.4766,
        64.4766, 64.4766, 64.4766, 63.9074, 64.4766, 64.4766, 64.4766, 64.4766])
new_beam_scores: tensor([[65.4766, 63.0280, 65.4766, 63.7018, 65.4766, 64.9074, 64.2695, 65.4766,
         65.4766, 65.4766, 65.4766, 64.9074, 65.4766, 65.4766, 65.4766, 65.4766]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[65.4766, 63.0280, 65.4766, 63.7018, 65.4766, 64.9074, 64.2695, 65.4766,
         65.4766, 65.4766, 65.4766, 64.9074, 65.4766, 65.4766, 65.4766, 65.4766]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  66
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [1],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([65.4766, 63.0280, 65.4766, 63.7018, 65.4766, 64.9074, 64.2695, 65.4766,
        65.4766, 65.4766, 65.4766, 64.9074, 65.4766, 65.4766, 65.4766, 65.4766])
new_beam_scores: tensor([[66.4766, 64.0280, 66.4766, 64.7018, 66.4766, 65.9074, 65.2695, 66.4766,
         66.4766, 66.4766, 66.4766, 65.9074, 66.4766, 66.4766, 66.4766, 66.4766]])
new_beam seq: tensor([[2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[66.4766, 64.0280, 66.4766, 64.7018, 66.4766, 65.9074, 65.2695, 66.4766,
         66.4766, 66.4766, 66.4766, 65.9074, 66.4766, 66.4766, 66.4766, 66.4766]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  67
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([66.4766, 64.0280, 66.4766, 64.7018, 66.4766, 65.9074, 65.2695, 66.4766,
        66.4766, 66.4766, 66.4766, 65.9074, 66.4766, 66.4766, 66.4766, 66.4766])
new_beam_scores: tensor([[67.4766, 65.0280, 67.4766, 65.7018, 67.4766, 66.9074, 66.2695, 67.4766,
         67.4766, 67.4766, 67.4766, 66.9074, 67.4766, 67.4766, 67.4766, 67.4766]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[67.4766, 65.0280, 67.4766, 65.7018, 67.4766, 66.9074, 66.2695, 67.4766,
         67.4766, 67.4766, 67.4766, 66.9074, 67.4766, 67.4766, 67.4766, 67.4766]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  68
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [0],
        [3],
        [3],
        [3],
        [3],
        [3],
        [0],
        [3],
        [3],
        [0],
        [0],
        [3],
        [3],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.5159, 0.4804, 0.4326, 0.9994, 0.5159, 0.5159, 0.6772, 0.5159, 0.4326,
         0.5159, 0.5159, 0.4333, 0.4326, 0.5159, 0.5159, 0.4326]])
scores: tensor([67.4766, 65.0280, 67.4766, 65.7018, 67.4766, 66.9074, 66.2695, 67.4766,
        67.4766, 67.4766, 67.4766, 66.9074, 67.4766, 67.4766, 67.4766, 67.4766])
new_beam_scores: tensor([[67.9925, 65.5083, 67.9092, 66.7012, 67.9925, 67.4233, 66.9467, 67.9925,
         67.9092, 67.9925, 67.9925, 67.3406, 67.9092, 67.9925, 67.9925, 67.9092]])
new_beam seq: tensor([[3, 3, 0, 3, 3, 3, 3, 3, 0, 3, 3, 0, 0, 3, 3, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[67.9925, 65.5083, 67.9092, 66.7012, 67.9925, 67.4233, 66.9467, 67.9925,
         67.9092, 67.9925, 67.9925, 67.3406, 67.9092, 67.9925, 67.9925, 67.9092]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([3, 3, 0, 3, 3, 3, 3, 3, 0, 3, 3, 0, 0, 3, 3, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  69
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([67.9925, 65.5083, 67.9092, 66.7012, 67.9925, 67.4233, 66.9467, 67.9925,
        67.9092, 67.9925, 67.9925, 67.3406, 67.9092, 67.9925, 67.9925, 67.9092])
new_beam_scores: tensor([[68.9925, 66.5083, 68.9092, 67.7012, 68.9925, 68.4233, 67.9467, 68.9925,
         68.9092, 68.9925, 68.9925, 68.3406, 68.9092, 68.9925, 68.9925, 68.9092]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[68.9925, 66.5083, 68.9092, 67.7012, 68.9925, 68.4233, 67.9467, 68.9925,
         68.9092, 68.9925, 68.9925, 68.3406, 68.9092, 68.9925, 68.9925, 68.9092]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  70
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([68.9925, 66.5083, 68.9092, 67.7012, 68.9925, 68.4233, 67.9467, 68.9925,
        68.9092, 68.9925, 68.9925, 68.3406, 68.9092, 68.9925, 68.9925, 68.9092])
new_beam_scores: tensor([[69.9925, 67.5083, 69.9092, 68.7012, 69.9925, 69.4233, 68.9467, 69.9925,
         69.9092, 69.9925, 69.9925, 69.3406, 69.9092, 69.9925, 69.9925, 69.9092]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[69.9925, 67.5083, 69.9092, 68.7012, 69.9925, 69.4233, 68.9467, 69.9925,
         69.9092, 69.9925, 69.9925, 69.3406, 69.9092, 69.9925, 69.9925, 69.9092]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  71
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([69.9925, 67.5083, 69.9092, 68.7012, 69.9925, 69.4233, 68.9467, 69.9925,
        69.9092, 69.9925, 69.9925, 69.3406, 69.9092, 69.9925, 69.9925, 69.9092])
new_beam_scores: tensor([[70.9925, 68.5083, 70.9092, 69.7012, 70.9925, 70.4233, 69.9467, 70.9925,
         70.9092, 70.9925, 70.9925, 70.3406, 70.9092, 70.9925, 70.9925, 70.9092]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[70.9925, 68.5083, 70.9092, 69.7012, 70.9925, 70.4233, 69.9467, 70.9925,
         70.9092, 70.9925, 70.9925, 70.3406, 70.9092, 70.9925, 70.9925, 70.9092]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  72
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([70.9925, 68.5083, 70.9092, 69.7012, 70.9925, 70.4233, 69.9467, 70.9925,
        70.9092, 70.9925, 70.9925, 70.3406, 70.9092, 70.9925, 70.9925, 70.9092])
new_beam_scores: tensor([[71.9925, 69.5083, 71.9092, 70.7012, 71.9925, 71.4233, 70.9467, 71.9925,
         71.9092, 71.9925, 71.9925, 71.3406, 71.9092, 71.9925, 71.9925, 71.9092]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[71.9925, 69.5083, 71.9092, 70.7012, 71.9925, 71.4233, 70.9467, 71.9925,
         71.9092, 71.9925, 71.9925, 71.3406, 71.9092, 71.9925, 71.9925, 71.9092]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  73
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9721, 0.9161, 0.8817, 0.9990, 0.9721, 0.9721, 0.9999, 0.9721, 0.8817,
         0.9721, 0.9721, 0.8821, 0.8817, 0.9721, 0.9721, 0.8817]])
scores: tensor([71.9925, 69.5083, 71.9092, 70.7012, 71.9925, 71.4233, 70.9467, 71.9925,
        71.9092, 71.9925, 71.9925, 71.3406, 71.9092, 71.9925, 71.9925, 71.9092])
new_beam_scores: tensor([[72.9646, 70.4244, 72.7910, 71.7001, 72.9646, 72.3954, 71.9466, 72.9646,
         72.7910, 72.9646, 72.9646, 72.2227, 72.7910, 72.9646, 72.9646, 72.7910]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[72.9646, 70.4244, 72.7910, 71.7001, 72.9646, 72.3954, 71.9466, 72.9646,
         72.7910, 72.9646, 72.9646, 72.2227, 72.7910, 72.9646, 72.9646, 72.7910]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  74
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([72.9646, 70.4244, 72.7910, 71.7001, 72.9646, 72.3954, 71.9466, 72.9646,
        72.7910, 72.9646, 72.9646, 72.2227, 72.7910, 72.9646, 72.9646, 72.7910])
new_beam_scores: tensor([[73.9646, 71.4244, 73.7910, 72.7001, 73.9646, 73.3954, 72.9466, 73.9646,
         73.7910, 73.9646, 73.9646, 73.2227, 73.7910, 73.9646, 73.9646, 73.7910]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[73.9646, 71.4244, 73.7910, 72.7001, 73.9646, 73.3954, 72.9466, 73.9646,
         73.7910, 73.9646, 73.9646, 73.2227, 73.7910, 73.9646, 73.9646, 73.7910]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  75
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [2],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9924, 0.9995, 0.9932, 0.9732, 0.9924, 0.9927, 0.9984, 0.9924, 0.9932,
         0.9924, 0.9924, 0.9934, 0.9932, 0.9924, 0.9924, 0.9932]])
scores: tensor([73.9646, 71.4244, 73.7910, 72.7001, 73.9646, 73.3954, 72.9466, 73.9646,
        73.7910, 73.9646, 73.9646, 73.2227, 73.7910, 73.9646, 73.9646, 73.7910])
new_beam_scores: tensor([[74.9570, 72.4240, 74.7841, 73.6734, 74.9570, 74.3881, 73.9450, 74.9570,
         74.7841, 74.9570, 74.9570, 74.2162, 74.7841, 74.9570, 74.9570, 74.7841]])
new_beam seq: tensor([[0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[74.9570, 72.4240, 74.7841, 73.6734, 74.9570, 74.3881, 73.9450, 74.9570,
         74.7841, 74.9570, 74.9570, 74.2162, 74.7841, 74.9570, 74.9570, 74.7841]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  76
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([74.9570, 72.4240, 74.7841, 73.6734, 74.9570, 74.3881, 73.9450, 74.9570,
        74.7841, 74.9570, 74.9570, 74.2162, 74.7841, 74.9570, 74.9570, 74.7841])
new_beam_scores: tensor([[75.9570, 73.4240, 75.7841, 74.6734, 75.9570, 75.3881, 74.9450, 75.9570,
         75.7841, 75.9570, 75.9570, 75.2161, 75.7841, 75.9570, 75.9570, 75.7841]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[75.9570, 73.4240, 75.7841, 74.6734, 75.9570, 75.3881, 74.9450, 75.9570,
         75.7841, 75.9570, 75.9570, 75.2161, 75.7841, 75.9570, 75.9570, 75.7841]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  77
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([75.9570, 73.4240, 75.7841, 74.6734, 75.9570, 75.3881, 74.9450, 75.9570,
        75.7841, 75.9570, 75.9570, 75.2161, 75.7841, 75.9570, 75.9570, 75.7841])
new_beam_scores: tensor([[76.9570, 74.4240, 76.7841, 75.6734, 76.9570, 76.3881, 75.9450, 76.9570,
         76.7841, 76.9570, 76.9570, 76.2161, 76.7841, 76.9570, 76.9570, 76.7841]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[76.9570, 74.4240, 76.7841, 75.6734, 76.9570, 76.3881, 75.9450, 76.9570,
         76.7841, 76.9570, 76.9570, 76.2161, 76.7841, 76.9570, 76.9570, 76.7841]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  78
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 0.9951, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([76.9570, 74.4240, 76.7841, 75.6734, 76.9570, 76.3881, 75.9450, 76.9570,
        76.7841, 76.9570, 76.9570, 76.2161, 76.7841, 76.9570, 76.9570, 76.7841])
new_beam_scores: tensor([[77.9570, 75.4240, 77.7841, 76.6685, 77.9570, 77.3881, 76.9450, 77.9570,
         77.7841, 77.9570, 77.9570, 77.2161, 77.7841, 77.9570, 77.9570, 77.7841]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[77.9570, 75.4240, 77.7841, 76.6685, 77.9570, 77.3881, 76.9450, 77.9570,
         77.7841, 77.9570, 77.9570, 77.2161, 77.7841, 77.9570, 77.9570, 77.7841]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  79
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([77.9570, 75.4240, 77.7841, 76.6685, 77.9570, 77.3881, 76.9450, 77.9570,
        77.7841, 77.9570, 77.9570, 77.2161, 77.7841, 77.9570, 77.9570, 77.7841])
new_beam_scores: tensor([[78.9570, 76.4240, 78.7841, 77.6685, 78.9570, 78.3881, 77.9450, 78.9570,
         78.7841, 78.9570, 78.9570, 78.2161, 78.7841, 78.9570, 78.9570, 78.7841]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[78.9570, 76.4240, 78.7841, 77.6685, 78.9570, 78.3881, 77.9450, 78.9570,
         78.7841, 78.9570, 78.9570, 78.2161, 78.7841, 78.9570, 78.9570, 78.7841]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  80
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([78.9570, 76.4240, 78.7841, 77.6685, 78.9570, 78.3881, 77.9450, 78.9570,
        78.7841, 78.9570, 78.9570, 78.2161, 78.7841, 78.9570, 78.9570, 78.7841])
new_beam_scores: tensor([[79.9570, 77.4240, 79.7841, 78.6685, 79.9570, 79.3881, 78.9450, 79.9570,
         79.7841, 79.9570, 79.9570, 79.2161, 79.7841, 79.9570, 79.9570, 79.7841]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[79.9570, 77.4240, 79.7841, 78.6685, 79.9570, 79.3881, 78.9450, 79.9570,
         79.7841, 79.9570, 79.9570, 79.2161, 79.7841, 79.9570, 79.9570, 79.7841]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  81
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([79.9570, 77.4240, 79.7841, 78.6685, 79.9570, 79.3881, 78.9450, 79.9570,
        79.7841, 79.9570, 79.9570, 79.2161, 79.7841, 79.9570, 79.9570, 79.7841])
new_beam_scores: tensor([[80.9570, 78.4240, 80.7841, 79.6685, 80.9570, 80.3881, 79.9450, 80.9570,
         80.7841, 80.9570, 80.9570, 80.2161, 80.7841, 80.9570, 80.9570, 80.7841]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[80.9570, 78.4240, 80.7841, 79.6685, 80.9570, 80.3881, 79.9450, 80.9570,
         80.7841, 80.9570, 80.9570, 80.2161, 80.7841, 80.9570, 80.9570, 80.7841]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  82
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([80.9570, 78.4240, 80.7841, 79.6685, 80.9570, 80.3881, 79.9450, 80.9570,
        80.7841, 80.9570, 80.9570, 80.2161, 80.7841, 80.9570, 80.9570, 80.7841])
new_beam_scores: tensor([[81.9570, 79.4240, 81.7841, 80.6685, 81.9570, 81.3881, 80.9450, 81.9570,
         81.7841, 81.9570, 81.9570, 81.2161, 81.7841, 81.9570, 81.9570, 81.7841]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[81.9570, 79.4240, 81.7841, 80.6685, 81.9570, 81.3881, 80.9450, 81.9570,
         81.7841, 81.9570, 81.9570, 81.2161, 81.7841, 81.9570, 81.9570, 81.7841]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  83
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([81.9570, 79.4240, 81.7841, 80.6685, 81.9570, 81.3881, 80.9450, 81.9570,
        81.7841, 81.9570, 81.9570, 81.2161, 81.7841, 81.9570, 81.9570, 81.7841])
new_beam_scores: tensor([[82.9570, 80.4240, 82.7841, 81.6685, 82.9570, 82.3881, 81.9450, 82.9570,
         82.7841, 82.9570, 82.9570, 82.2161, 82.7841, 82.9570, 82.9570, 82.7841]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[82.9570, 80.4240, 82.7841, 81.6685, 82.9570, 82.3881, 81.9450, 82.9570,
         82.7841, 82.9570, 82.9570, 82.2161, 82.7841, 82.9570, 82.9570, 82.7841]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  84
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([82.9570, 80.4240, 82.7841, 81.6685, 82.9570, 82.3881, 81.9450, 82.9570,
        82.7841, 82.9570, 82.9570, 82.2161, 82.7841, 82.9570, 82.9570, 82.7841])
new_beam_scores: tensor([[83.9570, 81.4240, 83.7841, 82.6685, 83.9570, 83.3881, 82.9450, 83.9570,
         83.7841, 83.9570, 83.9570, 83.2161, 83.7841, 83.9570, 83.9570, 83.7841]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[83.9570, 81.4240, 83.7841, 82.6685, 83.9570, 83.3881, 82.9450, 83.9570,
         83.7841, 83.9570, 83.9570, 83.2161, 83.7841, 83.9570, 83.9570, 83.7841]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  85
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([83.9570, 81.4240, 83.7841, 82.6685, 83.9570, 83.3881, 82.9450, 83.9570,
        83.7841, 83.9570, 83.9570, 83.2161, 83.7841, 83.9570, 83.9570, 83.7841])
new_beam_scores: tensor([[84.9570, 82.4240, 84.7841, 83.6685, 84.9570, 84.3881, 83.9450, 84.9570,
         84.7841, 84.9570, 84.9570, 84.2161, 84.7841, 84.9570, 84.9570, 84.7841]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[84.9570, 82.4240, 84.7841, 83.6685, 84.9570, 84.3881, 83.9450, 84.9570,
         84.7841, 84.9570, 84.9570, 84.2161, 84.7841, 84.9570, 84.9570, 84.7841]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  86
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([84.9570, 82.4240, 84.7841, 83.6685, 84.9570, 84.3881, 83.9450, 84.9570,
        84.7841, 84.9570, 84.9570, 84.2161, 84.7841, 84.9570, 84.9570, 84.7841])
new_beam_scores: tensor([[85.9570, 83.4240, 85.7841, 84.6685, 85.9570, 85.3881, 84.9450, 85.9570,
         85.7841, 85.9570, 85.9570, 85.2161, 85.7841, 85.9570, 85.9570, 85.7841]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[85.9570, 83.4240, 85.7841, 84.6685, 85.9570, 85.3881, 84.9450, 85.9570,
         85.7841, 85.9570, 85.9570, 85.2161, 85.7841, 85.9570, 85.9570, 85.7841]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  87
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([85.9570, 83.4240, 85.7841, 84.6685, 85.9570, 85.3881, 84.9450, 85.9570,
        85.7841, 85.9570, 85.9570, 85.2161, 85.7841, 85.9570, 85.9570, 85.7841])
new_beam_scores: tensor([[86.9570, 84.4240, 86.7841, 85.6685, 86.9570, 86.3881, 85.9450, 86.9570,
         86.7841, 86.9570, 86.9570, 86.2161, 86.7841, 86.9570, 86.9570, 86.7841]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[86.9570, 84.4240, 86.7841, 85.6685, 86.9570, 86.3881, 85.9450, 86.9570,
         86.7841, 86.9570, 86.9570, 86.2161, 86.7841, 86.9570, 86.9570, 86.7841]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  88
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9999, 0.9998, 0.9999, 0.9997, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999,
         0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999]])
scores: tensor([86.9570, 84.4240, 86.7841, 85.6685, 86.9570, 86.3881, 85.9450, 86.9570,
        86.7841, 86.9570, 86.9570, 86.2161, 86.7841, 86.9570, 86.9570, 86.7841])
new_beam_scores: tensor([[87.9569, 85.4237, 87.7841, 86.6683, 87.9569, 87.3880, 86.9449, 87.9569,
         87.7841, 87.9569, 87.9569, 87.2161, 87.7841, 87.9569, 87.9569, 87.7841]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[87.9569, 85.4237, 87.7841, 86.6683, 87.9569, 87.3880, 86.9449, 87.9569,
         87.7841, 87.9569, 87.9569, 87.2161, 87.7841, 87.9569, 87.9569, 87.7841]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  89
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([87.9569, 85.4237, 87.7841, 86.6683, 87.9569, 87.3880, 86.9449, 87.9569,
        87.7841, 87.9569, 87.9569, 87.2161, 87.7841, 87.9569, 87.9569, 87.7841])
new_beam_scores: tensor([[88.9569, 86.4237, 88.7841, 87.6683, 88.9569, 88.3880, 87.9449, 88.9569,
         88.7841, 88.9569, 88.9569, 88.2161, 88.7841, 88.9569, 88.9569, 88.7841]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[88.9569, 86.4237, 88.7841, 87.6683, 88.9569, 88.3880, 87.9449, 88.9569,
         88.7841, 88.9569, 88.9569, 88.2161, 88.7841, 88.9569, 88.9569, 88.7841]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  90
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([88.9569, 86.4237, 88.7841, 87.6683, 88.9569, 88.3880, 87.9449, 88.9569,
        88.7841, 88.9569, 88.9569, 88.2161, 88.7841, 88.9569, 88.9569, 88.7841])
new_beam_scores: tensor([[89.9569, 87.4237, 89.7841, 88.6683, 89.9569, 89.3880, 88.9449, 89.9569,
         89.7841, 89.9569, 89.9569, 89.2161, 89.7841, 89.9569, 89.9569, 89.7841]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[89.9569, 87.4237, 89.7841, 88.6683, 89.9569, 89.3880, 88.9449, 89.9569,
         89.7841, 89.9569, 89.9569, 89.2161, 89.7841, 89.9569, 89.9569, 89.7841]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  91
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([89.9569, 87.4237, 89.7841, 88.6683, 89.9569, 89.3880, 88.9449, 89.9569,
        89.7841, 89.9569, 89.9569, 89.2161, 89.7841, 89.9569, 89.9569, 89.7841])
new_beam_scores: tensor([[90.9569, 88.4237, 90.7841, 89.6683, 90.9569, 90.3880, 89.9449, 90.9569,
         90.7841, 90.9569, 90.9569, 90.2161, 90.7841, 90.9569, 90.9569, 90.7841]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[90.9569, 88.4237, 90.7841, 89.6683, 90.9569, 90.3880, 89.9449, 90.9569,
         90.7841, 90.9569, 90.9569, 90.2161, 90.7841, 90.9569, 90.9569, 90.7841]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  92
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9998, 1.0000, 1.0000, 1.0000,
         1.0000, 1.0000, 0.9998, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([90.9569, 88.4237, 90.7841, 89.6683, 90.9569, 90.3880, 89.9449, 90.9569,
        90.7841, 90.9569, 90.9569, 90.2161, 90.7841, 90.9569, 90.9569, 90.7841])
new_beam_scores: tensor([[91.9569, 89.4237, 91.7840, 90.6683, 91.9569, 91.3879, 90.9449, 91.9569,
         91.7840, 91.9569, 91.9569, 91.2159, 91.7840, 91.9569, 91.9569, 91.7840]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[91.9569, 89.4237, 91.7840, 90.6683, 91.9569, 91.3879, 90.9449, 91.9569,
         91.7840, 91.9569, 91.9569, 91.2159, 91.7840, 91.9569, 91.9569, 91.7840]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  93
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([91.9569, 89.4237, 91.7840, 90.6683, 91.9569, 91.3879, 90.9449, 91.9569,
        91.7840, 91.9569, 91.9569, 91.2159, 91.7840, 91.9569, 91.9569, 91.7840])
new_beam_scores: tensor([[92.9569, 90.4237, 92.7840, 91.6683, 92.9569, 92.3879, 91.9449, 92.9569,
         92.7840, 92.9569, 92.9569, 92.2159, 92.7840, 92.9569, 92.9569, 92.7840]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[92.9569, 90.4237, 92.7840, 91.6683, 92.9569, 92.3879, 91.9449, 92.9569,
         92.7840, 92.9569, 92.9569, 92.2159, 92.7840, 92.9569, 92.9569, 92.7840]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  94
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([92.9569, 90.4237, 92.7840, 91.6683, 92.9569, 92.3879, 91.9449, 92.9569,
        92.7840, 92.9569, 92.9569, 92.2159, 92.7840, 92.9569, 92.9569, 92.7840])
new_beam_scores: tensor([[93.9569, 91.4237, 93.7840, 92.6683, 93.9569, 93.3879, 92.9449, 93.9569,
         93.7840, 93.9569, 93.9569, 93.2159, 93.7840, 93.9569, 93.9569, 93.7840]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[93.9569, 91.4237, 93.7840, 92.6683, 93.9569, 93.3879, 92.9449, 93.9569,
         93.7840, 93.9569, 93.9569, 93.2159, 93.7840, 93.9569, 93.9569, 93.7840]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  95
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([93.9569, 91.4237, 93.7840, 92.6683, 93.9569, 93.3879, 92.9449, 93.9569,
        93.7840, 93.9569, 93.9569, 93.2159, 93.7840, 93.9569, 93.9569, 93.7840])
new_beam_scores: tensor([[94.9569, 92.4237, 94.7840, 93.6683, 94.9569, 94.3879, 93.9449, 94.9569,
         94.7840, 94.9569, 94.9569, 94.2159, 94.7840, 94.9569, 94.9569, 94.7840]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[94.9569, 92.4237, 94.7840, 93.6683, 94.9569, 94.3879, 93.9449, 94.9569,
         94.7840, 94.9569, 94.9569, 94.2159, 94.7840, 94.9569, 94.9569, 94.7840]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  96
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([94.9569, 92.4237, 94.7840, 93.6683, 94.9569, 94.3879, 93.9449, 94.9569,
        94.7840, 94.9569, 94.9569, 94.2159, 94.7840, 94.9569, 94.9569, 94.7840])
new_beam_scores: tensor([[95.9569, 93.4237, 95.7840, 94.6683, 95.9569, 95.3879, 94.9449, 95.9569,
         95.7840, 95.9569, 95.9569, 95.2159, 95.7840, 95.9569, 95.9569, 95.7840]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[95.9569, 93.4237, 95.7840, 94.6683, 95.9569, 95.3879, 94.9449, 95.9569,
         95.7840, 95.9569, 95.9569, 95.2159, 95.7840, 95.9569, 95.9569, 95.7840]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  97
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([95.9569, 93.4237, 95.7840, 94.6683, 95.9569, 95.3879, 94.9449, 95.9569,
        95.7840, 95.9569, 95.9569, 95.2159, 95.7840, 95.9569, 95.9569, 95.7840])
new_beam_scores: tensor([[96.9569, 94.4237, 96.7840, 95.6683, 96.9569, 96.3879, 95.9449, 96.9569,
         96.7840, 96.9569, 96.9569, 96.2159, 96.7840, 96.9569, 96.9569, 96.7840]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[96.9569, 94.4237, 96.7840, 95.6683, 96.9569, 96.3879, 95.9449, 96.9569,
         96.7840, 96.9569, 96.9569, 96.2159, 96.7840, 96.9569, 96.9569, 96.7840]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  98
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([96.9569, 94.4237, 96.7840, 95.6683, 96.9569, 96.3879, 95.9449, 96.9569,
        96.7840, 96.9569, 96.9569, 96.2159, 96.7840, 96.9569, 96.9569, 96.7840])
new_beam_scores: tensor([[97.9569, 95.4237, 97.7840, 96.6683, 97.9569, 97.3879, 96.9449, 97.9569,
         97.7840, 97.9569, 97.9569, 97.2159, 97.7840, 97.9569, 97.9569, 97.7840]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[97.9569, 95.4237, 97.7840, 96.6683, 97.9569, 97.3879, 96.9449, 97.9569,
         97.7840, 97.9569, 97.9569, 97.2159, 97.7840, 97.9569, 97.9569, 97.7840]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  99
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([97.9569, 95.4237, 97.7840, 96.6683, 97.9569, 97.3879, 96.9449, 97.9569,
        97.7840, 97.9569, 97.9569, 97.2159, 97.7840, 97.9569, 97.9569, 97.7840])
new_beam_scores: tensor([[98.9569, 96.4237, 98.7840, 97.6683, 98.9569, 98.3879, 97.9449, 98.9569,
         98.7840, 98.9569, 98.9569, 98.2159, 98.7840, 98.9569, 98.9569, 98.7840]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[98.9569, 96.4237, 98.7840, 97.6683, 98.9569, 98.3879, 97.9449, 98.9569,
         98.7840, 98.9569, 98.9569, 98.2159, 98.7840, 98.9569, 98.9569, 98.7840]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  100
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([98.9569, 96.4237, 98.7840, 97.6683, 98.9569, 98.3879, 97.9449, 98.9569,
        98.7840, 98.9569, 98.9569, 98.2159, 98.7840, 98.9569, 98.9569, 98.7840])
new_beam_scores: tensor([[99.9569, 97.4237, 99.7840, 98.6683, 99.9569, 99.3879, 98.9449, 99.9569,
         99.7840, 99.9569, 99.9569, 99.2159, 99.7840, 99.9569, 99.9569, 99.7840]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[99.9569, 97.4237, 99.7840, 98.6683, 99.9569, 99.3879, 98.9449, 99.9569,
         99.7840, 99.9569, 99.9569, 99.2159, 99.7840, 99.9569, 99.9569, 99.7840]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  101
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [3],
        [3],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [3],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.7114, 0.7821, 0.7233, 0.5104, 0.2886, 0.7420, 0.7110, 0.7114, 0.7233,
         0.7114, 0.7114, 0.7531, 0.2767, 0.7114, 0.7114, 0.7233]])
scores: tensor([99.9569, 97.4237, 99.7840, 98.6683, 99.9569, 99.3879, 98.9449, 99.9569,
        99.7840, 99.9569, 99.9569, 99.2159, 99.7840, 99.9569, 99.9569, 99.7840])
new_beam_scores: tensor([[100.6683,  98.2058, 100.5074,  99.1786, 100.2455, 100.1298,  99.6559,
         100.6683, 100.5074, 100.6683, 100.6683,  99.9690, 100.0607, 100.6683,
         100.6683, 100.5074]])
new_beam seq: tensor([[2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[100.6683,  98.2058, 100.5074,  99.1786, 100.2455, 100.1298,  99.6559,
         100.6683, 100.5074, 100.6683, 100.6683,  99.9690, 100.0607, 100.6683,
         100.6683, 100.5074]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  102
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([100.6683,  98.2058, 100.5074,  99.1786, 100.2455, 100.1298,  99.6559,
        100.6683, 100.5074, 100.6683, 100.6683,  99.9690, 100.0607, 100.6683,
        100.6683, 100.5074])
new_beam_scores: tensor([[101.6683,  99.2058, 101.5074, 100.1786, 101.2455, 101.1298, 100.6559,
         101.6683, 101.5074, 101.6683, 101.6683, 100.9690, 101.0607, 101.6683,
         101.6683, 101.5074]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[101.6683,  99.2058, 101.5074, 100.1786, 101.2455, 101.1298, 100.6559,
         101.6683, 101.5074, 101.6683, 101.6683, 100.9690, 101.0607, 101.6683,
         101.6683, 101.5074]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  103
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([101.6683,  99.2058, 101.5074, 100.1786, 101.2455, 101.1298, 100.6559,
        101.6683, 101.5074, 101.6683, 101.6683, 100.9690, 101.0607, 101.6683,
        101.6683, 101.5074])
new_beam_scores: tensor([[102.6683, 100.2058, 102.5074, 101.1786, 102.2455, 102.1298, 101.6559,
         102.6683, 102.5074, 102.6683, 102.6683, 101.9690, 102.0607, 102.6683,
         102.6683, 102.5074]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[102.6683, 100.2058, 102.5074, 101.1786, 102.2455, 102.1298, 101.6559,
         102.6683, 102.5074, 102.6683, 102.6683, 101.9690, 102.0607, 102.6683,
         102.6683, 102.5074]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  104
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([102.6683, 100.2058, 102.5074, 101.1786, 102.2455, 102.1298, 101.6559,
        102.6683, 102.5074, 102.6683, 102.6683, 101.9690, 102.0607, 102.6683,
        102.6683, 102.5074])
new_beam_scores: tensor([[103.6683, 101.2058, 103.5074, 102.1786, 103.2455, 103.1298, 102.6559,
         103.6683, 103.5074, 103.6683, 103.6683, 102.9690, 103.0607, 103.6683,
         103.6683, 103.5074]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[103.6683, 101.2058, 103.5074, 102.1786, 103.2455, 103.1298, 102.6559,
         103.6683, 103.5074, 103.6683, 103.6683, 102.9690, 103.0607, 103.6683,
         103.6683, 103.5074]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  105
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([103.6683, 101.2058, 103.5074, 102.1786, 103.2455, 103.1298, 102.6559,
        103.6683, 103.5074, 103.6683, 103.6683, 102.9690, 103.0607, 103.6683,
        103.6683, 103.5074])
new_beam_scores: tensor([[104.6683, 102.2058, 104.5074, 103.1786, 104.2455, 104.1298, 103.6559,
         104.6683, 104.5074, 104.6683, 104.6683, 103.9690, 104.0607, 104.6683,
         104.6683, 104.5074]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[104.6683, 102.2058, 104.5074, 103.1786, 104.2455, 104.1298, 103.6559,
         104.6683, 104.5074, 104.6683, 104.6683, 103.9690, 104.0607, 104.6683,
         104.6683, 104.5074]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  106
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1.0000, 0.9991, 1.0000, 0.9996, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000,
         1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000]])
scores: tensor([104.6683, 102.2058, 104.5074, 103.1786, 104.2455, 104.1298, 103.6559,
        104.6683, 104.5074, 104.6683, 104.6683, 103.9690, 104.0607, 104.6683,
        104.6683, 104.5074])
new_beam_scores: tensor([[105.6683, 103.2048, 105.5073, 104.1782, 105.2454, 105.1298, 104.6558,
         105.6683, 105.5073, 105.6683, 105.6683, 104.9689, 105.0607, 105.6683,
         105.6683, 105.5073]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[105.6683, 103.2048, 105.5073, 104.1782, 105.2454, 105.1298, 104.6558,
         105.6683, 105.5073, 105.6683, 105.6683, 104.9689, 105.0607, 105.6683,
         105.6683, 105.5073]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  107
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([105.6683, 103.2048, 105.5073, 104.1782, 105.2454, 105.1298, 104.6558,
        105.6683, 105.5073, 105.6683, 105.6683, 104.9689, 105.0607, 105.6683,
        105.6683, 105.5073])
new_beam_scores: tensor([[106.6683, 104.2048, 106.5073, 105.1782, 106.2454, 106.1298, 105.6558,
         106.6683, 106.5073, 106.6683, 106.6683, 105.9689, 106.0607, 106.6683,
         106.6683, 106.5073]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[106.6683, 104.2048, 106.5073, 105.1782, 106.2454, 106.1298, 105.6558,
         106.6683, 106.5073, 106.6683, 106.6683, 105.9689, 106.0607, 106.6683,
         106.6683, 106.5073]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  108
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([106.6683, 104.2048, 106.5073, 105.1782, 106.2454, 106.1298, 105.6558,
        106.6683, 106.5073, 106.6683, 106.6683, 105.9689, 106.0607, 106.6683,
        106.6683, 106.5073])
new_beam_scores: tensor([[107.6683, 105.2048, 107.5073, 106.1782, 107.2454, 107.1298, 106.6558,
         107.6683, 107.5073, 107.6683, 107.6683, 106.9689, 107.0607, 107.6683,
         107.6683, 107.5073]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[107.6683, 105.2048, 107.5073, 106.1782, 107.2454, 107.1298, 106.6558,
         107.6683, 107.5073, 107.6683, 107.6683, 106.9689, 107.0607, 107.6683,
         107.6683, 107.5073]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  109
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([107.6683, 105.2048, 107.5073, 106.1782, 107.2454, 107.1298, 106.6558,
        107.6683, 107.5073, 107.6683, 107.6683, 106.9689, 107.0607, 107.6683,
        107.6683, 107.5073])
new_beam_scores: tensor([[108.6683, 106.2048, 108.5073, 107.1782, 108.2454, 108.1298, 107.6558,
         108.6683, 108.5073, 108.6683, 108.6683, 107.9689, 108.0607, 108.6683,
         108.6683, 108.5073]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[108.6683, 106.2048, 108.5073, 107.1782, 108.2454, 108.1298, 107.6558,
         108.6683, 108.5073, 108.6683, 108.6683, 107.9689, 108.0607, 108.6683,
         108.6683, 108.5073]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  110
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [1],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([108.6683, 106.2048, 108.5073, 107.1782, 108.2454, 108.1298, 107.6558,
        108.6683, 108.5073, 108.6683, 108.6683, 107.9689, 108.0607, 108.6683,
        108.6683, 108.5073])
new_beam_scores: tensor([[109.6683, 107.2048, 109.5073, 108.1782, 109.2454, 109.1298, 108.6558,
         109.6683, 109.5073, 109.6683, 109.6683, 108.9689, 109.0607, 109.6683,
         109.6683, 109.5073]])
new_beam seq: tensor([[3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[109.6683, 107.2048, 109.5073, 108.1782, 109.2454, 109.1298, 108.6558,
         109.6683, 109.5073, 109.6683, 109.6683, 108.9689, 109.0607, 109.6683,
         109.6683, 109.5073]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  111
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([109.6683, 107.2048, 109.5073, 108.1782, 109.2454, 109.1298, 108.6558,
        109.6683, 109.5073, 109.6683, 109.6683, 108.9689, 109.0607, 109.6683,
        109.6683, 109.5073])
new_beam_scores: tensor([[110.6683, 108.2048, 110.5073, 109.1782, 110.2454, 110.1298, 109.6558,
         110.6683, 110.5073, 110.6683, 110.6683, 109.9689, 110.0607, 110.6683,
         110.6683, 110.5073]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[110.6683, 108.2048, 110.5073, 109.1782, 110.2454, 110.1298, 109.6558,
         110.6683, 110.5073, 110.6683, 110.6683, 109.9689, 110.0607, 110.6683,
         110.6683, 110.5073]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  112
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([110.6683, 108.2048, 110.5073, 109.1782, 110.2454, 110.1298, 109.6558,
        110.6683, 110.5073, 110.6683, 110.6683, 109.9689, 110.0607, 110.6683,
        110.6683, 110.5073])
new_beam_scores: tensor([[111.6683, 109.2048, 111.5073, 110.1782, 111.2454, 111.1298, 110.6558,
         111.6683, 111.5073, 111.6683, 111.6683, 110.9689, 111.0607, 111.6683,
         111.6683, 111.5073]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[111.6683, 109.2048, 111.5073, 110.1782, 111.2454, 111.1298, 110.6558,
         111.6683, 111.5073, 111.6683, 111.6683, 110.9689, 111.0607, 111.6683,
         111.6683, 111.5073]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  113
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[0.9991, 0.9978, 0.9996, 1.0000, 0.9992, 0.9991, 0.9980, 0.9991, 0.9996,
         0.9991, 0.9991, 0.9996, 0.9996, 0.9991, 0.9991, 0.9996]])
scores: tensor([111.6683, 109.2048, 111.5073, 110.1782, 111.2454, 111.1298, 110.6558,
        111.6683, 111.5073, 111.6683, 111.6683, 110.9689, 111.0607, 111.6683,
        111.6683, 111.5073])
new_beam_scores: tensor([[112.6674, 110.2027, 112.5069, 111.1782, 112.2446, 112.1289, 111.6538,
         112.6674, 112.5069, 112.6674, 112.6674, 111.9685, 112.0603, 112.6674,
         112.6674, 112.5069]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[112.6674, 110.2027, 112.5069, 111.1782, 112.2446, 112.1289, 111.6538,
         112.6674, 112.5069, 112.6674, 112.6674, 111.9685, 112.0603, 112.6674,
         112.6674, 112.5069]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  114
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([112.6674, 110.2027, 112.5069, 111.1782, 112.2446, 112.1289, 111.6538,
        112.6674, 112.5069, 112.6674, 112.6674, 111.9685, 112.0603, 112.6674,
        112.6674, 112.5069])
new_beam_scores: tensor([[113.6674, 111.2027, 113.5069, 112.1782, 113.2446, 113.1289, 112.6538,
         113.6674, 113.5069, 113.6674, 113.6674, 112.9685, 113.0603, 113.6674,
         113.6674, 113.5069]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[113.6674, 111.2027, 113.5069, 112.1782, 113.2446, 113.1289, 112.6538,
         113.6674, 113.5069, 113.6674, 113.6674, 112.9685, 113.0603, 113.6674,
         113.6674, 113.5069]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  115
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([113.6674, 111.2027, 113.5069, 112.1782, 113.2446, 113.1289, 112.6538,
        113.6674, 113.5069, 113.6674, 113.6674, 112.9685, 113.0603, 113.6674,
        113.6674, 113.5069])
new_beam_scores: tensor([[114.6674, 112.2027, 114.5069, 113.1782, 114.2446, 114.1289, 113.6538,
         114.6674, 114.5069, 114.6674, 114.6674, 113.9685, 114.0603, 114.6674,
         114.6674, 114.5069]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[114.6674, 112.2027, 114.5069, 113.1782, 114.2446, 114.1289, 113.6538,
         114.6674, 114.5069, 114.6674, 114.6674, 113.9685, 114.0603, 114.6674,
         114.6674, 114.5069]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  116
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([114.6674, 112.2027, 114.5069, 113.1782, 114.2446, 114.1289, 113.6538,
        114.6674, 114.5069, 114.6674, 114.6674, 113.9685, 114.0603, 114.6674,
        114.6674, 114.5069])
new_beam_scores: tensor([[115.6674, 113.2027, 115.5069, 114.1782, 115.2446, 115.1289, 114.6538,
         115.6674, 115.5069, 115.6674, 115.6674, 114.9685, 115.0603, 115.6674,
         115.6674, 115.5069]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[115.6674, 113.2027, 115.5069, 114.1782, 115.2446, 115.1289, 114.6538,
         115.6674, 115.5069, 115.6674, 115.6674, 114.9685, 115.0603, 115.6674,
         115.6674, 115.5069]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  117
top_log_probs torch.Size([16, 4])
top_tokens tensor([[3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3],
        [3]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([115.6674, 113.2027, 115.5069, 114.1782, 115.2446, 115.1289, 114.6538,
        115.6674, 115.5069, 115.6674, 115.6674, 114.9685, 115.0603, 115.6674,
        115.6674, 115.5069])
new_beam_scores: tensor([[116.6674, 114.2027, 116.5069, 115.1782, 116.2446, 116.1289, 115.6538,
         116.6674, 116.5069, 116.6674, 116.6674, 115.9685, 116.0603, 116.6674,
         116.6674, 116.5069]])
new_beam seq: tensor([[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[116.6674, 114.2027, 116.5069, 115.1782, 116.2446, 116.1289, 115.6538,
         116.6674, 116.5069, 116.6674, 116.6674, 115.9685, 116.0603, 116.6674,
         116.6674, 116.5069]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 0, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  118
top_log_probs torch.Size([16, 4])
top_tokens tensor([[1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([116.6674, 114.2027, 116.5069, 115.1782, 116.2446, 116.1289, 115.6538,
        116.6674, 116.5069, 116.6674, 116.6674, 115.9685, 116.0603, 116.6674,
        116.6674, 116.5069])
new_beam_scores: tensor([[117.6674, 115.2027, 117.5069, 116.1782, 117.2446, 117.1289, 116.6538,
         117.6674, 117.5069, 117.6674, 117.6674, 116.9685, 117.0603, 117.6674,
         117.6674, 117.5069]])
new_beam seq: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[117.6674, 115.2027, 117.5069, 116.1782, 117.2446, 117.1289, 116.6538,
         117.6674, 117.5069, 117.6674, 117.6674, 116.9685, 117.0603, 117.6674,
         117.6674, 117.5069]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 1, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [-1.0817,  3.5680, -0.8097, -0.8459],
        [ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  119
top_log_probs torch.Size([16, 4])
top_tokens tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([117.6674, 115.2027, 117.5069, 116.1782, 117.2446, 117.1289, 116.6538,
        117.6674, 117.5069, 117.6674, 117.6674, 116.9685, 117.0603, 117.6674,
        117.6674, 117.5069])
new_beam_scores: tensor([[118.6674, 116.2027, 118.5069, 117.1782, 118.2446, 118.1289, 117.6538,
         118.6674, 118.5069, 118.6674, 118.6674, 117.9685, 118.0603, 118.6674,
         118.6674, 118.5069]])
new_beam seq: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[118.6674, 116.2027, 118.5069, 117.1782, 118.2446, 118.1289, 117.6538,
         118.6674, 118.5069, 118.6674, 118.6674, 117.9685, 118.0603, 118.6674,
         118.6674, 118.5069]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 1, 0, 0], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [-1.0817,  3.5680, -0.8097, -0.8459],
        [ 3.0685, -1.2722, -1.4845, -1.6223],
        [ 0.0000,  0.0000,  0.0000,  0.0000]])
h_S size: torch.Size([1936, 4])
Iteration :  120
top_log_probs torch.Size([16, 4])
top_tokens tensor([[2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2],
        [2]])
size top_tokens: torch.Size([16, 1])
size of new_beam_seq: torch.Size([1, 1936])
size of new_beam_h_S: torch.Size([1, 1936, 4])
size of new_beam_logits: torch.Size([1, 1936, 4])
size log probs: torch.Size([16, 4])
top tokens size: torch.Size([16, 1])
top_log_probs_beam.size: torch.Size([1, 16])
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
scores: tensor([118.6674, 116.2027, 118.5069, 117.1782, 118.2446, 118.1289, 117.6538,
        118.6674, 118.5069, 118.6674, 118.6674, 117.9685, 118.0603, 118.6674,
        118.6674, 118.5069])
new_beam_scores: tensor([[119.6674, 117.2027, 119.5069, 118.1782, 119.2446, 119.1289, 118.6538,
         119.6674, 119.5069, 119.6674, 119.6674, 118.9685, 119.0603, 119.6674,
         119.6674, 119.5069]])
new_beam seq: tensor([[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], dtype=torch.int32)
new_beam_logits size: torch.Size([1, 1936, 4])
new_beam_h_S size: torch.Size([1, 1936, 4])
sorted_scores: tensor([[119.6674, 117.2027, 119.5069, 118.1782, 119.2446, 119.1289, 118.6538,
         119.6674, 119.5069, 119.6674, 119.6674, 118.9685, 119.0603, 119.6674,
         119.6674, 119.5069]])
sorted_indices: tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size of expanded_indices: torch.Size([1, 16, 4])
size of new_beam_seq_sorted: torch.Size([1, 1936])
new_beam_seq_sorted reshaped: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=torch.int32)
seq: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=torch.int32)
size seq: torch.Size([16])
seq: tensor([1, 1, 2,  ..., 1, 0, 2], dtype=torch.int32)
logits: tensor([[ 0.4704,  1.8980, -0.6198, -0.7725],
        [ 0.4966,  1.0122,  0.5398, -0.4667],
        [ 0.0226,  0.4265,  1.1643, -0.2096],
        ...,
        [-1.0817,  3.5680, -0.8097, -0.8459],
        [ 3.0685, -1.2722, -1.4845, -1.6223],
        [-1.5891, -1.4347,  3.4108, -1.1721]])
h_S size: torch.Size([1936, 4])
tensor([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
size expanded indices: torch.Size([1, 16, 121])
tensor([[[1, 1, 2,  ..., 1, 0, 2],
         [1, 1, 2,  ..., 1, 0, 2],
         [1, 1, 2,  ..., 1, 0, 2],
         ...,
         [1, 1, 2,  ..., 1, 0, 2],
         [1, 1, 2,  ..., 1, 0, 2],
         [1, 1, 2,  ..., 1, 0, 2]]], dtype=torch.int32)
final_scores: tensor([119.6674, 117.2027, 119.5069, 118.1782, 119.2446, 119.1289, 118.6538,
        119.6674, 119.5069, 119.6674, 119.6674, 118.9685, 119.0603, 119.6674,
        119.6674, 119.5069])
final_seq: tensor([[1, 1, 2,  ..., 1, 0, 2],
        [1, 1, 2,  ..., 1, 0, 2],
        [1, 1, 2,  ..., 1, 0, 2],
        ...,
        [1, 1, 2,  ..., 1, 0, 2],
        [1, 1, 2,  ..., 1, 0, 2],
        [1, 1, 2,  ..., 1, 0, 2]], dtype=torch.int32)
final_logits: tensor([[[ 0.4704,  1.8980, -0.6198, -0.7725],
         [ 0.4966,  1.0122,  0.5398, -0.4667],
         [ 0.0226,  0.4265,  1.1643, -0.2096],
         ...,
         [-1.0784,  3.5687, -0.8109, -0.8474],
         [ 3.0712, -1.2661, -1.4790, -1.6210],
         [-1.5812, -1.4269,  3.4157, -1.1819]],

        [[ 0.4704,  1.8980, -0.6198, -0.7725],
         [ 0.4966,  1.0122,  0.5398, -0.4667],
         [ 0.0226,  0.4265,  1.1643, -0.2096],
         ...,
         [-1.0765,  3.5710, -0.8097, -0.8484],
         [ 3.0664, -1.2618, -1.4744, -1.6175],
         [-1.5804, -1.4263,  3.4169, -1.1818]],

        [[ 0.4704,  1.8980, -0.6198, -0.7725],
         [ 0.4966,  1.0122,  0.5398, -0.4667],
         [ 0.0226,  0.4265,  1.1643, -0.2096],
         ...,
         [-1.0817,  3.5680, -0.8097, -0.8459],
         [ 3.0685, -1.2722, -1.4845, -1.6223],
         [-1.5891, -1.4347,  3.4108, -1.1721]],

        ...,

        [[ 0.4704,  1.8980, -0.6198, -0.7725],
         [ 0.4966,  1.0122,  0.5398, -0.4667],
         [ 0.0226,  0.4265,  1.1643, -0.2096],
         ...,
         [-1.0784,  3.5687, -0.8109, -0.8474],
         [ 3.0712, -1.2661, -1.4790, -1.6210],
         [-1.5812, -1.4269,  3.4157, -1.1819]],

        [[ 0.4704,  1.8980, -0.6198, -0.7725],
         [ 0.4966,  1.0122,  0.5398, -0.4667],
         [ 0.0226,  0.4265,  1.1643, -0.2096],
         ...,
         [-1.0784,  3.5687, -0.8109, -0.8474],
         [ 3.0712, -1.2661, -1.4790, -1.6210],
         [-1.5812, -1.4269,  3.4157, -1.1819]],

        [[ 0.4704,  1.8980, -0.6198, -0.7725],
         [ 0.4966,  1.0122,  0.5398, -0.4667],
         [ 0.0226,  0.4265,  1.1643, -0.2096],
         ...,
         [-1.0817,  3.5680, -0.8097, -0.8459],
         [ 3.0685, -1.2722, -1.4845, -1.6223],
         [-1.5891, -1.4347,  3.4108, -1.1721]]])
                       idx  mean_recovery
model_name                               
FARNA                 20.5       0.321429
Rosetta               34.5       0.450000
ViennaRNA\n(2D only)   6.5       0.268641
gRNAde                48.5       0.574534
gRNAde_mod            62.5       0.574534
