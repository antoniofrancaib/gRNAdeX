/home/ml2169/miniforge3/envs/rna/lib/python3.10/site-packages/Bio/Application/__init__.py:39: BiopythonDeprecationWarning: The Bio.Application modules and modules relying on it have been deprecated.

Due to the on going maintenance burden of keeping command line application
wrappers up to date, we have decided to deprecate and eventually remove these
modules.

We instead now recommend building your command line and invoking it directly
with the subprocess module.
  warnings.warn(
/rds/user/ml2169/hpc-work/geometric-rna-design/test/../gRNAde.py:141: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  self.model.load_state_dict(torch.load(self.model_path, map_location=torch.device('cpu')))
Arguments:
  run_type: single
  avoid_sequences: None
Avoiding sequences: None
Instantiating gRNAde v0.3
    Using device: cuda:0
    Creating RNA graph featurizer for max_num_conformers=1
    Initialising GNN encoder-decoder model
    Loading model checkpoint: /rds/user/ml2169/hpc-work/geometric-rna-design/checkpoints/gRNAde_ARv1_1state_das.h5
Traceback (most recent call last):
  File "/rds/user/ml2169/hpc-work/geometric-rna-design/test/decoder_multi.py", line 61, in <module>
    gRNAde_module = gRNAde(split='das', max_num_conformers=1, gpu_id=0)
  File "/rds/user/ml2169/hpc-work/geometric-rna-design/test/../gRNAde.py", line 144, in __init__
    self.model = self.model.to(device)
  File "/home/ml2169/miniforge3/envs/rna/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1340, in to
    return self._apply(convert)
  File "/home/ml2169/miniforge3/envs/rna/lib/python3.10/site-packages/torch/nn/modules/module.py", line 900, in _apply
    module._apply(fn)
  File "/home/ml2169/miniforge3/envs/rna/lib/python3.10/site-packages/torch/nn/modules/module.py", line 900, in _apply
    module._apply(fn)
  File "/home/ml2169/miniforge3/envs/rna/lib/python3.10/site-packages/torch/nn/modules/module.py", line 900, in _apply
    module._apply(fn)
  File "/home/ml2169/miniforge3/envs/rna/lib/python3.10/site-packages/torch/nn/modules/module.py", line 927, in _apply
    param_applied = fn(param)
  File "/home/ml2169/miniforge3/envs/rna/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1326, in convert
    return t.to(
KeyboardInterrupt
